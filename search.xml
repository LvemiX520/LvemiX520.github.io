<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windsurf 无限试用指南</title>
      <link href="/posts/c3d8f88eabce/"/>
      <url>/posts/c3d8f88eabce/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="♾️-Windsurf-无限试用指南"><a href="#♾️-Windsurf-无限试用指南" class="headerlink" title="♾️ Windsurf 无限试用指南"></a>♾️ Windsurf 无限试用指南</h1><h2 id="📋-项目简介"><a href="#📋-项目简介" class="headerlink" title="📋 项目简介"></a>📋 项目简介</h2><p>本指南提供了一种使用临时谷歌邮箱在 <a href="https://codeium.com/">Codeium</a> 平台上无限次创建试用账号的方法，从而实现 Windsurf 的无限试用。通过使用 <a href="https://www.emailtick.com/">EmailTick</a> 生成临时谷歌邮箱地址，您可以轻松地在 Codeium 平台注册新账号，进而获取 Windsurf 的试用权限，延长试用期限。</p><h2 id="📧-关于临时谷歌邮箱"><a href="#📧-关于临时谷歌邮箱" class="headerlink" title="📧 关于临时谷歌邮箱"></a>📧 关于临时谷歌邮箱</h2><p>本指南推荐使用 <a href="https://www.emailtick.com/">EmailTick</a> 作为临时谷歌邮箱服务，因为它简单易用且稳定可靠。当然，您也可以自行在网上寻找其他临时谷歌邮箱服务，市面上有多种选择可供使用。</p><p>无论使用哪种服务，请确保它能够接收验证邮件，这对于完成 Codeium 的注册流程至关重要。谷歌邮箱在 Codeium 注册时通常有更高的成功率，因此本指南专注于临时谷歌邮箱服务。</p><h2 id="⚙️-使用流程"><a href="#⚙️-使用流程" class="headerlink" title="⚙️ 使用流程"></a>⚙️ 使用流程</h2><h3 id="步骤-1-生成临时谷歌邮箱"><a href="#步骤-1-生成临时谷歌邮箱" class="headerlink" title="步骤 1: 生成临时谷歌邮箱"></a>步骤 1: 生成临时谷歌邮箱</h3><ol><li>访问 <a href="https://www.emailtick.com/">EmailTick</a></li><li>网站会自动生成一个临时谷歌邮箱地址</li><li>点击”复制”按钮复制邮箱地址</li></ol><h3 id="步骤-2-在-Codeium-注册新账号"><a href="#步骤-2-在-Codeium-注册新账号" class="headerlink" title="步骤 2: 在 Codeium 注册新账号"></a>步骤 2: 在 Codeium 注册新账号</h3><ol><li>访问 <a href="https://codeium.com/account/register">Codeium 注册页面</a></li><li>将复制的临时谷歌邮箱粘贴到邮箱输入框</li><li>填写任意姓名（可随意填写）</li><li>设置密码（请记住您的密码以便登录）</li><li>点击”下一步”按钮</li></ol><h3 id="步骤-3-验证邮箱"><a href="#步骤-3-验证邮箱" class="headerlink" title="步骤 3: 验证邮箱"></a>步骤 3: 验证邮箱</h3><ol><li>返回 <a href="https://www.emailtick.com/">EmailTick</a></li><li>等待 Codeium 发送的验证邮件（通常在几秒钟内到达）</li><li>打开验证邮件并复制验证码</li><li>返回 Codeium 注册页面，输入验证码</li><li>完成注册流程</li></ol><h3 id="步骤-4-安装并登录-Windsurf"><a href="#步骤-4-安装并登录-Windsurf" class="headerlink" title="步骤 4: 安装并登录 Windsurf"></a>步骤 4: 安装并登录 Windsurf</h3><ol><li>下载并安装 Windsurf</li><li>使用刚注册的 Codeium 账号登录 Windsurf</li><li>开始使用 Windsurf 的各项功能</li></ol><h3 id="步骤-5-试用期结束后"><a href="#步骤-5-试用期结束后" class="headerlink" title="步骤 5: 试用期结束后"></a>步骤 5: 试用期结束后</h3><ol><li>试用期结束后，重复步骤 1-4</li><li>使用新的临时谷歌邮箱重新注册 Codeium 账号并登录 Windsurf</li><li>无限循环此过程，持续享受 Windsurf 服务</li></ol><h2 id="🔄-流程图"><a href="#🔄-流程图" class="headerlink" title="🔄 流程图"></a>🔄 流程图</h2><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD    A([开始]) --&gt; B(生成邮箱)    B --&gt; C(复制邮箱)    C --&gt; D(访问Codeium)    D --&gt; E(填写信息)    E --&gt; F(点击下一步)    F --&gt; G(查看验证码)    G --&gt; H(输入验证码)    H --&gt; I(登录Windsurf)    I --&gt; J{试用结束?}    J --&gt;|是| B    J --&gt;|否| K(继续使用)    K --&gt; J  </pre></div><p>步骤说明：</p><ol><li>访问 EmailTick 生成临时谷歌邮箱</li><li>复制临时谷歌邮箱地址</li><li>访问 Codeium 注册页面</li><li>粘贴临时谷歌邮箱并填写信息</li><li>点击下一步按钮</li><li>返回 EmailTick 查看验证码</li><li>在 Codeium 输入验证码</li><li>完成注册，登录 Windsurf</li><li>判断试用期是否结束，如果结束则重新开始流程，否则继续使用</li></ol><h2 id="💡-小技巧"><a href="#💡-小技巧" class="headerlink" title="💡 小技巧"></a>💡 小技巧</h2><ul><li>如果 EmailTick 暂时无法使用，您可以自行在网上搜索其他临时谷歌邮箱服务</li><li>谷歌邮箱在 Codeium 注册时通常有更高的成功率，因此本指南专注于临时谷歌邮箱</li><li>建议记录您使用过的邮箱和对应的密码，以便需要时查阅</li><li>每次创建新账号时，请确保使用全新的临时邮箱地址</li></ul><h2 id="⚠️-免责声明"><a href="#⚠️-免责声明" class="headerlink" title="⚠️ 免责声明"></a>⚠️ 免责声明</h2><p>本项目仅用于学习和研究目的。请遵守相关服务条款和规定。滥用此方法可能违反 Windsurf 和 Codeium 的服务条款。用户需自行承担使用此方法的风险和责任。</p><hr><div align="center"><p><strong>🚀 快速开始使用 Windsurf 的无限试用之旅！</strong></p></div><blockquote><p>本指南来自 GitHub 仓库：<a href="https://github.com/LvemiX520/Windsurf-TempMail-UnlimitedTrial">LvemiX520&#x2F;Windsurf-TempMail-UnlimitedTrial</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windsurf </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不知不觉第一学期就结束了</title>
      <link href="/posts/356ac4705cf1/"/>
      <url>/posts/356ac4705cf1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>个人感概</strong>：时间真快啊，不知不觉就第一学期就结束了，留下的遗憾还是藏在心里吧。</p><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h1 id="2023年"><a href="#2023年" class="headerlink" title="2023年"></a>2023年</h1></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="09月"><a href="#09月" class="headerlink" title="09月"></a>09月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;由于过了很久了，军训忘记是几号了，大概是5号或者6号，军训持续了15天，前几天只是练一些稍息、立正、跨立、停止间转法、三大步伐的行进与立定、步法变换、坐下、蹲下、起立、脱帽、戴帽，军训我觉得我们教官比别的教官挺好，管我们不严。</p><p>&emsp;&emsp;本人体力也是很拉，当时练的是真累，但是也坚持下去了，军训时间中段，每个班都要调到别的队伍去练一些技能。本人的话被调到别的教官那练习<strong>擒敌拳</strong>，很不情愿的练这个技能，只想快点结束军训……</p><p>&emsp;&emsp;我也没有忘记原本的目标，终于在12号第一次成功搭建这个博客，当时很有成就感，于是稍微通宵优化一下博客嘿嘿༼ つ ◕_◕ ༽つ。</p><p>&emsp;&emsp;军训最后几天就是彩排，展示各个队伍军训技能，基本上一彩排就要很久，最后几天也有过到操场晚上举行一些活动，例如唱歌、表演……</p><p>最后学校也是无人机完整的记录整个这次军训各个技能以及走场，结束了……</p><p>由于军训结束了，正常上课（计算机课并没有讲什么，记得当时老师还在如何安装软件做准备），之后就是中秋节加国庆节放假，挺爽的，我也是玩了好几天在家。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;上旬时间基本上都在优化博客，也有自己在自学<strong>Java</strong>和<strong>前端</strong>，大部分在博客这块。中旬的时候，第一次班上举行去团建，挺好的，也是很久没有过这么多人的活动，去团建的那一天，刚好学校筛选去参加<strong>WPS</strong>考试比赛（和高中朋友），当时也是没赶上和班上同学一起坐车去，不过有高中朋友一起打车去，团建地方也没多远。</p><p>&emsp;&emsp;到地方了，其实就是像来到乡下一样，不过有很多游乐设施，晚上还有室友专门烤肉吃，嘿嘿真的香。</p><p>&emsp;&emsp;下旬的话10月24号，<strong>1024</strong>程序员快乐，也学了几天算法，之后放弃了，后面挺难的。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;每天都是在寝室搞学习，所以说我和朋友去南昌玩了两天，去了南昌美术馆和南昌八一起义纪念馆，挺有有意思的。之后也是看到鸿蒙<strong>ArkTS</strong>语言也浅浅的尝试了一下，个人觉得很有意思。</p><p>&emsp;&emsp;也是快放寒假了，还要在学习通刷课，学习通的机制是真恶心，不能离开页面也不能调倍数，中途还有题目，不过有虚拟机解决问题。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;这个月是比较有意思的，13号也是参加了第一次蓝桥杯，很激动。不过看了比赛大纲，真的有点超前了，学的东西是真的多，此时我在学到JS还没学完，说实话自己没有太大的信心，想起了创建博客的那一刻我既然成功搭建了，那蓝桥杯应该努力一下，毕竟还有5个月。于是我天天刷课。</p><p>&emsp;&emsp;25号圣诞节，靠我学了这么多天的JS想做一个圣诞树（<strong>该文件找不到文件了</strong>），做完了，但是自适应很难受，很烦。</p></div></div></div><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><h1 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h1></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="01月"><a href="#01月" class="headerlink" title="01月"></a>01月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;这个月稍微学了不是蓝桥杯大纲的范围，<strong>Sass</strong>（CSS预处理器）算是在以后进入IT行业，也是要学的。此时蓝桥杯学的进度也才<strong>35%<strong>。我也没想到我学了很快，已经开始学</strong>Vue3</strong>，至于我不学<strong>2</strong>，觉得毕业了之后可能会很少接触到<strong>Vue2</strong>。放寒假了（作业就是刷学习通课）。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="02月"><a href="#02月" class="headerlink" title="02月"></a>02月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;春节将至，个人在家玩的挺嗨，也稍微往后面学了，原本是打算去超市上几个星期的工，家里人也是一直说我学习不行就找个女朋友。元宵节过后就开始新的一轮，上课🤣</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="03月"><a href="#03月" class="headerlink" title="03月"></a>03月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;<strong>蓝桥杯</strong>还有1个月多就要考了，我最近也是玩游戏上头了，学的东西还没有超过**50%**，我心想（只能学多少就学多少），学的都不是很牢固，虽然记了笔记，但是我没有那么多时间去牢固了，一头扎下去，往后学了😑。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="04月"><a href="#04月" class="headerlink" title="04月"></a>04月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;距离<strong>蓝桥杯</strong>还有13天，此时只能临时抱佛脚了，我也只能期待题目不是很难。最后我也其实没有学完，学了大概，复习也没有复习很多。嘿嘿很开心，我和土狗一起坐车去考场，胆怯没有坐一起，但是很开心。考试了，我也是很紧张。</p><p>&emsp;&emsp;考完了，不过很担心土狗，编译器土狗没用过，土狗就做了几道题就走了。我的话心已经凉了一大半，我基本都做了一半效果，不知道算不算分数。</p><p>&emsp;&emsp;29号成绩出来了，我是没想到能考到省三，不过心里挺高兴的，通过自己的努力。</p><p>&emsp;&emsp;报了<strong>软考评测师</strong>，想尝试一下大一考<strong>评测师</strong>。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="05月"><a href="#05月" class="headerlink" title="05月"></a>05月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;考完试，心情有点不是很好，干啥都心累，这个月没有这么学习，就是和室友玩游戏、追番，最近也是因为<strong>Microsoft</strong>正版账号最低折，也是59￥买下</p><p>&emsp;&emsp;20号，有人给我送花了，我挺惊讶的，我只能说很感谢，我觉得并不适合，很抱歉。</p><p>&emsp;&emsp;26号，去考<strong>软考评测师</strong>了，心已经凉了一半了，选择题和简答题是真的难啊，</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="06月"><a href="#06月" class="headerlink" title="06月"></a>06月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;这个月也是和上一个月一样的心态，但是稍微往后学学数据库，也是准备报<strong>自考本科</strong>，觉得暑假可能没有太多事。</p><p>&emsp;&emsp;10号端午节，土狗从老家带到学校，给我了粽子和咸蛋（其实是我想找土狗要的😊），虽然回礼就两根棒棒糖，其实我想考完试送个礼物。</p><p>&emsp;&emsp;14号体育考试第一场，前3天，我早上6点多种起来下去练自颠气排球，主要要颠60个及格。考试期间，我也是临场发挥及格了。土狗很强啊，我呜呜呜。</p><p>&emsp;&emsp;17号有点低烧，可能上次体育考试出汗，又吹空调，着凉了，不过之后好了很多。</p><p>&emsp;&emsp;这个月很忙啊，之前很早就布置了拍<strong>心理剧</strong>视频，21号星期五交，我和组员也是四天内拍完，我负责剪辑和主演，自己看了自己的视频，自己都快绷不住了，好傻啊我。</p><p>&emsp;&emsp;21号也刚刚好是体育最后一次考试了，考两个人互相颠6个来回，我也是超常发挥成功满分，总得逼自己一吧。</p><p>&emsp;&emsp;下周是实训周，每天6节课<strong>Java</strong>，唯独星期二4节课。</p><p>&emsp;&emsp;实训周并没有讲什么主要的内容，就是讲课程一些题。考试7月1号期末，主要考<strong>英语</strong>、<strong>习思</strong>、<strong>Java</strong>、<strong>JavaScript</strong>，最晚考到8点半，</p><p>实训周也是在复习，其实就是背答案，老师基本上把题目都说了大概，我主要担心英语和习思，我还是好好努力，早点毕业，不挂科。</p><p>&emsp;&emsp;28号，我觉得我还是努力提升自己吧，不想再有什么情感了……</p><p>&emsp;&emsp;29号，今天和高中小柴去报考二级了，我报Web程序设计，决定了走鸿蒙这道路，暑假加油。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><h2 id="07月"><a href="#07月" class="headerlink" title="07月"></a>07月</h2></div></div><div class='timeline-item-content'><p>&emsp;&emsp;1号，今天考四门，<strong>Java</strong>和<strong>网页设计</strong>我很信心过了，但<strong>英语</strong>和<strong>习近平新时代特色社会主义概述</strong>估计没过，最近可能心事太多了烦，有个老师监考两场好严啊呜呜呜倒闭。8号和亲人去<strong>杭州</strong>玩一玩嘿嘿，释放一下压力。</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 大学生涯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记</title>
      <link href="/posts/29d768b9891b/"/>
      <url>/posts/29d768b9891b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL基本操作"><a href="#MySQL基本操作" class="headerlink" title="MySQL基本操作"></a>MySQL基本操作</h1><div class="note info flat"><p>”<code>[ ]</code>“中的意思可选项 </p></div><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><p>DCL英文全称是Data Control Language（数据控制语言），用来管理数据库用户、控制数据库的访问权限。</p><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span>  <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;host&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;密码&#x27;</span>;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> host值设置为 localhost 表示该用户只能在本机登录</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> host值设置为 <span class="operator">%</span> 表示该用户可以进行远程登录</span><br></pre></td></tr></table></figure><h4 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>; <span class="operator">/</span><span class="operator">/</span>赋予全部权限</span><br><span class="line">FLUSH PRIVILEGES; <span class="operator">/</span><span class="operator">/</span>刷新权限</span><br></pre></td></tr></table></figure><h4 id="查看所有用户"><a href="#查看所有用户" class="headerlink" title="查看所有用户"></a>查看所有用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 数据库名字.<span class="keyword">user</span>; 查看所有用户</span><br></pre></td></tr></table></figure><h3 id="增删改查数据库"><a href="#增删改查数据库" class="headerlink" title="增删改查数据库"></a>增删改查数据库</h3><table><thead><tr><th>功能</th><th>SQL</th></tr></thead><tbody><tr><td>创建数据库</td><td>create database [if not exists] 数据库名字</td></tr><tr><td>删除数据库</td><td>drop database 数据库名字</td></tr><tr><td>修改数据库</td><td>alter database 数据库名字</td></tr><tr><td>查询数据库</td><td>show databases</td></tr><tr><td>选择数据库</td><td>use 数据库名字</td></tr><tr><td>修改数据库编码</td><td>alter database 数据库名字 character set uft8</td></tr></tbody></table><div class="note info flat"><p>有中文字符数据库得属性字符集得uft8 </p></div><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><p>DDL英文全称是Data Definition Language（数据定义语言）在MySQL中用于定义数据库、表、字段等结构相关的操作</p><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [if <span class="keyword">not</span> <span class="keyword">exists</span>] 表名(</span><br><span class="line">    字段名<span class="number">1</span> 类型[(宽度)] [约束条件] [comment <span class="string">&#x27;字段说明&#x27;</span>],</span><br><span class="line">    字段名<span class="number">2</span> 类型[(宽度)] [约束条件] [comment <span class="string">&#x27;字段说明&#x27;</span>],</span><br><span class="line">    字段名<span class="number">3</span> 类型[(宽度)] [约束条件] [comment <span class="string">&#x27;字段说明&#x27;</span>]</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span> …………</span><br><span class="line">)[表的一些设置];</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">    age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span>,                        <span class="operator">/</span><span class="operator">/</span> 属性名<span class="number">1</span> 数据类型 备注,</span><br><span class="line">    height <span class="type">decimal</span>(<span class="number">5</span>,<span class="number">2</span>) comment <span class="string">&#x27;身高&#x27;</span>,             <span class="operator">/</span><span class="operator">/</span> 属性名<span class="number">2</span> 数据类型 备注,</span><br><span class="line">    id <span class="type">char</span>(<span class="number">8</span>) comment <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    name <span class="type">char</span>(<span class="number">128</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    birthday <span class="type">date</span> comment <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">    nowtime datetime comment <span class="string">&#x27;数据日期&#x27;</span>,</span><br><span class="line">    sex enum(<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>),</span><br><span class="line">    hobby <span class="keyword">set</span>(<span class="string">&#x27;唱歌&#x27;</span>,<span class="string">&#x27;跳舞&#x27;</span>,<span class="string">&#x27;打游戏&#x27;</span>) comment <span class="string">&#x27;爱好&#x27;</span>         <span class="operator">/</span><span class="operator">/</span> 最后一个数据不要写逗号</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span> …………</span><br><span class="line">);</span><br></pre></td></tr></table></figure><table><thead><tr><th>功能</th><th>SQL</th></tr></thead><tbody><tr><td>查看当前数据库的所有表名称</td><td>show tales</td></tr><tr><td>查看指定某个表的创建语句</td><td>show create table 表名</td></tr><tr><td>查看表结构</td><td>desc 表名</td></tr><tr><td>删除表</td><td>drop table 表名</td></tr></tbody></table><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><h5 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h5><table><thead><tr><th>数值类型</th><th>大小</th><th>有符号存储范围</th><th>无符号存储范围</th><th>含义</th></tr></thead><tbody><tr><td>tinyint</td><td>1字节</td><td>(-128,127)</td><td>(0,255)</td><td>小整数值</td></tr><tr><td>smalint</td><td>2字节</td><td>(-32768,32762)</td><td>(0,65535)</td><td>大整数值</td></tr><tr><td>mediumint</td><td>3字节</td><td>(-8388608,8388607)</td><td>(0,16777215)</td><td>大整数值</td></tr><tr><td>int或integer</td><td>4字节</td><td>(-2147483648,2147483647)</td><td>(0,4294967295)</td><td>大整数值</td></tr><tr><td>bigint</td><td>8字节</td><td>(-9233372036854775808，9223372036854775807)</td><td>(0，18446744073709551615)</td><td>极大整数值</td></tr><tr><td>float</td><td>4字节</td><td>(-3.402823466E+38，3.402823466E+38)</td><td>0,(1.175494351E-383.402 823 466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>double</td><td>8字节</td><td>(-1.7976931348623157E+308，1.7976931348623157E+308)</td><td>0(2.2250738585072014E-308，1.7976931348623157E+308)</td><td>双精度浮点数值</td></tr><tr><td>decimal</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>定点数值</td></tr></tbody></table><h5 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h5><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>char</td><td>0-255字节</td><td>定长字符串</td></tr><tr><td>varchar</td><td>0-65535字节</td><td>变长字符串</td></tr><tr><td>tinyblob</td><td>0-255字节</td><td>不超过 255个字符的二进制字符串</td></tr><tr><td>tinytext</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>blob</td><td>0-65535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>text</td><td>0-65535字节</td><td>长文本数据</td></tr><tr><td>mediumblob</td><td>0-16777215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>mediumtext</td><td>0-16777215字节</td><td>中等长度文本数据</td></tr><tr><td>longblob</td><td>0-4294960295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>longtext</td><td>0-4294960295字节</td><td>极大文本数据</td></tr></tbody></table><h5 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h5><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>date</td><td>3</td><td>1000-01-01&#x2F;9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>time</td><td>3</td><td>‘-838:59:59’’838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>year</td><td>1</td><td>1901&#x2F;2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>datetime</td><td>8</td><td>1000-01-01 00:00:00&#x2F;9999-12-31 23:59:59</td><td>YYYY-MM-DDHH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>timestamp</td><td>4</td><td>1970-01-01 00:00:00&#x2F;2038    结束时间是第2147483647秒，北京时间2038-1-1911:14:07，格林尼治时间2038年1月19日凌晨03:14:07</td><td>YYYYMMDD HHMMSS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="表的结构操作"><a href="#表的结构操作" class="headerlink" title="表的结构操作"></a>表的结构操作</h4><table><thead><tr><th>功能</th><th>SQL</th></tr></thead><tbody><tr><td>添加字段</td><td>alter table 表名 add 字段 类型(长度) [约束];</td></tr><tr><td>修改字段</td><td>alter table 表名 change 旧字段 新字段 类型(长度) [约束];</td></tr><tr><td>删除字段</td><td>alter table 表名 drop 字段;</td></tr><tr><td>复制表</td><td>create table 新表名 like 旧表名;  &#x2F;&#x2F; 仅复制结构，不复制数据</td></tr><tr><td>修改表名</td><td>rename table 表名 to 新表名;</td></tr></tbody></table><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><p>DML英文全称是Data Manipulation Language（数据操作语言），用来对数据库中表的数据记录进行更新。</p><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3</span>,字段<span class="number">4.</span>..) <span class="keyword">values</span> (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>); <span class="operator">/</span><span class="operator">/</span> 有几个字段就有几个值,一个字段对应一个值</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3</span>,字段<span class="number">4.</span>..)</span><br><span class="line">    <span class="keyword">values</span> (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>),</span><br><span class="line">       (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>),</span><br><span class="line">       (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>)...; </span><br><span class="line">       </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span> (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>); <span class="operator">/</span><span class="operator">/</span> 插入所有字段</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span> (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>),</span><br><span class="line">     (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>),</span><br><span class="line">     (值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,值<span class="number">4</span>)...;</span><br></pre></td></tr></table></figure><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段<span class="operator">=</span>值,字段<span class="operator">=</span>值...;</span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段<span class="operator">=</span>值,字段<span class="operator">=</span>值... <span class="keyword">where</span> 条件表达式; <span class="operator">/</span><span class="operator">/</span> 只有条件范围内修改数据</span><br><span class="line"><span class="comment">-- 例如 update stu set sid = 0001 where age &gt; 18</span></span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 判断条件; <span class="operator">/</span><span class="operator">/</span> 只有条件范围内修改数据</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名; <span class="operator">/</span><span class="operator">/</span> 删除该表所有数据</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br><span class="line"><span class="keyword">truncate</span> 表名;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p><strong>delete</strong> 和 <strong>truncate</strong> 原理不同, <strong>delete</strong> 只删除内容,而 <strong>truncate</strong>  类似于 <strong>drop</strong> <strong>table</strong> , 可以理解为是将整个表删除,然后再创建该表  </p></div><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><p>表只有一个主键，为字段添加主键这该字段列不能重复和空，表示唯一性。</p><p>创建单列主键有两种方式，一种是在定义字段的同时指定主键，一种是定义完字段之后指主键</p><h5 id="单例主键"><a href="#单例主键" class="headerlink" title="单例主键"></a>单例主键</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">字段名 数据类型 <span class="keyword">primary</span> key,</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">   ...</span><br><span class="line">   [<span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span>] <span class="keyword">primary</span> key(字段)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="联合主键"><a href="#联合主键" class="headerlink" title="联合主键"></a>联合主键</h5><p>所谓的联合主键，就是这个主键是由一张表中多个字段组成的。</p><div class="note warning flat"><p>1.当主键是由多个字段组成时，不能直接在字段名后面声明主键约束<br>2.一张表只能有一个主键，联合主键也是一个主键  </p></div><p>联合主键不能为<strong>NULL</strong>，所选的字段为主键，只要其中一个数据不一样都是允许</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">   ...</span><br><span class="line">   <span class="keyword">primary</span> key (字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3.</span>..)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表之后</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">primary</span> key(字段<span class="number">1</span>,字段<span class="number">2.</span>..); <span class="operator">/</span><span class="operator">/</span> 也可以之后等表创建完了，再添加主键</span><br></pre></td></tr></table></figure><h5 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">primary</span> key; <span class="operator">/</span><span class="operator">/</span> 会删除该表的单例主键或联合主键</span><br></pre></td></tr></table></figure><h5 id="自增长约束"><a href="#自增长约束" class="headerlink" title="自增长约束"></a>自增长约束</h5><p>在MySQL中，当主键定义为自增长后，这个主键的值就不再需要用户输入数据了，而由数据库系统根据定义自动赋值。每增加一条记录，主键会自动以相同的步长进行增长。</p><p>通过给字段添加<strong>auto_increment</strong>属性来实现主键自增长</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line">字段名 数据类型 <span class="keyword">primary</span> key auto_increment;</span><br></pre></td></tr></table></figure><p>默认情况下，<strong>auto_increment</strong>的初始值是<strong>1</strong>，每新增一条记录，字段值自动加1。</p><p>一个表中只能有一个字段使用<strong>auto_increment</strong>约束，且该字段必须有唯一索引l，以避免序号重复（即为主键或主键的一部分）。</p><ol><li><strong>auto_increment</strong>约束的字段必须具备<strong>NOTNULL</strong>属性。</li><li><strong>auto_increment</strong>约束的字段只能是整数类型（<strong>TINYINT</strong>、<strong>SMALLINT</strong>、<strong>INT</strong>、<strong>BIGINT</strong>）等。</li><li><strong>auto_increment</strong>约束字段的最大值受该字段的数据类型约束，如果达到上限，<strong>auto_increment</strong>就会失效。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    字段 数据类型 <span class="keyword">primary</span> key auto_increment</span><br><span class="line">   ...</span><br><span class="line">)auto_increment <span class="operator">=</span> 初始值 ; <span class="operator">/</span><span class="operator">/</span> 那么会从初始值开始<span class="operator">+</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表之后</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    字段 数据类型 <span class="keyword">primary</span> key auto_increment</span><br><span class="line">    ...</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 auto_increment <span class="operator">=</span> 初始值 ;</span><br></pre></td></tr></table></figure><ul><li><p><strong>delete</strong>和<strong>truncate</strong>在删除后自增列的变化</p></li><li><p><strong>delete</strong> 数据之后自动增长从断点开始</p></li><li><p><strong>truncate</strong> 数据之后自动增长从初始值开始</p></li></ul><h5 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h5><p>MySQL 非空约束（not null）指字段的值不能为空。对于使用了非空约束的字段，如果用户在添加数据时没有指定值，数据库系统就会报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line">字段名 数据类型 <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表之后</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 数据类型 <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 数据类型;</span><br></pre></td></tr></table></figure><h5 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h5><p>唯一约束（<strong>Unique</strong> <strong>Key</strong>）是指所有记录中字段的值不能重复出现（可以为<strong>NULL</strong>）。例如，为id字段加上唯一性约束后，每条记录的id值都是唯一的，不能出现重复的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line">字段名 数据类型 <span class="keyword">unique</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表之后</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 约束名 <span class="keyword">unique</span>(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> index 唯一约束名 ;<span class="operator">/</span><span class="operator">/</span> 创建表时没有约束名，默认用字段名</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>在MySQL中 <strong>NULL</strong>和任何值都不相同，甚至连自己都不相同 </p></div><h5 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h5><p>MySQL默认值约束用来指定某列的默认值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line">字段名 数据类型 <span class="keyword">default</span> 默认值</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表之后</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 类型 <span class="keyword">default</span> 默认值;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除默认约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 类型 <span class="keyword">default</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h5 id="零填充约束"><a href="#零填充约束" class="headerlink" title="零填充约束"></a>零填充约束</h5><ol><li>入数据时，当该字段的值的长度小于定义的长度时，会在该值的前面补上相应的0</li><li><strong>zerofill</strong> 默认为<strong>int(10)</strong></li><li>当使用 <strong>zerofill</strong> 时，默认会自动加<strong>unsigned</strong>（无符号）属性，使用 <strong>unsigned</strong> 属性后，数值范围是原值的2倍，例如，有符号为-128<del>+127，无符号为0</del>256。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表时</span></span><br><span class="line">字段名 数据类型 zerofill</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> zerofill 默认<span class="type">int</span>(<span class="number">10</span>)，当插入 <span class="number">1</span> 的时候就会自动在前面补<span class="number">9</span>个零(<span class="number">0000000001</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除零填充约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段 类型;</span><br></pre></td></tr></table></figure><div class="note danger flat"><p><strong>zerofill</strong> 只是显示效果，当删除零填充约束，补零并没有存储只是显示 </p></div><h6 id="无符号"><a href="#无符号" class="headerlink" title="无符号"></a>无符号</h6><p><strong>unsigned</strong></p><p>使用属性后无符号范围在0-256</p><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><p>DQL英文全称是Data Query Language（数据查询语言）是数据库领域中用来查询数据的语言</p><ol><li>数据库管理系统一个重要功能就是数据查询数据查询不应只是简单返回数据库中存储的数据，还应该根据需要对数据进行筛选以及确定数据以什么样的格式显示。</li><li>MySQL提供了功能强大、灵活的语句来实现这些操作。</li><li>MySQL数据库使用select语句来查询数据。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 语法格式</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">[<span class="keyword">all</span><span class="operator">|</span><span class="keyword">distinct</span>]</span><br><span class="line"><span class="operator">&lt;</span>目标字段的表达式<span class="number">1</span><span class="operator">&gt;</span> [别名],</span><br><span class="line"><span class="operator">&lt;</span>目标字段的表达式<span class="number">2</span><span class="operator">&gt;</span> [别名]...</span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span>表名或视图名<span class="operator">&gt;</span> [别名],<span class="operator">&lt;</span>表名或视图名<span class="operator">&gt;</span> [别名]...</span><br><span class="line">[<span class="keyword">where</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span>]</span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span>]</span><br><span class="line">[<span class="keyword">having</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span>]</span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>字段<span class="operator">&gt;</span> [<span class="keyword">asc</span><span class="operator">|</span><span class="keyword">desc</span>]]</span><br><span class="line">[limit <span class="operator">&lt;</span>数字或者列表<span class="operator">&gt;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 简化版语法</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> 或 字段 <span class="keyword">from</span> 表 <span class="keyword">where</span> 条件</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表的所有数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询某字段或多个</span></span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1.</span>字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"> <span class="comment">-- 别名查询,使用的关键字是 as（as可以省略）. // 在以后多个表查询可以用别名来区分，更简化代码</span></span><br><span class="line"><span class="comment">-- 表别名</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 [<span class="keyword">as</span>] 别名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 列别名</span></span><br><span class="line"><span class="keyword">select</span> 字段 [<span class="keyword">as</span>] 别名 <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去掉重复值</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段 <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询结果是表达式(运算查询)</span></span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span><span class="operator">+</span><span class="number">10</span>,字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名; <span class="operator">/</span><span class="operator">/</span> 将某字段数据<span class="operator">+</span><span class="number">10</span></span><br></pre></td></tr></table></figure><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><h5 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h5><table><thead><tr><th>算术运算符</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加法运算</td></tr><tr><td>-</td><td>减法运算</td></tr><tr><td>*</td><td>乘法运算</td></tr><tr><td>&#x2F; 或 DIV</td><td>除法运算，返回商</td></tr><tr><td>% 或 MOD</td><td>求余运算，返回余数</td></tr></tbody></table><h5 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h5><table><thead><tr><th>比较运算符</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt; 和 &lt;&#x3D;</td><td>小于和小于等于</td></tr><tr><td>&gt; 和 &gt;&#x3D;</td><td>大于和大于等于</td></tr><tr><td>&lt;&#x3D;&gt;</td><td>安全的等于，两个操作码均为<strong>NULL</strong>时，其所得值为1；而当一个操作码为<strong>NULL</strong>时，其所得值为0</td></tr><tr><td>&lt;&gt;或!&#x3D;</td><td>不等于</td></tr><tr><td>is null 或 ISNULL</td><td>判断一个值是否为<strong>NULL</strong></td></tr><tr><td>is not null</td><td>判断一个值是否不为<strong>NULL</strong></td></tr><tr><td>least</td><td>当有两个或多个参数时，返回最小值  （如果参数有<strong>NULL</strong>则不比较，结果返回<strong>NULL</strong>）</td></tr><tr><td>greatest</td><td>当有两个或多个参数时，返回最大值  （如果参数有<strong>NULL</strong>则不比较，结果返回<strong>NULL</strong>）</td></tr><tr><td>between and</td><td>判断一个值是否落在两个值之间</td></tr><tr><td>in</td><td>判断一个值时in列表中的任意一个值</td></tr><tr><td>not in</td><td>判断一个值不是in列表中的任意一个值</td></tr><tr><td>like</td><td>通配符匹配 （例： ‘%三%’ ，%用来表示匹配任意字符，%在最前，表示匹配 ‘三’ 为结尾。’_ 三%’，_匹配单个字符,表示第二个字为 ‘三’ ）</td></tr><tr><td>regexp</td><td>正则表达式匹配</td></tr></tbody></table><h5 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h5><table><thead><tr><th>逻辑运算符</th><th>说明</th></tr></thead><tbody><tr><td>NOT 或者 !</td><td>逻辑非</td></tr><tr><td>AND 或者 &amp;&amp;</td><td>逻辑与</td></tr><tr><td>OR 或者 ||</td><td>逻辑或</td></tr><tr><td>XOR</td><td>逻辑异或</td></tr></tbody></table><p>位运算符</p><table><thead><tr><th>位运算符</th><th>说明</th></tr></thead><tbody><tr><td>|</td><td>按位或</td></tr><tr><td>&amp;</td><td>按位与</td></tr><tr><td>^</td><td>按位异或</td></tr><tr><td>&lt;&lt;</td><td>按位左移</td></tr><tr><td>&gt;&gt;</td><td>按位右移</td></tr><tr><td>~</td><td>按位取反，反转所有比特</td></tr></tbody></table><p>位运算符是在二进制数上进行计算的运算符。位运算会先将操作数变成二进制数，进行位运算。然后再将计算结果从二进制数变回十进制数。</p><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><h5 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h5><p>如果我们需要对读取的数据进行排序，我们就可以使用<strong>MySQL</strong>的<strong>order by</strong>子句来设定你想按哪个字段哪种方式来进行排序，再返回搜索结果。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">字段<span class="number">1</span>,字段<span class="number">2</span>,...</span><br><span class="line"><span class="keyword">from</span> 表名</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 字段<span class="number">1</span> [<span class="keyword">asc</span><span class="operator">|</span><span class="keyword">desc</span>],字段<span class="number">2</span> [<span class="keyword">asc</span><span class="operator">|</span><span class="keyword">desc</span>] ...</span><br></pre></td></tr></table></figure><ol><li><strong>asc</strong>代表升序，<strong>desc</strong>代表降序<strong>如果不写默认升序</strong></li><li><strong>order by</strong>用于子句中可以支持单个字段，，多个字段，表达式，函数，别名</li><li><strong>order by</strong>子句，放在查询语句的最后面。<strong>LIMIT</strong>子句除外</li><li><strong>order by</strong>后边跟一个字段，则只会按照该字段的值进行排序该字段必须为数值类型或者英文和数字、字符串类型或者时间</li><li>如果<strong>order by</strong>后边跟多个字段，先安第一个字段来排序，如果第一个字段相同，则按照第二字段来排</li></ol><h5 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h5><p>之前我们做的查询都是横向查询，它们都是根据条件一行一行的进行判断，而使用聚合函数查询是纵向查询，它是对一列的值进行计算，然后返回一个单一的值；另外聚合函数会忽略空值。</p><table><thead><tr><th>聚合函数</th><th>作用</th></tr></thead><tbody><tr><td>count()</td><td>统计指定列不为<strong>NULL</strong>的记录行数;</td></tr><tr><td>sum()</td><td>计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为0</td></tr><tr><td>max()</td><td>计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算；</td></tr><tr><td>min()</td><td>计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算；</td></tr><tr><td>avg()</td><td>计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为0</td></tr></tbody></table><ol><li><p>count函数对null值的处理</p><p>如果count函数的参数为星号（*），则统计所有记录的个数。而如果参数为某字段，不统计含null值的记录个数。</p></li><li><p>sum和avg函数对null值的处理</p><p>这两个函数忽略null值的存在，就好象该条记录不存在一样。</p></li><li><p>max和min函数对null值的处理</p><p>max和min两个函数同样忽略null值的存在。</p></li></ol><h5 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h5><h6 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h6><p>分组查询是指使用<strong>group by</strong>字句对查询信息进行分组。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组字段;</span><br></pre></td></tr></table></figure><p>如果要进行分组的话，则<strong>SELECT</strong>子句之后，只能出现分组的字段和统计函数，其他的字段不能出现：</p><h6 id="having"><a href="#having" class="headerlink" title="having"></a>having</h6><ol><li>分组之后对统计结果进行筛选的话必须使用<strong>having</strong>，不能使用<strong>where</strong></li><li><strong>where</strong>子句用来筛选FROM子句中指定的操作所产生的行</li><li><strong>group by</strong> 子句用来分组 WHERE 子句的输出。</li><li><strong>having</strong>子句用来从分组的结果中筛选行</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2.</span>.． <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组字段 <span class="keyword">having</span> 分组条件;</span><br></pre></td></tr></table></figure><h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h5><h6 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h6><p>分页查询在项目开发中常见，由于数据量很大，显示屏长度有限，因此对数据需要采取分页显示方式。例如数据共有30条，每页显示5条，第一页显示1-5条，第二页显示6-10条。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名 limit n;</span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名 limit m,n;</span><br><span class="line">m：整数，表示从第几条索引开始，计算方式（当前页<span class="number">-1</span>）＊每页显示条数</span><br><span class="line">n：整数，表示查询多少条数据</span><br></pre></td></tr></table></figure><h5 id="insert-into-seleect"><a href="#insert-into-seleect" class="headerlink" title="insert into seleect"></a>insert into seleect</h5><p>将一张表的数据导入到另一张表中，可以使用该语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段<span class="number">1</span>,字段<span class="number">2.</span>..) <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2.</span>.. <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="comment">-- 把右边表内容复制到左边的表，字段要匹配</span></span><br></pre></td></tr></table></figure><p>要求目标表（左边）必须存在</p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>​正则表达式(regular expression)描述了一种字符串匹配的规则，正则表达式本身就是一个字符串，使用这个字符串来描述、用来定义匹配规则，匹配一系列符合某个句法规则的字符串。在开发中，正则表达式通常被用来检索、替换那些符合某个规则的文本。</p><p>​MySQL通过<strong>REGEXP</strong>关键字支持正则表达式进行字符串匹配。</p><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>^</td><td>匹配输入字符串的开始位置。</td></tr><tr><td>$</td><td>匹配输入字符串的结束位置。</td></tr><tr><td>.</td><td>匹配除”\n”之外的任何单个字符。</td></tr><tr><td>[…]</td><td>字符集合。匹配所包含的任意一个字符。例如，’[ abc ]’可以匹配“plain”中的’a’。</td></tr><tr><td>[^…]</td><td>负值字符集合。匹配未包含的任意字符。例如，’[ ^abc ]’ 可以匹配”plain”中的’p’。</td></tr><tr><td>p1|p2|p3</td><td>匹配p1 或p2 或p3。例如，‘z|food’能匹配”z”或”food”。”(z|f)ood’则匹配”zood”或”food”。</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。例如，zo*能匹配”z”以及”zoo”。等价于{0,}。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。例如，’zo+’能匹配”zo”以及”zoo”，但不能匹配”z”。+等价于{1,}]。</td></tr><tr><td>{n}</td><td>n 是一个非负整数。匹配确定的n次。例如，‘o{2}’不能匹配”Bob”中的’o’，但是能匹配”food” 中的两个o。</td></tr><tr><td>{n,m}</td><td>m 和n 均为非负整数，其中n&lt;&#x3D; m。最少匹配n次且最多匹配m 次。</td></tr></tbody></table><h3 id="多表操作"><a href="#多表操作" class="headerlink" title="多表操作"></a>多表操作</h3><p>关系：</p><p>MySQL多表之间的关系可以概括为<strong>：一对一、一对多&#x2F;多对一关系，多对多</strong></p><h4 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h4><p>MySQL外键约束（FOREIGN KEY）是表的一个特殊字段，经常与主键约束一起使用。对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表（父表），外键所在的表就是从表（子表）。</p><p><strong>特点</strong></p><ul><li>主表必须已经存在于数据库中，或者是当前正在创建的表。</li><li>必须为主表定义主键。</li><li>主键不能包含空值，但允许在外键中出现空值。也就是说，只要外键的每个非空值出现在指定的主键中，这个外键的内容就是正确的。</li><li>在主表的表名后面指定列名或列名的组合。这个列或列的组合必须是主表的主键或候选键。</li><li>外键中列的数目必须和主表的主键中列的数目相同。</li><li>外键中列的数据类型必须和主表主键中对应列的数据类型相同。</li></ul><h5 id="创建外键约束"><a href="#创建外键约束" class="headerlink" title="创建外键约束"></a>创建外键约束</h5><p>在创建表时设置外键约束，通过<code>foreign key</code>关键词字来指定外键，语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">constraint</span> <span class="operator">&lt;</span>外键名<span class="operator">&gt;</span>] <span class="keyword">foreign</span> key(字段名[,字段名<span class="number">1</span>,字段名<span class="number">2.</span>..]) <span class="keyword">references</span> <span class="operator">&lt;</span>主表名<span class="operator">&gt;</span>(主键列[,主键列<span class="number">1</span>,主键列<span class="number">2.</span>..]);</span><br></pre></td></tr></table></figure><p>外键约束也可以在修改表时添加，但是添加外键约束的前提是：从表中外键列中的数据必须与主表中主键列中的数据一致或者是没有数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>数据表名<span class="operator">&gt;</span> <span class="keyword">add</span> <span class="keyword">constraint</span> <span class="operator">&lt;</span>外键名<span class="operator">&gt;</span> <span class="keyword">foreign</span> key(字段名[,字段名<span class="number">1</span>,字段名<span class="number">2.</span>..]) <span class="keyword">references</span> <span class="operator">&lt;</span>主表名<span class="operator">&gt;</span>(主键列[,主键列<span class="number">1</span>,主键列<span class="number">2.</span>..]);</span><br></pre></td></tr></table></figure><ol><li>数据插入<ul><li>必须先给主表添加数据</li><li>给从表添加数据时，外键列的值不能随便写，必须依赖主表的主键列</li></ul></li><li>删除数据<ul><li>主表的数据被从表依赖时，不能删除，否者可以删除</li><li>从表的数据可以随便删除</li></ul></li></ol><h5 id="删除外键约束"><a href="#删除外键约束" class="headerlink" title="删除外键约束"></a>删除外键约束</h5><p>当一个表中不需要外键约束时，就需要从表中将其删除。外键一旦删除，就会解除主表和从表间的关联关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">foreign</span> key <span class="operator">&lt;</span>外键约束名<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><h4 id="多表联合查询"><a href="#多表联合查询" class="headerlink" title="多表联合查询"></a>多表联合查询</h4><h5 id="交叉连接查询"><a href="#交叉连接查询" class="headerlink" title="交叉连接查询"></a>交叉连接查询</h5><ul><li>交叉连接查询返回被连接的两个表所有数据行的笛卡尔积</li><li>笛卡尔积可以理解为一张表的每一行去和另外一张表的任意一行进行匹配</li><li>假如A表有m行数据，B表有n行数据，则返回m*n行数据</li><li>笛卡尔积会产生很多冗余的数据，后期的其他查询可以在该集合的基础上进行条件筛选</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表<span class="number">1</span>,表<span class="number">2.</span>..;</span><br></pre></td></tr></table></figure><h5 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h5><p>内连接查询求多张表的交集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">隐式内连接（SQL92标准）:  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">1</span>,表名<span class="number">2</span> <span class="keyword">where</span> 条件;</span><br><span class="line">显示内连接（SQL99标准）:  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">1</span> [<span class="keyword">inner</span>] <span class="keyword">join</span> 表名<span class="number">2</span> <span class="keyword">on</span> 条件；</span><br></pre></td></tr></table></figure><h5 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h5><p>外连接分为左外连接（<strong>left outer join</strong>）、右外连接（<strong>right outer join</strong>），满外连接(full outer join)</p><div class="note warning flat"><p><strong>oracle</strong>里面有<strong>full join</strong>，可是在MySQL对<strong>full join</strong>支持的不好。我们可以使用<strong>union</strong>来达到目的。</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">左外连接：</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">1</span> <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表名<span class="number">2</span> <span class="keyword">on</span> 条件;</span><br><span class="line">右外连接：</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">1</span> <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表名<span class="number">2</span> <span class="keyword">on</span> 条件;</span><br><span class="line">满外连接: </span><br><span class="line"><span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">1</span> <span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> 表名<span class="number">2</span> <span class="keyword">on</span> 条件;</span><br></pre></td></tr></table></figure><h4 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h4><p>​from 子句可以指定多个数据源，实现多表连接，继而实现从多个表中检索数据</p><p>例（以三个表为例）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.字段, b.字段, c.字段 <span class="keyword">from</span> 表名<span class="number">1</span> a </span><br><span class="line">[连接类型] <span class="keyword">join</span> 表名<span class="number">2</span> b <span class="keyword">on</span> a.字段<span class="operator">=</span>b.字段</span><br><span class="line">[连接类型] <span class="keyword">join</span> 表名<span class="number">3</span> c <span class="keyword">on</span> b.字段<span class="operator">=</span>c.字段</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios是一个基于 promise 的网络请求库，可以用于浏览器和 node.js</title>
      <link href="/posts/1803a4a8f7c1/"/>
      <url>/posts/1803a4a8f7c1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h2><p>引入axios.js:<a href="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js">https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js</a></p><h3 id="核心配置"><a href="#核心配置" class="headerlink" title="核心配置"></a>核心配置</h3><ul><li><strong>url</strong>：请求url网址</li><li><strong>method</strong>：请求方法，get可以省略（不区分大小写）</li><li><strong>params</strong>：查询参数</li><li><strong>data</strong>：提交数据</li></ul><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;get&#x27;</span>,<span class="comment">// 默认为get</span></span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">        参数名:值,</span><br><span class="line">        ……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="提交数据"><a href="#提交数据" class="headerlink" title="提交数据"></a>提交数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,<span class="comment">// 默认为get</span></span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        参数名:值,</span><br><span class="line">        ……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3笔记</title>
      <link href="/posts/f5e1d1d6b489/"/>
      <url>/posts/f5e1d1d6b489/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="创建一个-Vue-应用"><a href="#创建一个-Vue-应用" class="headerlink" title="创建一个 Vue 应用"></a>创建一个 Vue 应用</h2><p>在你想创建项目的目录打开终端运行以下命令 (不要带上 <code>$</code> 符号)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm create vue@latest</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> &lt;your-project-name&gt; 请取项目名称</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>当你准备将应用发布到生产环境时，请运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>此命令会在 <code>./dist</code> 文件夹中为你的应用创建一个生产环境的构建版本。关于将应用上线生产环境的更多内容，请阅读<a href="https://cn.vuejs.org/guide/best-practices/production-deployment.html">生产环境部署指南</a>。</p><h2 id="Vue目录结构"><a href="#Vue目录结构" class="headerlink" title="Vue目录结构"></a>Vue目录结构</h2><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_vue3_img1.webp" alt="2024-01-12_14-28-43.webp"></p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_vue3_img2.webp" alt="2024-01-12_11-20-16.webp"></p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p>Vue 使用一种基于 HTML 的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。</p><p>在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。</p><p>如果你对虚拟 DOM 的概念比较熟悉，并且偏好直接使用 JavaScript，你也可以结合可选的 JSX 支持<a href="https://cn.vuejs.org/guide/extras/render-function.html">直接手写渲染函数</a>而不采用模板。但请注意，这将不会享受到和模板同等级别的编译时优化。</p><h3 id="文本插值"><a href="#文本插值" class="headerlink" title="文本插值"></a>文本插值</h3><p>最基本的数据绑定形式是文本插值，它使用的是“Mustache”语法 (即双大括号)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Message: &#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>双大括号标签会被替换为<a href="https://cn.vuejs.org/guide/essentials/reactivity-fundamentals.html#declaring-reactive-state">相应组件实例中</a> <code>msg</code> 属性的值。同时每次 <code>msg</code> 属性更改时它也会同步更新。</p><h3 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a>原始 HTML</h3><p>双大括号会将数据解释为纯文本，而不是 HTML。若想插入 HTML，你需要使用 <a href="https://cn.vuejs.org/api/built-in-directives.html#v-html"><code>v-html</code> 指令</a>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using text interpolation: &#123;&#123; rawHtml &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using v-html directive: <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性绑定"><a href="#属性绑定" class="headerlink" title="属性绑定"></a>属性绑定</h3><p>双大括号不能在 HTML attributes 中使用。想要响应式地绑定一个 attribute，应该使用 <a href="https://cn.vuejs.org/api/built-in-directives.html#v-bind"><code>v-bind</code> 指令</a>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-bind</code> 指令指示 Vue 将元素的 <code>id</code> attribute 与组件的 <code>dynamicId</code> 属性保持一致。如果绑定的值是 <code>null</code> 或者 <code>undefined</code>，那么该 attribute 将会从渲染的元素上移除。</p><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><p>因为 <code>v-bind</code> 非常常用，我们提供了特定的简写语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开头为 <code>:</code> 的 attribute 可能和一般的 HTML attribute 看起来不太一样，但它的确是合法的 attribute 名称字符，并且所有支持 Vue 的浏览器都能正确解析它。此外，他们不会出现在最终渲染的 DOM 中。简写语法是可选的，但相信在你了解了它更多的用处后，你应该会更喜欢它。</p><blockquote><p>接下来的指引中，我们都将在示例中使用简写语法，因为这是在实际开发中更常见的用法。</p></blockquote><h3 id="同名简写"><a href="#同名简写" class="headerlink" title="同名简写"></a>同名简写</h3><p>如果 attribute 的名称与绑定的 JavaScript 值的名称相同，那么可以进一步简化语法，省略 attribute 值：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 与 :id=&quot;id&quot; 相同 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:id</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 这也同样有效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这与在 JavaScript 中声明对象时使用的属性简写语法类似。请注意，这是一个只在 Vue 3.4 及以上版本中可用的特性。</p><h3 id="布尔型-Attribute"><a href="#布尔型-Attribute" class="headerlink" title="布尔型 Attribute"></a>布尔型 Attribute</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Attributes#%E5%B8%83%E5%B0%94%E5%80%BC%E5%B1%9E%E6%80%A7">布尔型 attribute</a> 依据 true &#x2F; false 值来决定 attribute 是否应该存在于该元素上。<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled">disabled</a> 就是最常见的例子之一。</p><p><code>v-bind</code> 在这种场景下的行为略有不同：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当 <code>isButtonDisabled</code> 为<a href="https://developer.mozilla.org/en-US/docs/Glossary/Truthy">真值</a>或一个空字符串 (即 <code>&lt;button disabled=&quot;&quot;&gt;</code>) 时，元素会包含这个 <code>disabled</code> attribute。而当其为其他<a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy">假值</a>时 attribute 将被忽略。</p><h3 id="动态绑定多个值"><a href="#动态绑定多个值" class="headerlink" title="动态绑定多个值"></a>动态绑定多个值</h3><p>如果你有像这样的一个包含多个 attribute 的 JavaScript 对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> objectOfAttrs = &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;container&#x27;</span>,</span><br><span class="line">  <span class="attr">class</span>: <span class="string">&#x27;wrapper&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过不带参数的 <code>v-bind</code>，你可以将它们绑定到单个元素上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind</span>=<span class="string">&quot;objectOfAttrs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用-JavaScript-表达式"><a href="#使用-JavaScript-表达式" class="headerlink" title="使用 JavaScript 表达式"></a>使用 JavaScript 表达式</h2><p>至此，我们仅在模板中绑定了一些简单的属性名。但是 Vue 实际上在所有的数据绑定中都支持完整的 JavaScript 表达式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; number + 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:id</span>=<span class="string">&quot;`list-$&#123;id&#125;`&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这些表达式都会被作为 JavaScript ，以当前组件实例为作用域解析执行。</p><p>在 Vue 模板内，JavaScript 表达式可以被使用在如下场景上：</p><ul><li>在文本插值中 (双大括号)</li><li>在任何 Vue 指令 (以 <code>v-</code> 开头的特殊 attribute) attribute 的值中</li></ul><h3 id="仅支持表达式"><a href="#仅支持表达式" class="headerlink" title="仅支持表达式"></a>仅支持表达式</h3><p>每个绑定仅支持<strong>单一表达式</strong>，也就是一段能够被求值的 JavaScript 代码。一个简单的判断方法是是否可以合法地写在 <code>return</code> 后面。</p><p>因此，下面的例子都是<strong>无效</strong>的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一个语句，而非表达式 --&gt;</span></span><br><span class="line">&#123;&#123; var a = 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 条件控制也不支持，请使用三元表达式 --&gt;</span></span><br><span class="line">&#123;&#123; if (ok) &#123; return message &#125; &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><p>可以在绑定的表达式中使用一个组件暴露的方法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">:title</span>=<span class="string">&quot;toTitleDate(date)&quot;</span> <span class="attr">:datetime</span>=<span class="string">&quot;date&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; formatDate(date) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="指令-Directives"><a href="#指令-Directives" class="headerlink" title="指令 Directives"></a>指令 Directives</h2><p>指令是带有 <code>v-</code> 前缀的特殊 attribute。Vue 提供了许多<a href="https://cn.vuejs.org/api/built-in-directives.html">内置指令</a>，包括上面我们所介绍的 <code>v-bind</code> 和 <code>v-html</code>。</p><p>指令 attribute 的期望值为一个 JavaScript 表达式 (除了少数几个例外，即之后要讨论到的 <code>v-for</code>、<code>v-on</code> 和 <code>v-slot</code>)。一个指令的任务是在其表达式的值变化时响应式地更新 DOM。以 <a href="https://cn.vuejs.org/api/built-in-directives.html#v-if"><code>v-if</code></a> 为例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>Now you see me<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里，<code>v-if</code> 指令会基于表达式 <code>seen</code> 的值的真假来移除&#x2F;插入该 <code>&lt;p&gt;</code> 元素。</p><h3 id="参数-Arguments"><a href="#参数-Arguments" class="headerlink" title="参数 Arguments"></a>参数 Arguments</h3><p>某些指令会需要一个“参数”，在指令名后通过一个冒号隔开做标识。例如用 <code>v-bind</code> 指令来响应式地更新一个 HTML attribute：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里 <code>href</code> 就是一个参数，它告诉 <code>v-bind</code> 指令将表达式 <code>url</code> 的值绑定到元素的 <code>href</code> attribute 上。在简写中，参数前的一切 (例如 <code>v-bind:</code>) 都会被缩略为一个 <code>:</code> 字符。</p><p>另一个例子是 <code>v-on</code> 指令，它将监听 DOM 事件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的参数是要监听的事件名称：<code>click</code>。<code>v-on</code> 有一个相应的缩写，即 <code>@</code> 字符。我们之后也会讨论关于事件处理的更多细节。</p><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><p>同样在指令参数上也可以使用一个 JavaScript 表达式，需要包含在一对方括号内：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">注意，参数表达式有一些约束，</span></span><br><span class="line"><span class="comment">参见下面“动态参数值的限制”与“动态参数语法的限制”章节的解释</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:</span>[<span class="attr">attributeName</span>]=<span class="string">&quot;url&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的 <code>attributeName</code> 会作为一个 JavaScript 表达式被动态执行，计算得到的值会被用作最终的参数。举例来说，如果你的组件实例有一个数据属性 <code>attributeName</code>，其值为 <code>&quot;href&quot;</code>，那么这个绑定就等价于 <code>v-bind:href</code>。</p><p>相似地，你还可以将一个函数绑定到动态的事件名称上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:</span>[<span class="attr">eventName</span>]=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @[<span class="attr">eventName</span>]=<span class="string">&quot;doSomething&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在此示例中，当 <code>eventName</code> 的值是 <code>&quot;focus&quot;</code> 时，<code>v-on:[eventName]</code> 就等价于 <code>v-on:focus</code>。</p><h4 id="动态参数值的限制"><a href="#动态参数值的限制" class="headerlink" title="动态参数值的限制"></a>动态参数值的限制</h4><p>动态参数中表达式的值应当是一个字符串，或者是 <code>null</code>。特殊值 <code>null</code> 意为显式移除该绑定。其他非字符串的值会触发警告。</p><h4 id="动态参数语法的限制"><a href="#动态参数语法的限制" class="headerlink" title="动态参数语法的限制"></a>动态参数语法的限制</h4><p>动态参数表达式因为某些字符的缘故有一些语法限制，比如空格和引号，在 HTML attribute 名称中都是不合法的。例如下面的示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这会触发一个编译器警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:</span>[&#x27;<span class="attr">foo</span>&#x27; + <span class="attr">bar</span>]=<span class="string">&quot;value&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你需要传入一个复杂的动态参数，我们推荐使用<a href="https://cn.vuejs.org/guide/essentials/computed.html">计算属性</a>替换复杂的表达式，也是 Vue 最基础的概念之一，我们很快就会讲到。</p><p>当使用 DOM 内嵌模板 (直接写在 HTML 文件里的模板) 时，我们需要避免在名称中使用大写字母，因为浏览器会强制将其转换为小写：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:</span>[<span class="attr">someAttr</span>]=<span class="string">&quot;value&quot;</span>&gt;</span> ... <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的例子将会在 DOM 内嵌模板中被转换为 <code>:[someattr]</code>。如果你的组件拥有 “someAttr” 属性而非 “someattr”，这段代码将不会工作。单文件组件内的模板<strong>不</strong>受此限制。</p><h3 id="修饰符-Modifiers"><a href="#修饰符-Modifiers" class="headerlink" title="修饰符 Modifiers"></a>修饰符 Modifiers</h3><p>修饰符是以点开头的特殊后缀，表明指令需要以一些特殊的方式被绑定。例如 <code>.prevent</code> 修饰符会告知 <code>v-on</code> 指令对触发的事件调用 <code>event.preventDefault</code>()：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>之后在讲到 <a href="https://cn.vuejs.org/guide/essentials/event-handling.html#event-modifiers"><code>v-on</code></a> 和 <a href="https://cn.vuejs.org/guide/essentials/forms.html#modifiers"><code>v-model</code></a> 的功能时，你将会看到其他修饰符的例子。</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_vue3_img3.webp" alt="directive7WSr6AKH.webp"></p><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a><code>v-if</code></h3><p><code>v-if</code> 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回真值时才被渲染。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;awesome&quot;</span>&gt;</span>Vue is awesome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a><code>v-else</code></h3><p>你也可以使用 <code>v-else</code> 为 <code>v-if</code> 添加一个“else 区块”。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;awesome = !awesome&quot;</span>&gt;</span>Toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">&quot;awesome&quot;</span>&gt;</span>Vue is awesome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>Oh no 😢<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个 <code>v-else</code> 元素必须跟在一个 <code>v-if</code> 或者 <code>v-else-if</code> 元素后面，否则它将不会被识别。</p><h3 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a><code>v-else-if</code></h3><p>顾名思义，<code>v-else-if</code> 提供的是相应于 <code>v-if</code> 的“else if 区块”。它可以连续多次重复使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span><br><span class="line">  A</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span><br><span class="line">  B</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span><br><span class="line">  C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  Not A/B/C</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>和 <code>v-else</code> 类似，一个使用 <code>v-else-if</code> 的元素必须紧跟在一个 <code>v-if</code> 或一个 <code>v-else-if</code> 元素后面。</p><h3 id="上的-v-if"><a href="#上的-v-if" class="headerlink" title="&lt;template&gt; 上的 v-if"></a><code>&lt;template&gt;</code> 上的 <code>v-if</code></h3><p>因为 <code>v-if</code> 是一个指令，他必须依附于某个元素。但如果我们想要切换不止一个元素呢？在这种情况下我们可以在一个 <code>&lt;template&gt;</code> 元素上使用 <code>v-if</code>，这只是一个不可见的包装器元素，最后渲染的结果并不会包含这个 <code>&lt;template&gt;</code> 元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;ok&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-else</code> 和 <code>v-else-if</code> 也可以在 <code>&lt;template&gt;</code> 上使用。</p><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a><code>v-show</code></h3><p>另一个可以用来按条件显示一个元素的指令是 <code>v-show</code>。其用法基本一样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不同之处在于 <code>v-show</code> 会在 DOM 渲染中保留该元素；<code>v-show</code> 仅切换了该元素上名为 <code>display</code> 的 CSS 属性。</p><p><code>v-show</code> 不支持在 <code>&lt;template&gt;</code> 元素上使用，也不能和 <code>v-else</code> 搭配使用。</p><h3 id="v-if-vs-v-show"><a href="#v-if-vs-v-show" class="headerlink" title="v-if vs. v-show"></a><code>v-if</code> vs. <code>v-show</code></h3><p><code>v-if</code> 是“真实的”按条件渲染，因为它确保了在切换时，条件区块内的事件监听器和子组件都会被销毁与重建。</p><p><code>v-if</code> 也是<strong>惰性</strong>的：如果在初次渲染时条件值为 false，则不会做任何事。条件区块只有当条件首次变为 true 时才被渲染。</p><p>相比之下，<code>v-show</code> 简单许多，元素无论初始条件如何，始终会被渲染，只有 CSS <code>display</code> 属性会被切换。</p><p>总的来说，<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。因此，如果需要频繁切换，则使用 <code>v-show</code> 较好；如果在运行时绑定条件很少改变，则 <code>v-if</code> 会更合适。</p><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a><code>v-for</code></h3><p>我们可以使用 <code>v-for</code> 指令基于一个数组来渲染一个列表。<code>v-for</code> 指令的值需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是源数据的数组，而 <code>item</code> 是迭代项的<strong>别名</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> items = <span class="title function_">ref</span>([&#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;, &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;])</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; item.message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>v-for</code> 块中可以完整地访问父作用域内的属性和变量。<code>v-for</code> 也支持使用可选的第二个参数表示当前项的位置索引。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> parentMessage = <span class="title function_">ref</span>(<span class="string">&#x27;Parent&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> items = <span class="title function_">ref</span>([&#123; <span class="attr">message</span>: <span class="string">&#x27;Foo&#x27;</span> &#125;, &#123; <span class="attr">message</span>: <span class="string">&#x27;Bar&#x27;</span> &#125;])</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; parentMessage &#125;&#125; - &#123;&#123; index &#125;&#125; - &#123;&#123; item.message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Parent - 0 - Foo</span><br><span class="line">Parent - 1 - Bar</span><br></pre></td></tr></table></figure><p><code>v-for</code> 变量的作用域和下面的 JavaScript 代码很类似：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> parentMessage = <span class="string">&#x27;Parent&#x27;</span></span><br><span class="line"><span class="keyword">const</span> items = [</span><br><span class="line">  <span class="comment">/* ... */</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">items.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 可以访问外层的 `parentMessage`</span></span><br><span class="line">  <span class="comment">// 而 `item` 和 `index` 只在这个作用域可用</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(parentMessage, item.<span class="property">message</span>, index)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="note info flat"><p><code>v-for</code> 是如何对应 <code>forEach</code> 回调的函数签名的。实际上，你也可以在定义 <code>v-for</code> 的变量别名时使用解构，和解构函数参数类似： </p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;&#123; message &#125; in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 有 index 索引时 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(&#123; message &#125;, index) in items&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125; &#123;&#123; index &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于多层嵌套的 <code>v-for</code>，作用域的工作方式和函数的作用域很类似。每个 <code>v-for</code> 作用域都可以访问到父级作用域：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;childItem in item.children&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.message &#125;&#125; &#123;&#123; childItem &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你也可以使用 <code>of</code> 作为分隔符来替代 <code>in</code>，这更接近 JavaScript 的迭代器语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item of items&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for-与对象"><a href="#v-for-与对象" class="headerlink" title="v-for 与对象"></a><code>v-for</code> 与对象</h3><p>你也可以使用 <code>v-for</code> 来遍历一个对象的所有属性。遍历的顺序会基于对该对象调用 <code>Object.keys()</code> 的返回值来决定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myObject = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span><br><span class="line">  <span class="attr">author</span>: <span class="string">&#x27;Jane Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">publishedAt</span>: <span class="string">&#x27;2016-04-10&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in myObject&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; value &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过提供第二个参数表示属性名 (例如 key)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key) in myObject&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三个参数表示位置索引：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, key, index) in myObject&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123; index &#125;&#125;. &#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在-v-for-里使用范围值"><a href="#在-v-for-里使用范围值" class="headerlink" title="在 v-for 里使用范围值"></a>在 <code>v-for</code> 里使用范围值</h3><p><code>v-for</code> 可以直接接受一个整数值。在这种用例中，会将该模板基于 <code>1...n</code> 的取值范围重复多次。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;n in 10&quot;</span>&gt;</span>&#123;&#123; n &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意此处 <code>n</code> 的初值是从 <code>1</code> 开始而非 <code>0</code>。</p><h3 id="上的-v-for"><a href="#上的-v-for" class="headerlink" title="&lt;template&gt; 上的 v-for"></a><code>&lt;template&gt;</code> 上的 <code>v-for</code></h3><p>与模板上的 <code>v-if</code> 类似，你也可以在 <code>&lt;template&gt;</code> 标签上使用 <code>v-for</code> 来渲染一个包含多个元素的块。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; item.msg &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span> <span class="attr">role</span>=<span class="string">&quot;presentation&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-key-管理状态"><a href="#通过-key-管理状态" class="headerlink" title="通过 key 管理状态"></a>通过 key 管理状态</h3><p>Vue 默认按照“就地更新”的策略来更新通过 <code>v-for</code> 渲染的元素列表。当数据项的顺序改变时，Vue 不会随之移动 DOM 元素的顺序，而是就地更新每个元素，确保它们在原本指定的索引位置上渲染。</p><p>默认模式是高效的，但<strong>只适用于列表渲染输出的结果不依赖子组件状态或者临时 DOM 状态 (例如表单输入值) 的情况</strong>。</p><p>为了给 Vue 一个提示，以便它可以跟踪每个节点的标识，从而重用和重新排序现有的元素，你需要为每个元素对应的块提供一个唯一的 <code>key</code> attribute：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当你使用 <code>&lt;template v-for&gt;</code> 时，<code>key</code> 应该被放置在这个 <code>&lt;template&gt;</code> 容器上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in todos&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;todo.name&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; todo.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数组变化侦测"><a href="#数组变化侦测" class="headerlink" title="数组变化侦测"></a>数组变化侦测</h3><h4 id="变更方法"><a href="#变更方法" class="headerlink" title="变更方法"></a>变更方法</h4><p>Vue 能够侦听响应式数组的变更方法，并在它们被调用时触发相关的更新。这些变更方法包括：</p><ul><li><code>push()</code>  &#x2F;&#x2F; 在数组的末尾添加一个或者多个元素，返回数组的新长度</li><li><code>pop()</code> &#x2F;&#x2F; 删除数组末尾最后一个，并返回改变原数组的值</li><li><code>shift()</code> &#x2F;&#x2F; 在数组的头部添加一个或者多个元素，返回数组的新长度</li><li><code>unshift()</code> &#x2F;&#x2F; 在数组的头部添加一个或者多个元素，返回数组的新长度</li><li><code>splice()</code> &#x2F;&#x2F; 删除数组头部最后一个，并返回改变原数组的值</li><li><code>sort()</code> &#x2F;&#x2F; 返回排序的数组，如果数组包含undefined，会排序到末尾。如果不带参数的调用sort，数组元素以字母顺序排序，反之以大小顺序排序</li><li><code>reverse()</code>  &#x2F;&#x2F; 将数组倒叙，返回数组的新长度</li></ul><h4 id="替换一个数组"><a href="#替换一个数组" class="headerlink" title="替换一个数组"></a>替换一个数组</h4><p>变更方法，顾名思义，就是会对调用它们的原数组进行变更。相对地，也有一些不可变 (immutable) 方法，例如 <code>filter()</code>，<code>concat()</code> 和 <code>slice()</code>，这些都不会更改原数组，而总是<strong>返回一个新数组</strong>。当遇到的是非变更方法时，我们需要将旧的数组替换为新的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 例如下方</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) of names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getClick&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">names</span>:[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getClick</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">names</span>=<span class="variable language_">this</span>.<span class="property">names</span>.<span class="title function_">concat</span>(<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>); <span class="comment">//想要响应式数组变更，则必须在前面替换旧数组</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><h3 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h3><p>我们可以使用 <code>v-on</code> 指令 (简写为 <code>@</code>) 来监听 DOM 事件，并在事件触发时执行对应的 JavaScript。用法：<code>v-on:click=&quot;handler&quot;</code> 或 <code>@click=&quot;handler&quot;</code>。</p><p>事件处理器 (handler) 的值可以是：</p><ol><li><strong>内联事件处理器</strong>：事件被触发时执行的内联 JavaScript 语句 (与 <code>onclick</code> 类似)。</li><li><strong>方法事件处理器</strong>：一个指向组件上定义的方法的属性名或是路径。</li></ol><h4 id="内联事件处理器"><a href="#内联事件处理器" class="headerlink" title="内联事件处理器"></a>内联事件处理器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cont++&quot;</span>&gt;</span>&#123;&#123; contents &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">contents</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法事件处理器"><a href="#方法事件处理器" class="headerlink" title="方法事件处理器"></a>方法事件处理器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;s1&quot;</span>&gt;</span>&#123;&#123; contents &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">contents</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">s1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">contents</span>++</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件传参"><a href="#事件传参" class="headerlink" title="事件传参"></a>事件传参</h3><p>当有一个变量的时还要传<code>event</code>则就要在前面加<code>$</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;getClick(item,$event)&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) of names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">names</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getClick</span>(<span class="params">item,e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;   </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><p>在处理事件时调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是很常见的。尽管我们可以直接在方法内调用，但如果方法能更专注于数据逻辑而不用去处理 DOM 事件的细节会更好。</p><p>为解决这一问题，Vue 为 <code>v-on</code> 提供了<strong>事件修饰符</strong>。修饰符是用 <code>.</code> 表示的指令后缀，包含以下这些：</p><ul><li><code>.stop</code></li><li><code>.prevent</code></li><li><code>.self</code></li><li><code>.capture</code></li><li><code>.once</code></li><li><code>.passive</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单击事件将停止传递 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.stop</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 提交事件将不再重新加载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 修饰语可以使用链式书写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.stop.prevent</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 也可以只有修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 仅当 event.target 是元素本身时才会触发事件处理器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 例如：事件处理器不来自子元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.self</span>=<span class="string">&quot;doThat&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.capture</code>、<code>.once</code> 和 <code>.passive</code> 修饰符与<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener#options">原生 <code>addEventListener</code> 事件</a>相对应：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加事件监听器时，使用 `capture` 捕获模式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 例如：指向内部元素的事件，在被内部元素处理前，先被外部处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.capture</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 点击事件最多被触发一次 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.once</span>=<span class="string">&quot;doThis&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 滚动事件的默认行为 (scrolling) 将立即发生而非等待 `onScroll` 完成 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 以防其中包含 `event.preventDefault()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">scroll.passive</span>=<span class="string">&quot;onScroll&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.passive</code> 修饰符一般用于触摸事件的监听器，可以用来<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener#%E4%BD%BF%E7%94%A8_passive_%E6%94%B9%E5%96%84%E6%BB%9A%E5%B1%8F%E6%80%A7%E8%83%BD">改善移动端设备的滚屏性能</a>。</p><h3 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h3><p>在监听键盘事件时，我们经常需要检查特定的按键。Vue 允许在 <code>v-on</code> 或 <code>@</code> 监听按键事件时添加按键修饰符。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仅在 `key` 为 `Enter` 时调用 `submit` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>你可以直接使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/key/Key_Values"><code>KeyboardEvent.key</code></a> 暴露的按键名称作为修饰符，但需要转为 kebab-case 形式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.page-down</span>=<span class="string">&quot;onPageDown&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的例子中，仅会在 <code>$event.key</code> 为 <code>&#39;PageDown&#39;</code> 时调用事件处理。</p><h4 id="按键别名"><a href="#按键别名" class="headerlink" title="按键别名"></a>按键别名</h4><p>Vue 为一些常用的按键提供了别名：</p><ul><li><code>.enter</code></li><li><code>.tab</code></li><li><code>.delete</code> (捕获“Delete”和“Backspace”两个按键)</li><li><code>.esc</code></li><li><code>.space</code></li><li><code>.up</code></li><li><code>.down</code></li><li><code>.left</code></li><li><code>.right</code></li></ul><h4 id="系统按键修饰符"><a href="#系统按键修饰符" class="headerlink" title="系统按键修饰符"></a>系统按键修饰符</h4><p>你可以使用以下系统按键修饰符来触发鼠标或键盘事件监听器，只有当按键被按下时才会触发。</p><ul><li><code>.ctrl</code></li><li><code>.alt</code></li><li><code>.shift</code></li><li><code>.meta</code></li></ul><p>举例来说：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Alt + Enter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.alt.enter</span>=<span class="string">&quot;clear&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Ctrl + 点击 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.ctrl</span>=<span class="string">&quot;doSomething&quot;</span>&gt;</span>Do something<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="exact-修饰符"><a href="#exact-修饰符" class="headerlink" title=".exact 修饰符"></a><code>.exact</code> 修饰符</h4><p><code>.exact</code> 修饰符允许控制触发一个事件所需的确定组合的系统按键修饰符。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 当按下 Ctrl 时，即使同时按下 Alt 或 Shift 也会触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.ctrl</span>=<span class="string">&quot;onClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 仅当按下 Ctrl 且未按任何其他键时才会触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.ctrl.exact</span>=<span class="string">&quot;onCtrlClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 仅当没有按下任何系统按键时触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.exact</span>=<span class="string">&quot;onClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="鼠标按键修饰符"><a href="#鼠标按键修饰符" class="headerlink" title="鼠标按键修饰符"></a>鼠标按键修饰符</h4><ul><li><code>.left</code></li><li><code>.right</code></li><li><code>.middle</code></li></ul><p>这些修饰符将处理程序限定为由特定鼠标按键触发的事件。</p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><h3 id="计算属性缓存-VS-方法"><a href="#计算属性缓存-VS-方法" class="headerlink" title="计算属性缓存 VS 方法"></a>计算属性缓存 VS 方法</h3><p>模板中的表达式虽然方便，但也只能用来做简单的操作。如果在模板中写太多逻辑，会让模板变得臃肿，难以<br>维护。因此我们推荐使用<strong>计算属性</strong>来描述依赖响应式状态的复杂逻辑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; prints &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; println() &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">p</span>: <span class="string">&quot;你好，Vue3！&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 计算属性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">prints</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">p</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="string">&quot;yes&quot;</span> : <span class="string">&quot;no&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 方法或函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">println</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">p</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="string">&quot;yes&quot;</span> : <span class="string">&quot;no&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note info flat"><ul><li>计算属性：<strong>计算属性值会基于其响应式依赖被缓存。</strong>一个计算属性仅会在其响应式依赖更新时才重新计算</li><li>方法：方法调用总是会在重渣染发生时再次执行函数</li></ul></div><h2 id="类与样式绑定"><a href="#类与样式绑定" class="headerlink" title="类与样式绑定"></a>类与样式绑定</h2><h3 id="Class绑定"><a href="#Class绑定" class="headerlink" title="Class绑定"></a>Class绑定</h3><p>数据绑定的一个常见需求场景是操纵元素的 CSS class 列表和内联样式。因为 <code>class</code> 和 <code>style</code> 都是 attribute，我们可以和其他 attribute 一样使用 <code>v-bind</code> 将它们和动态的字符串绑定。但是，在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且易出错的。因此，Vue 专门为 <code>class</code> 和 <code>style</code> 的 <code>v-bind</code> 用法提供了特殊的功能增强。除了字符串外，表达式的值也可以是对象或数组。</p><h4 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;active&#x27;:option,&#x27;red&#x27;:color&#125;&quot;</span>&gt;</span>Class绑定1<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 第一种绑定对象</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;getActive&quot;</span>&gt;</span>Class绑定2<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 多个绑定对象</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[arrActive,arrColor]&quot;</span>&gt;</span>Class绑定3<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 数组绑定对象</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[option ? &#x27;active red&#x27; : &#x27; &#x27;]&quot;</span>&gt;</span>Class绑定4<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 三目运算符绑定对象</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:class</span>=<span class="string">&quot;[&#123;&#x27;active&#x27;:option&#125;,arrColor]&quot;</span>&gt;</span>Class绑定5<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 数组和对象</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">option</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">getActive</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;active&#x27;</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;red&#x27;</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">arrActive</span>:<span class="string">&#x27;active&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">arrColor</span>:<span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.active</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note danger flat"><p>数组和对象嵌套过程中，只能是数组嵌套对象，不能反其道而行 </p></div><h3 id="Style绑定"><a href="#Style绑定" class="headerlink" title="Style绑定"></a>Style绑定</h3><h4 id="绑定对象-1"><a href="#绑定对象-1" class="headerlink" title="绑定对象"></a>绑定对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;color:&#x27;red&#x27;,fontSize:activeSize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>Style绑定1<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 可直接写样式，或者用变量来控制</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;StyleObject&quot;</span>&gt;</span>Style绑定2<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 用对象方式来绑定</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&quot;[StyleObject,StyleDemo]&quot;</span>&gt;</span>Style绑定3<span class="tag">&lt;/<span class="name">p</span>&gt;</span> // 可以用数组嵌套多个对象</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">activeSize</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">StyleObject</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">color</span>:<span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fontSize</span>:<span class="string">&#x27;30px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">StyleDemo</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">textIndent</span>:<span class="string">&#x27;1em&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">marginBottom</span>:<span class="string">&#x27;20px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式多值"><a href="#样式多值" class="headerlink" title="样式多值"></a>样式多值</h4><p>你可以对一个样式属性提供多个 (不同前缀的) 值，举例来说：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; display: [&#x27;-webkit-box&#x27;, &#x27;-ms-flexbox&#x27;, &#x27;flex&#x27;] &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>数组仅会渲染浏览器支持的最后一个值。在这个示例中，在支持不需要特别前缀的浏览器中都会渲染为 <code>display: flex</code>。</p><h4 id="scoped"><a href="#scoped" class="headerlink" title="scoped"></a>scoped</h4><p>在<strong>Style</strong>当中加了<strong>scoped</strong>则表示样式只在当前<strong>页面</strong>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">text</span>:<span class="string">&#x27;组件&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h2><p>计算属性允许我们声明性地计算衍生值。然而在有些情况下，我们需要在状态变化时执行一些“副作用”：例如更改 DOM，或是根据异步操作的结果去修改另一处的状态。</p><p>在组合式 API 中，我们可以使用 <strong>watch 函数</strong>在每次响应式状态发生变化时触发回调函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;revise&quot;</span>&gt;</span>修改数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">message</span>:<span class="string">&#x27;hello&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">revise</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">message</span>=<span class="string">&#x27;world&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>:&#123; <span class="comment">// “watch” 只能侦听 “return” 里</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">message</span>(<span class="params">newValue,oldValue</span>)&#123; <span class="comment">// 函数名必须为要侦听的变量或对象，括号里面取名可随便</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(newValue,oldValue);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h2><p>在前端处理表单时，我们常常需要将表单输入框的内容同步给JavaScript中相应的变量。手动连接值绑定和更改事件监听器可能会很麻烦，<strong>v-model</strong>指令帮我们简化了这一步骤</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">text</span>:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>单一的复选框，绑定布尔类型值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-</span><span class="attr">model</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span>&#123;&#123; checkbox &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">text</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">checkbox</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><p><strong>v-model</strong>也提供了修饰符：**.lazy<strong>、</strong>.number<strong>、</strong>.trim**</p><p>.<strong>lazy</strong></p><p>默认情况下，<strong>v-model</strong>会在每次<strong>input</strong>事件后更新数据。你可以添加**.lazy<strong>修饰符来改为每次</strong>change**事件后更新数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">text</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">checkbox</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>.number</strong>只能输入数字、**.trim**去除两端空格。</p><h2 id="模板引用"><a href="#模板引用" class="headerlink" title="模板引用"></a>模板引用</h2><p>虽然 Vue 的声明性渲染模型为你抽象了大部分对 DOM 的直接操作，但在某些情况下，我们仍然需要直接访问底层 DOM 元素。要实现这一点，我们可以使用特殊的 <code>ref</code> attribute：</p><p>挂载结束后引用都会被暴露在<strong>this.$refs</strong>之上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;pname&quot;</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;getPname&quot;</span>&gt;</span>获取<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">text</span>:<span class="string">&quot;内容&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">getPname</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">pname</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件基础"><a href="#组件基础" class="headerlink" title="组件基础"></a>组件基础</h2><h3 id="定义组件"><a href="#定义组件" class="headerlink" title="定义组件"></a>定义组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import1</span> /&gt;</span> // 可重复调用组件</span><br><span class="line"><span class="tag">&lt;<span class="name">import1</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> import1 <span class="keyword">from</span> <span class="string">&#x27;./components/import1.vue&#x27;</span> <span class="comment">// 局部&#x27;注册&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    import1</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="组件嵌套关系"><a href="#组件嵌套关系" class="headerlink" title="组件嵌套关系"></a>组件嵌套关系</h3><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_vue3_img4.webp"></p><h3 id="组件注册方式"><a href="#组件注册方式" class="headerlink" title="组件注册方式"></a>组件注册方式</h3><p>一个 Vue 组件在使用前需要先被“注册”，这样 Vue 才能在渲染模板时找到其对应的实现。组件注册有两种方式：全局注册和局部注册。</p><h4 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Article</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Article.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">app.<span class="title function_">component</span>(<span class="string">&quot;Article&quot;</span>,<span class="title class_">Article</span>)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h4><p>全局注册虽然很方便，但有以下几个问题：</p><ol><li>全局注册，但并没有被使用的组件无法在生产打包时被自动移除 (也叫“tree-shaking”)。如果你全局注册了一个组件，即使它并没有被实际使用，它仍然会出现在打包后的 JS 文件中。</li><li>全局注册在大型项目中使项目的依赖关系变得不那么明确。在父组件中使用子组件时，不太容易定位子组件的实现。和使用过多的全局变量一样，这可能会影响应用长期的可维护性。</li></ol><p>相比之下，局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。</p><p>在使用 <code>&lt;script setup&gt;</code> 的单文件组件中，导入的组件可以直接在模板中使用，无需注册：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Header</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Main</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Aside</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Header.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Main</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Main.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Aside</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Aside.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果没有使用 <code>&lt;script setup&gt;</code>，则需要使用 <code>components</code> 选项来显式注册：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Header</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Main</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Aside</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Header.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Main</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Main.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Aside</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/Aside.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Header</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Main</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Aside</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p><strong>局部注册的组件在后代组件中不可用</strong>。在这个例子中，<code>ComponentA</code> 注册后仅在当前组件可用，而在任何的子组件或更深层的子组件中都不可用。</p></div><h3 id="组件传递数据"><a href="#组件传递数据" class="headerlink" title="组件传递数据"></a>组件传递数据</h3><h4 id="Props"><a href="#Props" class="headerlink" title="Props"></a>Props</h4><p>组件与组件之间不是完全独立的，而是有交集的，那就是组件与组件之间是可以传递数据的传递数据的解决方案就是<strong>props</strong></p><p><code>pass.vue</code></p><p>可静态传递数据，**:**可动态传递数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acceptance</span> <span class="attr">title</span>=<span class="string">&quot;静态数据&quot;</span> <span class="attr">:text</span>=<span class="string">&quot;content&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> acceptance <span class="keyword">from</span> <span class="string">&#x27;./acceptance.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        acceptance</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">content</span>:<span class="string">&#x27;动态数据&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>acceptance.vue</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; text &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:[<span class="string">&quot;title&quot;</span>,<span class="string">&quot;text&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note danger flat"><p><strong>props</strong> 传递数据，只能从父级传递子级，不能反其道而行 </p></div><h5 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acceptance</span> <span class="attr">:Number</span>=<span class="string">&quot;Number&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> acceptance <span class="keyword">from</span> <span class="string">&#x27;./acceptance.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        acceptance</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Number</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; Number &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:[<span class="string">&quot;Number&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acceptance</span> <span class="attr">:Array</span>=<span class="string">&quot;Array&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> acceptance <span class="keyword">from</span> <span class="string">&#x27;./acceptance.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        acceptance</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Array</span>:[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in Array&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:[<span class="string">&quot;Array&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acceptance</span> <span class="attr">:object</span>=<span class="string">&quot;object&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> acceptance <span class="keyword">from</span> <span class="string">&#x27;./acceptance.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        acceptance</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">object</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">names</span>:<span class="string">&quot;liming&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; object.names &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; object.age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:[<span class="string">&quot;object&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Props效验"><a href="#Props效验" class="headerlink" title="Props效验"></a><strong>Props</strong>效验</h4><p>Vue组件可以更细致地声明对传入的<strong>props</strong>的校验要求</p><p>可添加<strong>type</strong>对传递的数据进行校验，提供的类型：<strong>String</strong>、<strong>Number</strong>、<strong>Array</strong>、<strong>Object</strong>、<strong>Date</strong>、<strong>Function</strong>、<strong>Symbol</strong>、<strong>Error</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>pass<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acceptance</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> acceptance <span class="keyword">from</span> <span class="string">&#x27;./acceptance.vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        acceptance</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">title</span>:<span class="string">&quot;20&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:[<span class="title class_">String</span>,…,…] <span class="comment">//可添加多个类型</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 用<strong>default</strong>给默认值</p><p><code>type</code>给出 <code>null</code> 和 <code>undefined</code> 值则会跳过任何类型检查。<code>required</code>必须得传数据</p><p>如果父级没有传数据，则显示默认值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>acceptance<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; numbers &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; arrays &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; objects &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:[<span class="title class_">String</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">default</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">numbers</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:[<span class="title class_">Number</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">required</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">arrays</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:[<span class="title class_">Array</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">default</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> [<span class="string">&quot;空&quot;</span>];</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">objects</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>:[<span class="title class_">Object</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">default</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;<span class="attr">message</span>:<span class="string">&#x27;hello&#x27;</span>&#125;;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>字符串和数字可直接<code>default</code>，但如果是数组和对象，必须通过工厂函数来返回默认值 </p></div><h4 id="组件事件"><a href="#组件事件" class="headerlink" title="组件事件"></a>组件事件</h4><p>在组件的模版表达式中，可以直接使用<code>$emit</code>方法触发自定义事件</p><p>触发自定义事件的目的是组件之间传递数据</p><div class="note info flat"><ul><li>组件之间传递数的方案：</li><li>父传子：<code>props</code></li><li>子传父：<code>自定义事件(this.$emit)</code></li></ul></div>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript笔记</title>
      <link href="/posts/1acc82327792/"/>
      <url>/posts/1acc82327792/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)();&lt;!--立即执行函数--&gt;</span><br><span class="line">&lt;!--或--&gt;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;());</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>) &lt;!--获得动态参数，伪数组，只存在函数--&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">123</span>)</span><br></pre></td></tr></table></figure><h3 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-真数组--&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">...arr</span>)&#123;&lt;!--<span class="string">&quot;arr&quot;</span>是随便取个名字--&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr) &lt;!--<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>--&gt;</span><br><span class="line">&#125;&lt;!--剩余参数是取剩下的参数--&gt;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">a,b,...arr</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr) &lt;!--<span class="string">&quot;arr&quot;</span>真数组<span class="number">4</span>,<span class="number">3</span>--&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...arr) &lt;!--“...”在数组当中是展开,打印“<span class="number">1</span> <span class="number">2</span> <span class="number">4</span>”--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(math.<span class="title function_">max</span>(..<span class="property">arr</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(math.<span class="title function_">min</span>(..<span class="property">arr</span>))</span><br><span class="line"><span class="keyword">const</span> arr1=[<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">arr2=[...arr,...arr1] &lt;!--两个数组合并--&gt;</span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="*箭头函数"></a>*箭头函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--两个<span class="string">&quot;()&quot;</span>表示传参数的地方,<span class="string">&quot;=&gt;&quot;</span>表示<span class="keyword">function</span>--&gt;</span><br><span class="line">&lt;!--箭头函数没有<span class="variable language_">arguments</span>,只有剩余参数--&gt;</span><br><span class="line">&lt;!--箭头函数没有<span class="variable language_">this</span>,用<span class="variable language_">this</span>会寻找上一层的用这个,最外面是windows--&gt;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fun</span>=(<span class="params">x</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x) &lt;!-- <span class="string">&quot;()&quot;</span>多个参数就得用--&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fun</span>=x=&gt;&#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x) &lt;!--如果只有一个参数可以省略<span class="string">&quot;()&quot;</span>--&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fun</span>=x=&gt;x+x &lt;!--如果只有一行代码则默认是“<span class="keyword">return</span>”, </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun</span>(<span class="number">1</span>))</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fun</span>=(<span class="params">uname</span>)=&gt;(&#123;<span class="attr">uname</span>:uname&#125;) &lt;!--要返回对象字面量，则需要加“()”，因为不加<span class="string">&quot;()&quot;</span>，直接加“&#123;&#125;”会搞混，到底是执行返回还是执行代码--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun</span>(<span class="string">&#x27;刘嘉乐&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="数组（Array）"><a href="#数组（Array）" class="headerlink" title="数组（Array）"></a>数组（Array）</h2><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[];</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,...)  &lt;!--末尾添加--&gt;</span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,...) &lt;!--开头添加--&gt;</span><br><span class="line">arr.<span class="title function_">por</span>()&lt;!--删除最后一个--&gt;</span><br><span class="line">arr.<span class="title function_">shift</span>() &lt;!--删除第一个--&gt;</span><br></pre></td></tr></table></figure><h3 id="数组中的方法"><a href="#数组中的方法" class="headerlink" title="数组中的方法"></a>数组中的方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr=[<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>]</span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) &lt;!--将数组连接成一个字符串,输入任意分隔符，空格就为空,<span class="number">512813044</span>--&gt;</span><br><span class="line">arr.<span class="title function_">find</span>(<span class="function"><span class="params">item</span>=&gt;</span>item&gt;<span class="number">10</span>) &lt;!--只会判断第一次，<span class="string">&quot;12&quot;</span>,否则返回<span class="literal">undefined</span>--&gt;</span><br><span class="line">arr.<span class="title function_">every</span>(<span class="function"><span class="params">item</span>=&gt;</span>item&lt;<span class="number">140</span>) &lt;!--只会返回布尔值，所有的都必须小于<span class="number">140</span>，否则返回<span class="literal">false</span>--&gt;</span><br><span class="line">arr.<span class="title function_">some</span>(<span class="function"><span class="params">item</span>=&gt;</span>item==<span class="number">5</span>) &lt;!--只会返回布尔值，只要有一个等于<span class="number">5</span>，否则返回<span class="literal">false</span>--&gt;</span><br><span class="line"><span class="keyword">const</span> arr1=[<span class="number">124</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">5</span>]</span><br><span class="line">arr.<span class="title function_">concat</span>(arr1) &lt;!--[<span class="number">5</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">130</span>,<span class="number">44</span>,<span class="number">124</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">5</span>],合并两个数组新成新的数组--&gt;</span><br><span class="line">arr.<span class="title function_">sort</span>() &lt;!--默认排序是将元素转换为字符串，然后按照它们的 <span class="variable constant_">UTF</span>-<span class="number">16</span> 码元值升序排序，改原有的数组引用地址--&gt;</span><br><span class="line">arr.<span class="title function_">toSorted</span>() &lt;!--这个和<span class="title function_">sort</span>()一样但是返回新数组--&gt;</span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;6&#x27;</span>)&lt;!--[<span class="number">5</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">130</span>,<span class="number">44</span>],<span class="string">&quot;0&quot;</span>表示不删除只增加,如果给<span class="number">2</span>表示删除<span class="number">2</span>个增加一个<span class="number">6</span>--&gt;</span><br><span class="line">arr.<span class="title function_">toSpliced</span>() &lt;!--和splice一样但是返回新数组--&gt;</span><br><span class="line">arr.<span class="title function_">reverse</span>() &lt;!--返回倒序的数组改原有的数组引用地址--&gt;</span><br><span class="line">arr.<span class="title function_">toReversed</span>() &lt;!--和reverse一样但是返回新数组--&gt;</span><br><span class="line">arr.<span class="title function_">findIndex</span>(<span class="function"><span class="params">item</span>=&gt;</span>item&gt;<span class="number">13</span>) &lt;!--只会判断一次，并输出该数组的索引,没有则返回<span class="string">&quot;-1&quot;</span>--&gt;</span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">form</span>() &lt;!--将伪数组转换成真数组,生成新数组--&gt;</span><br><span class="line">arr.<span class="title function_">indexOf</span>(<span class="number">5</span>) &lt;!--返回该值在数组中下标--&gt;</span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[<span class="string">&#x27;&#x27;</span>,....]</span><br><span class="line">&lt;!--遍历数组值--&gt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i])</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--这个输出的是数组(数组不常用)--&gt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--遍历数组--&gt;</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item) &lt;!--值--&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index)&lt;!--索引--&gt;</span><br><span class="line">    &lt;!--这个“forEach”没有返回值<span class="string">&quot;return&quot;</span>也不会创建新数组，这个适合遍历复杂数组，例套数组对象--&gt;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;!-迭代数组--&gt;</span><br><span class="line">&lt;!--map遍历一个数组，并存入一个新数组可增改--&gt;</span><br><span class="line"><span class="keyword">let</span> arr=[<span class="string">&#x27;&#x27;</span>,....]</span><br><span class="line"><span class="keyword">const</span> trarr=arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">ele,index</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span><span class="string">`返回新数组，但是代码有换行会多个\n`</span></span><br><span class="line">&#125;)</span><br><span class="line">&lt;!--累计器--&gt;</span><br><span class="line"><span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="keyword">const</span> sum=arr.<span class="title function_">reduce</span>(<span class="keyword">function</span> (<span class="params">prev,current</span>)&#123; &lt;!--<span class="string">&#x27;prev&#x27;</span>是上一个值，<span class="string">&#x27;current&#x27;</span>当前值也可以用<span class="string">&quot;item&quot;</span></span><br><span class="line">    <span class="keyword">return</span> prev,current</span><br><span class="line">&#125;,&lt;!--这里可加<span class="string">&#x27;初始值&#x27;</span>,<span class="keyword">return</span>返回累计的值最后会加个初始值--&gt;)</span><br></pre></td></tr></table></figure><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"><span class="keyword">let</span> res=nums.<span class="title function_">filter</span>(<span class="function">(<span class="params">num</span>)=&gt;</span>num&gt;<span class="number">5</span>); &lt;!--filter创建一个新数组筛选数组中元素并返回到新数组--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);  <span class="comment">// [6, 7, 8, 9, 10]</span></span><br></pre></td></tr></table></figure><h2 id="对象-obj"><a href="#对象-obj" class="headerlink" title="对象(obj)"></a>对象(obj)</h2><h3 id="增删改查-1"><a href="#增删改查-1" class="headerlink" title="增删改查"></a>增删改查</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line">    变量名:值,</span><br><span class="line">    <span class="string">&#x27;变量名中间有特殊符号“-”等&#x27;</span> &lt;!--就得在外面输入单引号--&gt;</span><br><span class="line">    变量名:值</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--改和增语法一样，判断标准就是对象有没有这个属性，没有就是新增，有就是改--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.[<span class="string">&#x27;变量名特殊符号&#x27;</span>])&lt;!--查带有特殊符号变量名在外面输入中挂号--&gt;</span><br><span class="line">obj.变量名=值 &lt;!--要成的值--&gt;</span><br><span class="line">obj.新变量名=值 &lt;!--在末尾生成新的--&gt;</span><br><span class="line"><span class="keyword">delete</span> obj.变量名 &lt;!--要删除的变量名--&gt;</span><br></pre></td></tr></table></figure><h3 id="对象中的方法"><a href="#对象中的方法" class="headerlink" title="对象中的方法"></a>对象中的方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> o=&#123;<span class="attr">name</span>:<span class="string">&#x27;小米&#x27;</span>,<span class="attr">age</span>:<span class="string">&#x27;18&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">const</span> arr=<span class="title class_">Object</span>.<span class="title function_">keys</span>(o)&lt;!--获得所有的属性名，并返回一个数组--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr) &lt;!--返回所有的属性名,[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>]--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(o))&lt;!--返回所有的值,返回的是数组--&gt;</span><br><span class="line"><span class="keyword">const</span> oo=&#123;&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(oo,o) &lt;!--将o复制到oo完全一模一样的对象--&gt;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(o,&#123;<span class="attr">time</span>:<span class="number">9</span>&#125;) &lt;!--&#123;<span class="attr">name</span>:<span class="string">&#x27;小米&#x27;</span>,<span class="attr">age</span>:<span class="string">&#x27;18&#x27;</span>,<span class="attr">time</span>:<span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历-1"><a href="#遍历-1" class="headerlink" title="遍历"></a>遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line">    变量名:值,</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i)&lt;!--输出的是变量名,但是是字符串--&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[i])&lt;!--输出变量名的值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串-String"><a href="#字符串-String" class="headerlink" title="字符串(String)"></a>字符串(String)</h2><h3 id="字符串中的方法"><a href="#字符串中的方法" class="headerlink" title="字符串中的方法"></a>字符串中的方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str=<span class="string">&#x27;你好，JavaScript&#x27;</span></span><br><span class="line"><span class="keyword">const</span> num=<span class="number">15</span>;</span><br><span class="line"><span class="title class_">String</span>(num) &lt;!--转换成字符串--&gt;</span><br><span class="line">num.<span class="title function_">toString</span>() &lt;!--转换成字符串--&gt;</span><br><span class="line">str.<span class="property">length</span> &lt;!--<span class="number">13</span>,获取长度--&gt;</span><br><span class="line">str.<span class="title function_">split</span>(<span class="string">&#x27;a&#x27;</span>) &lt;!--分隔符，将字符串拆分成数组[<span class="string">&#x27;你好，J&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;Script&#x27;</span>]--&gt;</span><br><span class="line">str.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">3</span>) &lt;!--从第<span class="number">1</span>字符的索引开始，获取到<span class="number">3</span>字符的索引（不包括<span class="number">3</span>）,<span class="string">&#x27;好，&#x27;</span>，如果没有第二参数，则获取后面所有--&gt;</span><br><span class="line"><span class="keyword">const</span> str1=<span class="string">&#x27;Java&#x27;</span></span><br><span class="line">str.<span class="title function_">startsWith</span>(<span class="string">&#x27;Java&#x27;</span>,<span class="string">&quot;可选参数，从哪里位置开始检测&quot;</span>) &lt;!--检测是否以某字符开头--&gt;</span><br><span class="line">str.<span class="title function_">includes</span>(str1,<span class="string">&quot;可选参数，从哪里位置开始检测&quot;</span>) &lt;!--判断一个字符是否在另一个字符里有，有就<span class="literal">true</span>否就<span class="literal">false</span>--&gt;</span><br><span class="line">str.<span class="title function_">toUpperCase</span>() &lt;!--将字母转换大写--&gt;</span><br><span class="line">str.<span class="title function_">toLoweCase</span>()&lt;!--将字母转换小写--&gt;</span><br><span class="line">str.<span class="title function_">indxOf</span>(<span class="string">&#x27;Java&#x27;</span>,<span class="string">&quot;可选参数，从哪里位置开始检测&quot;</span>) &lt;!--返回一个索引位置--&gt;</span><br><span class="line">str.<span class="title function_">endsWith</span>(<span class="string">&#x27;Script&#x27;</span>,<span class="string">&quot;可选参数，从哪里位置开始检测&quot;</span>) &lt;!--检测是否以某字符结尾--&gt;</span><br><span class="line">&lt;!--replace,请看大纲元字符说明--&gt;</span><br><span class="line">str.<span class="title function_">match</span>(<span class="string">&#x27;J&#x27;</span>) &lt;!--用于查找字符串，支持正则表达式--&gt;</span><br></pre></td></tr></table></figure><h2 id="数字-number"><a href="#数字-number" class="headerlink" title="数字(number)"></a>数字(number)</h2><h3 id="数字中的方法"><a href="#数字中的方法" class="headerlink" title="数字中的方法"></a>数字中的方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sum=<span class="number">12.4124</span></span><br><span class="line">sum.<span class="title function_">toFixed</span>(<span class="number">2</span>) &lt;!--保留<span class="number">2</span>位小数,四舍五入--&gt;</span><br></pre></td></tr></table></figure><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>) &lt;!--输出的是圆周率--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(值)) &lt;!--向上取整--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(值)) &lt;!--向下取整--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(值)) &lt;!--四舍五入--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(值)) &lt;!--取整，字符串也会转换成整数--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(多个值)) &lt;!--多个值中取最大值--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(多个值)) &lt;!--多个值中取最小值--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(值)) &lt;!--取绝对值--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*可乘) &lt;!--随机<span class="number">0</span>到<span class="number">1</span>小数,可在外套<span class="title class_">Math</span>.<span class="property">floor</span>取整--&gt;</span><br><span class="line">&lt;!--取n~m随机整数--&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">n,m</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(m-n+<span class="number">1</span>))+n</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getRandom</span>(<span class="number">4</span>,<span class="number">8</span>))</span><br></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h3 id="获取元素-内容-节点"><a href="#获取元素-内容-节点" class="headerlink" title="获取元素,内容,节点"></a>获取元素,内容,节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>() &lt;!--获取元素--&gt;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>() &lt;!--获取的是数组--&gt;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>() &lt;!--获取id--&gt;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>() &lt;!--获取所有标签--&gt;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>() &lt;!--获取所有类--&gt;</span><br><span class="line">innerText &lt;!--获取文本内容也可以替换--&gt;</span><br><span class="line">innerHTML &lt;!--在元素内输出可以文本可以标签--&gt;</span><br><span class="line">&lt;!--节点--&gt;</span><br><span class="line">nodeName &lt;!--名称--&gt;</span><br><span class="line">nodeValue &lt;!--值--&gt;</span><br><span class="line">nodeType &lt;!--类型 <span class="number">1</span>元素 <span class="number">2</span>属性 <span class="number">3</span>文本 <span class="number">8</span>注释 <span class="number">9</span>文档--&gt;</span><br><span class="line">&lt;!--子元素 子节点--&gt;</span><br><span class="line">children &lt;!--获取所有子元素(标签)，是伪数组--&gt;</span><br><span class="line">childNodes &lt;!--获取所有子元素和子节点，是伪数组--&gt;</span><br><span class="line"> <span class="comment">//标签和标签之间的回车也是一个节点</span></span><br><span class="line">firstChild &lt;!--获取第一个节点--&gt;</span><br><span class="line">lastChild &lt;!--获取最后一个节点--&gt;</span><br><span class="line">firstElementChild &lt;!--获取第一个子元素(标签)--&gt;</span><br><span class="line">lastElementChild &lt;!--获取最后一个子元素(标签)</span><br><span class="line">parentNode &lt;!--获取某元素的父节点——--&gt;</span><br><span class="line">&lt;!--获取相邻节点/元素--&gt;</span><br><span class="line">previousSibling &lt;!--获取相邻上一个节点--&gt;</span><br><span class="line">nextSibling &lt;!--获取相邻下一个节点--&gt;</span><br><span class="line">previousElementSibling &lt;!--获取相邻上一个元素--&gt;</span><br><span class="line">nextElementSibling &lt;!--获取相邻下一个元素--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建元素-删除-替换-克隆"><a href="#创建元素-删除-替换-克隆" class="headerlink" title="创建元素,删除,替换,克隆"></a>创建元素,删除,替换,克隆</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>) &lt;!--创建p标签--&gt;</span><br><span class="line"><span class="keyword">let</span> text=<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;创建文本内容&quot;</span>) </span><br><span class="line">p.<span class="title function_">appendChild</span>(text); &lt;!--将text内容添加到p，也可以是元素--&gt;</span><br><span class="line">p.<span class="title function_">insertBefore</span>(,) &lt;!--新元素添加到开始位置--&gt;</span><br><span class="line">p.<span class="title function_">removeChild</span>() &lt;!--移除一个元素，你需要知道该元素的父元素--&gt;</span><br><span class="line">p.<span class="title function_">replaceChild</span>() &lt;!--替换 <span class="variable constant_">HTML</span> <span class="variable constant_">DOM</span> 中的元素--&gt;</span><br><span class="line">cloneNode &lt;!--克隆,想克隆子元素需要加“<span class="literal">true</span>”--&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="元素属性增删改查"><a href="#元素属性增删改查" class="headerlink" title="元素属性增删改查"></a>元素属性增删改查</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--都可以增删改查--&gt;</span><br><span class="line">元素.属性名 &lt;!--不能修改自定义属性--&gt;</span><br><span class="line">元素.<span class="title function_">getAttribute</span>(<span class="string">&#x27;属性名&#x27;</span>,<span class="string">&#x27;值&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="添加类"><a href="#添加类" class="headerlink" title="添加类"></a>添加类</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">classList.<span class="title function_">add</span>() &lt;!--追加类--&gt;</span><br><span class="line">classList.<span class="title function_">remove</span>() &lt;!--删除类--&gt;</span><br><span class="line">classList.<span class="title function_">toggle</span>() &lt;!--切换类--&gt;</span><br><span class="line">className=<span class="string">&#x27;&#x27;</span> &lt;!--直接替换类名--&gt;</span><br></pre></td></tr></table></figure><h3 id="data-自定义属性"><a href="#data-自定义属性" class="headerlink" title="data-自定义属性"></a>data-自定义属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">box.dataset.id <span class="comment">&lt;!--所有一律以data-开头获取里面值都得用dataset对象方式获取--&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(函数,间隔时间) &lt;!--毫秒--&gt;</span><br><span class="line"><span class="built_in">clearInterval</span>(函数) &lt;!--关闭定时器--&gt;</span><br><span class="line">&lt;!--延迟，但会执行后面代码--&gt;</span><br><span class="line"><span class="built_in">setTimeout</span>() &lt;!--延迟定时器，只执行一次--&gt;</span><br><span class="line"><span class="built_in">clearTimeout</span>() &lt;!--清除延迟定时器--&gt;</span><br></pre></td></tr></table></figure><h3 id="事件监听和解绑"><a href="#事件监听和解绑" class="headerlink" title="事件监听和解绑"></a>事件监听和解绑</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">元素对象.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>,要执行得函数)</span><br><span class="line">元素对象.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>) &lt;!-- 解除事件--&gt;</span><br><span class="line">鼠标事件</span><br><span class="line">click当用户点击某个对象时调用的事件句柄。</span><br><span class="line">contextmenu在用户点击鼠标右键打开上下文菜单时触发</span><br><span class="line">dblclick当用户双击某个对象时调用的事件句柄。</span><br><span class="line">mousedown鼠标按钮被按下。</span><br><span class="line">mouseenter当鼠标指针移动到元素上时触发。</span><br><span class="line">mouseleave当鼠标指针移出元素时触发</span><br><span class="line">mousemove鼠标被移动。</span><br><span class="line">mouseover鼠标移到某元素之上。</span><br><span class="line">mouseout鼠标从某元素移开。</span><br><span class="line">mouseup鼠标按键被松开。</span><br><span class="line">键盘事件</span><br><span class="line">属性描述<span class="variable constant_">DOM</span></span><br><span class="line">keydown某个键盘按键被按下。</span><br><span class="line">keypress某个键盘按键被按下并松开。</span><br><span class="line">keyup某个键盘按键被松开。</span><br><span class="line">框架/对象（<span class="title class_">Frame</span>/<span class="title class_">Object</span>）事件</span><br><span class="line">abort图像的加载被中断。()</span><br><span class="line">beforeunload该事件在即将离开页面（刷新或关闭）时触发</span><br><span class="line">error在加载文档或图像时发生错误。(,和)</span><br><span class="line">hashchange该事件在当前<span class="variable constant_">URL</span>的锚部分发生修改时触发。</span><br><span class="line">load一张页面或一幅图像完成加载。</span><br><span class="line">pageshow该事件在用户访问页面时触发</span><br><span class="line">pagehide该事件在用户离开当前网页跳转到另外一个页面时触发</span><br><span class="line">resize窗口或框架被重新调整大小。</span><br><span class="line">scroll当文档被滚动时发生的事件。</span><br><span class="line">unload用户退出页面。(和)</span><br><span class="line">表单事件</span><br><span class="line">submit提交表单时触发</span><br><span class="line">blur元素失去焦点时触发</span><br><span class="line">change该事件在表单元素的内容改变时触发(,,,和)</span><br><span class="line">focus元素获取焦点时触发</span><br><span class="line">focusin元素即将获取焦点是触发</span><br><span class="line">focusout元素即将失去焦点是触发</span><br><span class="line">input元素获取用户输入是触发</span><br><span class="line">reset表单重置时触发</span><br><span class="line">search用户向搜索域输入文本时触发(</span><br><span class="line">剪贴板事件</span><br><span class="line">copy该事件在用户拷贝元素内容时触发</span><br><span class="line">cut该事件在用户剪切元素内容时触发</span><br><span class="line">paste该事件在用户粘贴元素内容时触发</span><br><span class="line">打印事件</span><br><span class="line">afterprint该事件在页面已经开始打印，或者打印窗口已经关闭时触发</span><br><span class="line">beforeprint该事件在页面即将开始打印时触发</span><br><span class="line">拖动事件</span><br><span class="line">drag该事件在元素正在拖动时触发</span><br><span class="line">dragend该事件在用户完成元素的拖动时触发</span><br><span class="line">dragenter该事件在拖动的元素进入放置目标时触发</span><br><span class="line">dragleave该事件在拖动元素离开放置目标时触发</span><br><span class="line">dragover该事件在拖动元素在放置目标上时触发</span><br><span class="line">dragstart该事件在用户开始拖动元素时触发</span><br><span class="line">drop该事件在拖动元素放置在目标区域时触发</span><br><span class="line">多媒体（<span class="title class_">Media</span>）事件</span><br><span class="line">abort事件在视频/音频（audio/video）终止加载时触发。</span><br><span class="line">canplay事件在用户可以开始播放视频/音频（audio/video）时触发。</span><br><span class="line">canplaythrough事件在视频/音频（audio/video）可以正常播放且无需停顿和缓冲时触发。</span><br><span class="line">durationchange事件在视频/音频（audio/video）的时长发生变化时触发。</span><br><span class="line">emptiedTheeventoccurswhenthecurrentplaylistisempty</span><br><span class="line">ended事件在视频/音频（audio/video）播放结束时触发。</span><br><span class="line">error事件在视频/音频（audio/video）数据加载期间发生错误时触发。</span><br><span class="line">loadeddata事件在浏览器加载视频/音频（audio/video）当前帧时触发触发。</span><br><span class="line">loadedmetadata事件在指定视频/音频（audio/video）的元数据加载后触发。</span><br><span class="line">loadstart事件在浏览器开始寻找指定视频/音频（audio/video）触发。</span><br><span class="line">pause事件在视频/音频（audio/video）暂停时触发。</span><br><span class="line">play事件在视频/音频（audio/video）开始播放时触发。</span><br><span class="line">playing事件在视频/音频（audio/video）暂停或者在缓冲后准备重新开始播放时触发。</span><br><span class="line">progress事件在浏览器下载指定的视频/音频（audio/video）时触发。</span><br><span class="line">ratechange事件在视频/音频（audio/video）的播放速度发送改变时触发。</span><br><span class="line">seeked事件在用户重新定位视频/音频（audio/video）的播放位置后触发。</span><br><span class="line">seeking事件在用户开始重新定位视频/音频（audio/video）时触发。</span><br><span class="line">stalled事件在浏览器获取媒体数据，但媒体数据不可用时触发。</span><br><span class="line">suspend事件在浏览器读取媒体数据中止时触发。</span><br><span class="line">timeupdate事件在当前的播放位置发送改变时触发。</span><br><span class="line">volumechange事件在音量发生改变时触发。</span><br><span class="line">waiting事件在视频由于要播放下一帧而需要缓冲时触发。</span><br><span class="line">动画事件</span><br><span class="line">animationend该事件在<span class="variable constant_">CSS</span>动画结束播放时触发</span><br><span class="line">animationiteration该事件在<span class="variable constant_">CSS</span>动画重复播放时触发</span><br><span class="line">animationstart该事件在<span class="variable constant_">CSS</span>动画开始播放时触发</span><br><span class="line">过渡事件</span><br><span class="line">transitionend该事件在<span class="variable constant_">CSS</span>完成过渡后触发。</span><br><span class="line">其他事件</span><br><span class="line">message该事件通过或者从对象(<span class="title class_">WebSocket</span>,<span class="title class_">WebWorker</span>,<span class="title class_">EventSource</span>或者子frame或父窗口)接收到消息时触发</span><br><span class="line">online该事件在浏览器开始在线工作时触发。</span><br><span class="line">offline该事件在浏览器开始离线工作时触发。</span><br><span class="line">popstate该事件在窗口的浏览历史（history对象）发生改变时触发。eventoccurswhenthewindow’shistorychanges</span><br><span class="line">show该事件当</span><br></pre></td></tr></table></figure><h3 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="title function_">stopPropagation</span>() &lt;!--是阻止目标元素的冒泡事件，但是会不阻止默认行为--&gt;</span><br><span class="line">事件对象.<span class="title function_">preventDefault</span>() &lt;!--取消一个目标元素的默认行为。既然是说默认行为--&gt;</span><br></pre></td></tr></table></figure><h3 id="offset-client-scroll-page-getBoundingClientRect"><a href="#offset-client-scroll-page-getBoundingClientRect" class="headerlink" title="offset,client,scroll,page,getBoundingClientRect"></a>offset,client,scroll,page,getBoundingClientRect</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--元素偏移量offset--&gt;</span><br><span class="line">element.<span class="property">offsetParent</span> &lt;!--返回该元素带有定位的父级元素，如果父级元素没有定位则返回body--&gt;</span><br><span class="line">element.<span class="property">offsetTop</span> &lt;!--返回该元素上外边框相对带有定位的父级元素上内边框的偏移，如果父级元素没有定位则返回相对body上方的偏移--&gt;</span><br><span class="line">element.<span class="property">offsetLeft</span> &lt;!--返回该元素左外边框相对带有定位的父级元素左内边框的偏移，如果父级元素没有定位则返回相对body左侧的偏移--&gt;</span><br><span class="line">element.<span class="property">offsetWidth</span> &lt;!--返回该元素包括padding+border+content的高度--&gt;</span><br><span class="line">element.<span class="property">offsetHeight</span> &lt;!--返回该元素包括padding+border+content的高度--&gt;</span><br><span class="line">&lt;!--元素可视区client--&gt;</span><br><span class="line">element.<span class="property">clientTop</span> &lt;!--返回该元素上边框大小--&gt;</span><br><span class="line">element.<span class="property">clientLeft</span> &lt;!--返回该元素左边框大小--&gt;</span><br><span class="line">element.<span class="property">clientWidth</span> &lt;!--返回该元素包括padding+content的宽度，不含边框--&gt;</span><br><span class="line">element.<span class="property">clientHeight</span> &lt;!--返回该元素包括padding+content的高度，不含边框--&gt;</span><br><span class="line">&lt;!--元素滚动scroll--&gt;</span><br><span class="line">element.<span class="property">scrollTop</span> &lt;!--返回被卷去的上侧距离，从内容顶部到上内边框--&gt;</span><br><span class="line">element.<span class="property">scrollLeft</span> &lt;!--返回被卷去的左侧距离--&gt;</span><br><span class="line">element.<span class="property">scrollWidth</span>&lt;!--返回该元素自身实际的宽度，不含边框--&gt;</span><br><span class="line">element.<span class="property">scrollHeight</span> &lt;!--返回该元素自身实际的高度，不含边框--&gt;</span><br><span class="line">pageX &lt;!--返回该鼠标与整个页面（不包括上面标签）的x坐标--&gt;</span><br><span class="line">pageY &lt;!--返回该鼠标与整个页面（不包括上面标签）的Y坐标</span><br><span class="line"><span class="title function_">getBoundingClientRect</span>() &lt;!--返回该元素大小及其对于视口的位置</span><br></pre></td></tr></table></figure><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_javascript_img1.webp" alt="image-20231214155829227.webp"></p><h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><h4 id="Date"><a href="#Date" class="headerlink" title="Date()"></a>Date()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> time=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getFullYear</span>()); <span class="comment">//当前日期的年</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getMonth</span>() + <span class="number">1</span>); <span class="comment">//月份+1 由于月份是0-11计算 所以需要 +1 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getDate</span>()); <span class="comment">// 日</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getDay</span>()); <span class="comment">// 星期几  注意：星期日返回的是0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getHours</span>()); <span class="comment">// 时</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getMinutes</span>()); <span class="comment">// 分</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getSeconds</span>()); <span class="comment">// 秒</span></span><br></pre></td></tr></table></figure><h4 id="toLocaleString-NaN"><a href="#toLocaleString-NaN" class="headerlink" title="toLocaleString"></a>toLocaleString</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timer = <span class="keyword">new</span> <span class="title class_">Date</span>() &lt;!--该方法可以格式化日期和时间,同时衍生出另外两种分别获得日期和时间的方法--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(timer.<span class="title function_">toLocaleString</span>()) <span class="comment">// 日期+时间 2023/5/28 23:07:35</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(timer.<span class="title function_">toLocaleString</span>(<span class="string">&#x27;en-US&#x27;</span>, &#123; <span class="attr">timeZone</span>: <span class="string">&#x27;America/New_York&#x27;</span> &#125;))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(timer.<span class="title function_">toLocaleDateString</span>()) <span class="comment">// 日期 2023/5/28 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(timer.<span class="title function_">toLocaleTimeString</span>()) <span class="comment">// 时间 23:10:31 。</span></span><br></pre></td></tr></table></figure><h4 id="倒计时时间戳"><a href="#倒计时时间戳" class="headerlink" title="倒计时时间戳"></a>倒计时时间戳</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countDown</span>(<span class="params">time</span>) &#123;</span><br><span class="line">       <span class="keyword">let</span> dateNow = +<span class="keyword">new</span> <span class="title class_">Date</span>(); <span class="comment">// 获取当前时间的毫秒数</span></span><br><span class="line">       <span class="keyword">let</span> dateOver = +<span class="keyword">new</span> <span class="title class_">Date</span>(time); <span class="comment">// 获取目标时间的毫秒数</span></span><br><span class="line">       <span class="keyword">let</span> gapTime = (dateOver - dateNow) / <span class="number">1000</span> <span class="comment">// 由毫秒得到秒</span></span><br><span class="line">       <span class="keyword">let</span> s = <span class="title function_">pad</span>(<span class="built_in">parseInt</span>(gapTime % <span class="number">60</span>)); <span class="comment">// 秒数</span></span><br><span class="line">       <span class="keyword">let</span> m = <span class="title function_">pad</span>(<span class="built_in">parseInt</span>(gapTime / <span class="number">60</span> % <span class="number">60</span>)); <span class="comment">// 分钟数</span></span><br><span class="line">       <span class="keyword">let</span> h = <span class="title function_">pad</span>(<span class="built_in">parseInt</span>(gapTime / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>)); <span class="comment">// 小时数</span></span><br><span class="line">       <span class="keyword">let</span> d = <span class="title function_">pad</span>(<span class="built_in">parseInt</span>(cha / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>)); <span class="comment">// 天数</span></span><br><span class="line">       <span class="keyword">return</span> d + <span class="string">&#x27;天&#x27;</span> + h + <span class="string">&#x27;小时&#x27;</span> + m + <span class="string">&#x27;分钟&#x27;</span> + s + <span class="string">&#x27;秒&#x27;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="location-url"><a href="#location-url" class="headerlink" title="location(url)"></a>location(url)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location.<span class="property">href</span> &lt;!--获取url的地址--&gt;</span><br><span class="line">location.<span class="property">search</span> &lt;!--获取url带<span class="string">&quot;?&quot;</span>后面的参数--&gt;</span><br><span class="line">location.<span class="property">hash</span> &lt;!--获取url带<span class="string">&quot;#&quot;</span>后面的参数--&gt;</span><br><span class="line">location.<span class="title function_">reload</span>(<span class="string">&quot;传true，就是强制刷新&quot;</span>) &lt;!--刷新页面--&gt;</span><br></pre></td></tr></table></figure><h2 id="navigator-获取浏览器相关"><a href="#navigator-获取浏览器相关" class="headerlink" title="navigator(获取浏览器相关)"></a>navigator(获取浏览器相关)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(navigator) &lt;!--获取浏览器相关属性--&gt;</span><br><span class="line">navigator.<span class="property">userAgent</span> &lt;!--检测浏览器的版本和平台--&gt;</span><br><span class="line">&lt;!--判断是否为移动端正则表达式--&gt;</span><br><span class="line">!(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> userAgent = navigator.<span class="property">userAgent</span></span><br><span class="line">      <span class="comment">// 验证是否为Android或iPhone</span></span><br><span class="line">      <span class="keyword">const</span> android = userAgent.<span class="title function_">match</span>(<span class="regexp">/(Android);?[\s\/]+([\d.]+)?/</span>)</span><br><span class="line">      <span class="keyword">const</span> iphone = userAgent.<span class="title function_">match</span>(<span class="regexp">/(iPhone\sOS)\s([\d_]+)/</span>)</span><br><span class="line">      <span class="comment">// 如果是Android或iPhone，则跳转至移动站点</span></span><br><span class="line">      <span class="keyword">if</span> (android || iphone) &#123;</span><br><span class="line">        location.<span class="property">href</span> = <span class="string">&#x27;http://m.itcast.cn&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    <span class="comment">// !(function () &#123; &#125;)();</span></span><br><span class="line">    !<span class="keyword">function</span> (<span class="params"></span>) &#123; &#125;()</span><br></pre></td></tr></table></figure><h2 id="history页面-前进，后退"><a href="#history页面-前进，后退" class="headerlink" title="history页面(前进，后退)"></a>history页面(前进，后退)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history.<span class="title function_">back</span>() &lt;!--后退一个链接页面--&gt;</span><br><span class="line">history.<span class="title function_">forward</span>() &lt;!--前进一个链接页面--&gt;</span><br><span class="line">history.<span class="title function_">go</span>() &lt;!--<span class="number">1</span>是前进一个，-<span class="number">1</span>是后退一个......--&gt;</span><br></pre></td></tr></table></figure><h2 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h2><h3 id="localStorage-sessionStorage-字符串数据库"><a href="#localStorage-sessionStorage-字符串数据库" class="headerlink" title="localStorage,sessionStorage(字符串数据库)"></a>localStorage,sessionStorage(字符串数据库)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span> &lt;!--关掉浏览器还是有数据，存在电脑上，必须用户手动删除--&gt;</span><br><span class="line">&lt;!--key得带单引号--&gt;</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(key,value) &lt;!--变量名,值,没有这个变量名就是增，有就是改值--&gt;</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(key) &lt;!--读取数据库值--&gt;</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(key) &lt;!--在数据库删除该变量和值--&gt;</span><br><span class="line"><span class="variable language_">sessionStorage</span> &lt;!--关掉浏览器直接清空数据，用法和<span class="variable language_">localStorage</span>一样--&gt;</span><br></pre></td></tr></table></figure><h3 id="将复杂类型互转换JSON"><a href="#将复杂类型互转换JSON" class="headerlink" title="将复杂类型互转换JSON"></a>将复杂类型互转换JSON</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(复杂类型) &lt;!--例对象，但是获取的是字符串--&gt;</span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>字符串) &lt;!--转换为对象--&gt;</span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--正则都是以“<span class="comment">//”在中间写规则--&gt;</span></span><br><span class="line">reg=<span class="regexp">/定义规则/</span></span><br><span class="line">&lt;!--也可以直接写，定义规则.<span class="title function_">test</span>()或<span class="title function_">exec</span>()--&gt;</span><br><span class="line">reg.<span class="title function_">test</span>(<span class="string">&#x27;要判断是否为reg写的符合规则&#x27;</span>) &lt;!--返回<span class="literal">true</span>,<span class="literal">false</span>--&gt;</span><br><span class="line">reg.<span class="title function_">exec</span>(<span class="string">&#x27;要判断是否为reg写的符合规则&#x27;</span>) &lt;!--返回一个数组，检索查找，没有为<span class="literal">null</span>--&gt;</span><br></pre></td></tr></table></figure><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--边界符--&gt;</span><br><span class="line">&lt;!--里面加<span class="string">&quot;|&quot;</span>表示或--&gt;</span><br><span class="line">&lt;!--<span class="string">&quot;^&quot;</span>开头是什么，“$”结尾是什么<span class="string">&quot;g&quot;</span>/外面加g表示全局匹配--&gt;</span><br><span class="line"><span class="regexp">/^哈/</span> &lt;!--开头为哈都为<span class="literal">true</span>--&gt;</span><br><span class="line"><span class="regexp">/^哈$/</span> &lt;!--精确匹配,前后都为<span class="string">&quot;哈&quot;</span>，一个字符--&gt;</span><br><span class="line">&lt;!--量词--&gt;</span><br><span class="line"><span class="regexp">/^哈*$/</span> &lt;!--<span class="string">&quot;*&quot;</span>表示“哈”后面可以以&gt;=<span class="number">0</span>次出现,为空也是<span class="literal">true</span>，但两个字符以上，第一个字必须为“哈”和结尾为<span class="string">&quot;哈&quot;</span>,而且中间不能有以<span class="string">&quot;哈&quot;</span>以外字,否则为<span class="literal">false</span>--&gt;</span><br><span class="line"><span class="regexp">/^哈+$/</span> &lt;!--<span class="string">&quot;+&quot;</span>表示&gt;=<span class="number">1</span>，必须有一个,和<span class="string">&quot;*&quot;</span>差不多--&gt;</span><br><span class="line"><span class="regexp">/^哈&gt;$/</span> &lt;!--<span class="number">0</span>||<span class="number">1</span>，<span class="number">0</span>个哈或者<span class="number">1</span>个哈--&gt;</span><br><span class="line"><span class="regexp">/^哈&#123;n&#125;$/</span> &lt;!--例n输入<span class="number">4</span>，哈必须为<span class="number">4</span>个--&gt;</span><br><span class="line"><span class="regexp">/^哈&#123;n,&#125;$/</span> &lt;!--例n输入<span class="number">4</span>，哈必须<span class="number">4</span>以上--&gt;</span><br><span class="line"><span class="regexp">/^哈&#123;n,m&#125;$/</span>&lt;!--例n输入<span class="number">4</span>，m为<span class="number">8</span>，哈必须在<span class="number">4</span>-<span class="number">8</span>之间--&gt;</span><br><span class="line">&lt;!--“[]”可匹配里面所有的字符--&gt;</span><br><span class="line"><span class="regexp">/[abc]/</span> &lt;!--a或b或c--&gt;</span><br><span class="line"><span class="regexp">/^[abc]$/</span> &lt;!--“^&amp;为精确匹配”a或b或c，但只能一个--&gt;</span><br><span class="line"><span class="regexp">/^[abc]&#123;n&#125;$/</span> &lt;!--例n为<span class="number">2</span>，必须为<span class="number">2</span>个字符，前后都属于abc当中--&gt;</span><br><span class="line">&lt;!--“-”为范围--&gt;</span><br><span class="line"><span class="regexp">/^[a-zA-Z0-9]$/</span> &lt;!--a到z或大写或<span class="number">0</span>到<span class="number">9</span>,必须为一个，范围也得是里面--&gt;</span><br><span class="line"><span class="regexp">/^[a-zA-Z0-9]&#123;n&#125;$/</span> &lt;!--a到z或大写或<span class="number">0</span>到<span class="number">9</span>,必须为<span class="string">&quot;n&quot;</span>个，范围也得是里面--&gt;</span><br><span class="line">&lt;!--在<span class="string">&quot;[]&quot;</span>中间加<span class="string">&quot;^&quot;</span>表示取反--&gt;</span><br><span class="line"><span class="regexp">/^[^a-zA-Z0-9]$/</span> &lt;!--a到z或大写或<span class="number">0</span>到<span class="number">9</span>以外的,必须为一个--&gt;</span><br><span class="line">&lt;!--<span class="string">&quot;.&quot;</span>表示匹配除换行符之外的任何单个字符--&gt;</span><br><span class="line">&lt;!--<span class="string">&quot;//&quot;</span>后面加i表示不区分大小写，g是匹配所有满足正则表达式的结果,ig都可以加--&gt;</span><br><span class="line"><span class="regexp">/^$/i</span>.<span class="title function_">test</span>()</span><br><span class="line">&lt;!--replace，用正则表达式替换--&gt;</span><br><span class="line"><span class="keyword">const</span> tr=<span class="string">&#x27;java是一门非常好的,JAva工资高&#x27;</span></span><br><span class="line">re=tr.<span class="title function_">replace</span>(<span class="regexp">/Java/gi</span>,<span class="string">&#x27;前端&#x27;</span>) &lt;!--只加i只替换一个--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(re) <span class="comment">//前端是一门非常好的，前端工资高</span></span><br></pre></td></tr></table></figure><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_javascript_img2.webp" alt="2023-12-16_16-42-21.webp"></p><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--构造函数首字母大写,只能用<span class="keyword">new</span>,没有<span class="keyword">return</span>,<span class="variable language_">this</span>指向实例对象--&gt;</span><br><span class="line">&lt;!--每个对象构造函数最上层有<span class="title class_">Object</span>,再上面就是<span class="literal">null</span>--&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Obj</span>(<span class="params">name,age,gener</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span>=age;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">gener</span>=gener;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!--创建实例对象--&gt;</span><br><span class="line"><span class="keyword">const</span> item1=<span class="keyword">new</span> <span class="title function_">obj</span>(<span class="string">&quot;乔治&quot;</span>,<span class="number">18</span>,<span class="string">&quot;女&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> item2=<span class="keyword">new</span> <span class="title function_">obj</span>(<span class="string">&quot;猪妈妈&quot;</span>,<span class="number">59</span>,<span class="string">&quot;女&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(item1) &lt;!--&#123;<span class="attr">name</span>:<span class="string">&#x27;乔治&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">gener</span>:<span class="string">&#x27;女&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--原型对象,有一个prototype,指向constructor里面有构造函数数--&gt;</span><br><span class="line"><span class="title class_">Obj</span>.<span class="property"><span class="keyword">prototype</span></span> &lt;!--prototype是一个对象，但里面有constructor这个里面就是<span class="title class_">Obj</span>构造函数--&gt;</span><br><span class="line"><span class="title class_">Obj</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">s</span>=<span class="keyword">function</span> (<span class="params"></span>)&#123; &lt;!--这个就相当于吧函数添加到prototyoe对象里，此时这里面有s和构造函数<span class="title class_">Obj</span>，这样所有实例要调用这个函数，只会在内存当中出现一次--&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;共享一个方法&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">item1.<span class="title function_">s</span>() &lt;!--调用--&gt;</span><br><span class="line"><span class="title class_">Obj</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> &lt;!--constructor指的是这个构造函数<span class="title class_">Obj</span>，爹--&gt;</span><br><span class="line">&lt;!--对象原型,这个是实例化对象指向constructor里面有构造函数--&gt;</span><br><span class="line">s1.<span class="property">__proto__</span> &lt;!--指向prototype,<span class="string">&quot;注意__proto__和[[Prototype]]是一样意思&quot;</span>--&gt;</span><br><span class="line">&lt;!--上方就是一家三口--&gt;</span><br><span class="line">&lt;!--原型链,每个构造函数的prototype都有<span class="title class_">Object</span>构造函数--&gt;</span><br><span class="line"><span class="title class_">Obj</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span> &lt;!--指<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>--&gt;</span><br><span class="line">&lt;!--原型链--&gt;</span><br><span class="line">&lt;!--<span class="keyword">instanceof</span>判断是不是在object原型链--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(item1 <span class="keyword">instanceof</span> <span class="title class_">Obj</span>) &lt;!--判断item1实例是不是<span class="title class_">Obj</span>构造函数创造的，返回<span class="literal">true</span>，<span class="literal">false</span>--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(item1 <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &lt;!--<span class="literal">true</span>--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(item1 <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &lt;!--<span class="literal">false</span>--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &lt;!--<span class="literal">true</span>--&gt;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span> <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &lt;!--<span class="literal">true</span> 万物皆对象--&gt;</span><br></pre></td></tr></table></figure><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><p>其本质意思就是可以调用自己，但是得有退出，否则会溢出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i=<span class="number">1</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">6</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="title function_">s</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">s</span>();</span><br></pre></td></tr></table></figure><h2 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h2><p>浅拷贝和深拷贝只针对引用类型</p><h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3><p>浅拷贝复制的是地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Obj</span>=&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;LvemiX&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="attr">functions</span>:&#123;</span><br><span class="line">    <span class="attr">text</span>:<span class="string">&#x27;520&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第一种复制</span></span><br><span class="line"><span class="keyword">const</span> copy=&#123;...<span class="title class_">Obj</span>&#125;;</span><br><span class="line"><span class="comment">// 第二种复制</span></span><br><span class="line"><span class="keyword">const</span> copy=&#123; &#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(copy,<span class="title class_">Obj</span>); </span><br><span class="line">copy.<span class="property">functions</span>.<span class="property">text</span>=<span class="string">&#x27;250&#x27;</span>; </span><br><span class="line"><span class="comment">// 数组浅拷贝</span></span><br><span class="line"><span class="keyword">const</span> arr=[<span class="string">&quot;LvemiX&quot;</span>,<span class="number">18</span>,[<span class="string">&quot;520&quot;</span>]]</span><br><span class="line"><span class="comment">// 第一种复制</span></span><br><span class="line"><span class="keyword">const</span> copy=[...arr]</span><br><span class="line"><span class="comment">// 第二种复制</span></span><br><span class="line"><span class="keyword">const</span> copy=<span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">concat</span>(arr)</span><br><span class="line">arr[<span class="number">2</span>][<span class="number">0</span>]=<span class="string">&quot;250&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copy);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果里面多层复杂，浅拷贝只会复制地址，并不会复制值</span></span><br></pre></td></tr></table></figure><h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Obj</span>=&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;LvemiX&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line">    <span class="attr">text</span>:[<span class="string">&quot;520&quot;</span>,&#123;<span class="attr">numbers</span>:<span class="number">70</span>&#125;]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 下方是判断数据类型，来继承用户给的类型</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Type</span>(<span class="params">type</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(type <span class="keyword">instanceof</span> <span class="title class_">Array</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (type <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 深拷贝，无论怎么改都是不会改旧数据</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">DeepCopy</span>(<span class="params">newCopy,oldCopy</span>)&#123; <span class="comment">// 递归函数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> oldCopy)&#123;</span><br><span class="line">        <span class="keyword">if</span>(oldCopy[i] <span class="keyword">instanceof</span> <span class="title class_">Array</span>)&#123; <span class="comment">// 先判断数组，因为console.log([] instanceof Object) 也是对象</span></span><br><span class="line">            newCopy[i]=[]</span><br><span class="line">            <span class="title class_">DeepCopy</span>(newCopy[i],oldCopy[i])</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (oldCopy[i] <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123; <span class="comment">// 对象不是数组类型</span></span><br><span class="line">            newCopy[i]=&#123;&#125;</span><br><span class="line">            <span class="title class_">DeepCopy</span>(newCopy[i],oldCopy[i])</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            newCopy[i]=oldCopy[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newCopy <span class="comment">// 返回新数据</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> copy=<span class="title class_">DeepCopy</span>(<span class="title class_">Type</span>(<span class="title class_">Obj</span>),<span class="title class_">Obj</span>);</span><br><span class="line"><span class="title class_">Obj</span>.<span class="property">text</span>[<span class="number">1</span>].<span class="property">numbers</span>=<span class="number">80</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Obj</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copy);</span><br></pre></td></tr></table></figure><h3 id="Lodash-API"><a href="#Lodash-API" class="headerlink" title="Lodash API"></a>Lodash API</h3><h4 id="clone"><a href="#clone" class="headerlink" title="_.clone"></a>_.clone</h4><p>创建一个<code>value</code>的浅拷贝</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objects = [&#123; <span class="string">&#x27;a&#x27;</span>: <span class="number">1</span> &#125;, &#123; <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span> &#125;];</span><br><span class="line"><span class="keyword">var</span> shallow = _.<span class="title function_">clone</span>(objects);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(shallow[<span class="number">0</span>] === objects[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">// =&gt; true</span></span><br></pre></td></tr></table></figure><h4 id="cloneDeep"><a href="#cloneDeep" class="headerlink" title="_.cloneDeep"></a>_.cloneDeep</h4><p>这个方法类似<code>_.clone</code>，除了它会递归拷贝 <code>value</code>。（注：也叫深拷贝）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objects = [&#123; <span class="string">&#x27;a&#x27;</span>: <span class="number">1</span> &#125;, &#123; <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span> &#125;];</span><br><span class="line"><span class="keyword">var</span> deep = _.<span class="title function_">cloneDeep</span>(objects);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(deep[<span class="number">0</span>] === objects[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">// =&gt; false</span></span><br></pre></td></tr></table></figure><blockquote><p>更多内容请参考<a href="https://www.lodashjs.com/">Lodash 简介 | Lodash中文文档 | Lodash中文网 (lodashjs.com)</a></p></blockquote><h3 id="用JSON深拷贝"><a href="#用JSON深拷贝" class="headerlink" title="用JSON深拷贝"></a>用JSON深拷贝</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> o=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj)) <span class="comment">// 先吧对象转换JSON，再吧JSON转换对象，这样复制的不会和原来相关</span></span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><h3 id="throw抛异常"><a href="#throw抛异常" class="headerlink" title="throw抛异常"></a>throw抛异常</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">x,f</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!x||!f)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;参数不能为空&#x27;</span>) </span><br><span class="line">        <span class="comment">// 程序会终止运行</span></span><br><span class="line">        <span class="comment">// Error对象配合throw使用，能够设置更详细的错误信息</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> x+f</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">error</span>()</span><br></pre></td></tr></table></figure><h3 id="try-catch-finally"><a href="#try-catch-finally" class="headerlink" title="try-catch-finally"></a>try-catch-finally</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">// 可能会错误的代码，可以写道try，由catch发送控制台错误</span></span><br><span class="line">        <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">queryselector</span>(<span class="string">&#x27;.p&#x27;</span>);</span><br><span class="line">        p.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">        <span class="comment">// 拦截错误，提示浏览器提供的信息错误，但是不中断后面的程序</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">        <span class="comment">// 需要return中断程序</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">        <span class="comment">// 也可以用throw中断并抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;报错了&#x27;</span>)</span><br><span class="line">    &#125;<span class="keyword">finally</span>&#123;<span class="comment">// 必须执行的一段，不管报没报错</span></span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;执行了，后面不会执行了&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">error</span>()</span><br></pre></td></tr></table></figure><h3 id="debugger"><a href="#debugger" class="headerlink" title="debugger"></a>debugger</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;a.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">debugger</span> <span class="comment">// 断点，在浏览器控制台可一步一步执行该代码，查看实时变量</span></span><br><span class="line">    a[<span class="number">0</span>]+=<span class="number">5</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br></pre></td></tr></table></figure><h2 id="this改变指向"><a href="#this改变指向" class="headerlink" title="this改变指向"></a>this改变指向</h2><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj=&#123;</span><br><span class="line">    <span class="attr">uname</span>:<span class="string">&#x27;LvemiX&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y) <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line">a.<span class="title function_">call</span>(obj,<span class="number">1</span>,<span class="number">2</span>,……)  <span class="comment">// 这时this指向着是obj，则后面可以传参到函数里，会调用函数</span></span><br></pre></td></tr></table></figure><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj=&#123;</span><br><span class="line">    <span class="attr">uname</span>:<span class="string">&#x27;LvemiX&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y) <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line">a.<span class="title function_">apply</span>(obj,[<span class="number">1</span>,<span class="number">2</span>,……]) <span class="comment">// 这个和call一样，但是传参必是用数组来传参，会调用函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> max=<span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]) <span class="comment">//Math.max也是函数可以用apply,this可以为null</span></span><br><span class="line"><span class="keyword">const</span> max=<span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,arr)</span><br></pre></td></tr></table></figure><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj=&#123;</span><br><span class="line">    <span class="attr">uname</span>:<span class="string">&#x27;LvemiX&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y) <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> b=a.<span class="title function_">bind</span>(obj,<span class="number">1</span>,<span class="number">2</span>,……) <span class="comment">// bind会将原函数拷贝成新函数，新函数this会改变，原函数不会，不会调用函数</span></span><br><span class="line"><span class="title function_">b</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">disabled</span>=<span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">disabled</span>=<span class="literal">false</span> <span class="comment">// 这时this指向着window,window.setTimeout</span></span><br><span class="line">    &#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>),<span class="number">2000</span>) <span class="comment">// 这里this指着是button，顺便将setTimeout中的this替换成setTimeout外面的this，也就是button</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Set对象"><a href="#Set对象" class="headerlink" title="Set对象"></a>Set对象</h2><p>Set 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用</p><p>Set 对象存储的值总是唯一的，所以需要判断两个值是否恒等。有几个特殊值需要特殊对待：</p><ul><li>+0 与 -0 在存储判断唯一性的时候是恒等的，所以不重复；</li><li>undefined 与 undefined 是恒等的，所以不重复；</li><li>NaN 与 NaN 是不恒等的，但是在 Set 中只能存一个，不重复。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mySet = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line"> </span><br><span class="line">mySet.<span class="title function_">add</span>(<span class="number">1</span>); <span class="comment">// Set(1) &#123;1&#125;</span></span><br><span class="line">mySet.<span class="title function_">add</span>(<span class="number">5</span>); <span class="comment">// Set(2) &#123;1, 5&#125;</span></span><br><span class="line">mySet.<span class="title function_">add</span>(<span class="number">5</span>); <span class="comment">// Set(2) &#123;1, 5&#125; 这里体现了值的唯一性</span></span><br><span class="line">mySet.<span class="title function_">add</span>(<span class="string">&quot;some text&quot;</span>); </span><br><span class="line"><span class="comment">// Set(3) &#123;1, 5, &quot;some text&quot;&#125; 这里体现了类型的多样性</span></span><br><span class="line"><span class="keyword">var</span> o = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>&#125;; </span><br><span class="line">mySet.<span class="title function_">add</span>(o);</span><br><span class="line">mySet.<span class="title function_">add</span>(&#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>&#125;); </span><br><span class="line"><span class="comment">// Set(5) &#123;1, 5, &quot;some text&quot;, &#123;…&#125;, &#123;…&#125;&#125; </span></span><br><span class="line"><span class="comment">// 这里体现了对象之间引用不同不恒等，即使值相同，Set 也能存储</span></span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p><strong>Array</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array 转 Set</span></span><br><span class="line"><span class="keyword">let</span> mySet = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&quot;value1&quot;</span>, <span class="string">&quot;value2&quot;</span>, <span class="string">&quot;value3&quot;</span>]);</span><br><span class="line"><span class="comment">// 用...操作符，将 Set 转 Array</span></span><br><span class="line"><span class="keyword">let</span> myArray = [...mySet];</span><br><span class="line"><span class="title class_">String</span></span><br><span class="line"><span class="comment">// String 转 Set</span></span><br><span class="line"><span class="keyword">let</span> mySet = <span class="keyword">new</span> <span class="title class_">Set</span>(<span class="string">&#x27;hello&#x27;</span>);  <span class="comment">// Set(4) &#123;&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;o&quot;&#125;</span></span><br><span class="line"><span class="comment">// 注：Set 中 toString 方法是不能将 Set 转换成 String</span></span><br></pre></td></tr></table></figure><h3 id="Set-对象作用"><a href="#Set-对象作用" class="headerlink" title="Set 对象作用"></a>Set 对象作用</h3><p><strong>数组去重</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mySet = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>]);</span><br><span class="line">[...mySet]; <span class="comment">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><p><strong>并集</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]);</span><br><span class="line"><span class="keyword">let</span> union = <span class="keyword">new</span> <span class="title class_">Set</span>([...a, ...b]); <span class="comment">// &#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure><p><strong>交集</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]);</span><br><span class="line"><span class="keyword">let</span> intersect = <span class="keyword">new</span> <span class="title class_">Set</span>([...a].<span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> b.<span class="title function_">has</span>(x))); <span class="comment">// &#123;2, 3&#125;</span></span><br></pre></td></tr></table></figure><p><strong>差集</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]);</span><br><span class="line"><span class="keyword">let</span> difference = <span class="keyword">new</span> <span class="title class_">Set</span>([...a].<span class="title function_">filter</span>(<span class="function"><span class="params">x</span> =&gt;</span> !b.<span class="title function_">has</span>(x))); <span class="comment">// &#123;1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><p>单位时间内，频繁触发事件，只执行最后一次</p><ul><li>防抖是指在一段连续操作结束后，等待一定时间，如果在这段时间内没有再次触发该操作，则执行该操作。</li><li>典型应用包括输入框输入事件，只有在用户输入完成后的一段时间内才执行搜索请求，避免频繁请求接口。</li><li>适合处理一些“只需最后一次”的情况。</li></ul><h3 id="debounce"><a href="#debounce" class="headerlink" title="_.debounce"></a>_.debounce</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建一个需要进行防抖处理的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">// 在这里放置需要进行防抖处理的代码</span></span><br><span class="line">    div.<span class="property">innerHTML</span>=i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用_.debounce创建防抖实例</span></span><br><span class="line"><span class="comment">// 第二个参数是等待时间（以毫秒为单位）</span></span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,_.<span class="title function_">debounce</span>(add,<span class="number">300</span>))</span><br><span class="line"><span class="comment">// 现在，当鼠标移入div时触发add函数，它将在最后一次调用后的300毫秒内不再执行add函数。</span></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line"><span class="comment">// 在300毫秒内再次触发div将不会立即触发add函数，而是重新计时。</span></span><br></pre></td></tr></table></figure><h3 id="手写防抖"><a href="#手写防抖" class="headerlink" title="手写防抖"></a>手写防抖</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建一个需要进行防抖处理的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">// 在这里放置需要进行防抖处理的代码</span></span><br><span class="line">    div.<span class="property">innerHTML</span>=i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 防抖函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn,t</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(timer)<span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="title function_">fn</span>()</span><br><span class="line">        &#125;,t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,<span class="title function_">debounce</span>(add,<span class="number">300</span>))</span><br></pre></td></tr></table></figure><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><p>单位时间内，频繁触发事件，只执行一次</p><ul><li>节流是指在一定时间间隔内只执行一次操作。</li><li>比如页面滚动事件，我们可能每隔一定时间处理一次滚动事件，而不是每次滚动都去执行操作。</li><li>适合限制操作的执行频率，特别是在高频触发的场景下。</li></ul><h3 id="throttle"><a href="#throttle" class="headerlink" title="_.throttle"></a>_.throttle</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建一个需要进行节流处理的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">// 在这里放置需要进行节流处理的代码</span></span><br><span class="line">    div.<span class="property">innerHTML</span>=i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用_.throttle创建节流实例</span></span><br><span class="line"><span class="comment">// 第二个参数是等待时间（以毫秒为单位）</span></span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,_.<span class="title function_">throttle</span>(add,<span class="number">300</span>))</span><br><span class="line"><span class="comment">// 现在，当鼠标移入div时触发add函数，它将在执行一次，调用后的300毫秒内再次触发则取消。</span></span><br><span class="line"><span class="comment">// 例如：</span></span><br><span class="line"><span class="comment">// 在300毫秒内再次触发div将取消立即触发add函数。</span></span><br></pre></td></tr></table></figure><h3 id="手写节流"><a href="#手写节流" class="headerlink" title="手写节流"></a>手写节流</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> div=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建一个需要进行节流处理的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 在这里放置需要进行节流处理的代码</span></span><br><span class="line">    div.<span class="property">innerHTML</span>=i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 节流函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn,t</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer =<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="literal">null</span>)&#123;</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="title function_">fn</span>();</span><br><span class="line">                timer=<span class="literal">null</span>; <span class="comment">// 再运行setTimeout中不允许在里面用clearTimeout清楚定时器，直接赋值空下次判断就没有</span></span><br><span class="line">            &#125;,t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,_.<span class="title function_">throttle</span>(add,<span class="number">300</span>))</span><br></pre></td></tr></table></figure><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>;</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;方法&#x27;</span>,<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>);<span class="comment">// 返回的市JSON字符型</span></span><br><span class="line">    <span class="keyword">const</span> data=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>)<span class="comment">// 转换为js中的对象</span></span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>;</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;方法&#x27;</span>,<span class="string">&#x27;http://xxxx.com/api/city?参数名1=值&amp;参数名2=值...&#x27;</span>);<span class="comment">// 要查询的话，参数要自己拼接,两个以上的参数要加&#x27;&amp;&#x27;拼接符</span></span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>);</span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br></pre></td></tr></table></figure><h4 id="URLSearchParams"><a href="#URLSearchParams" class="headerlink" title="URLSearchParams"></a>URLSearchParams</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> paramsObj=<span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">    参数名<span class="number">1</span>:值<span class="number">1</span>,</span><br><span class="line">    参数名<span class="number">2</span>:值<span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> queryString=paramsObj.<span class="title function_">toString</span>() <span class="comment">//转成字符串型</span></span><br></pre></td></tr></table></figure><h3 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>);</span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/json&#x27;</span>) <span class="comment">// 设置请求头，类型 JSON</span></span><br><span class="line"><span class="keyword">const</span> userObj=&#123;</span><br><span class="line">    <span class="attr">username</span>:<span class="string">&#x27;LvemiX&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;123456&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> json=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(userObj) <span class="comment">//将js对象转换JSON字符</span></span><br><span class="line">xhr.<span class="title function_">send</span>(json) <span class="comment">//发送并传JSON数据</span></span><br></pre></td></tr></table></figure><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>用于表示一个异步操作的最终完成（或失败）及其结果值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p =<span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 执行异步任务，并传递结果</span></span><br><span class="line">    <span class="comment">// 成功调用:resolve触发then</span></span><br><span class="line">    <span class="comment">//失败调用:reject触发catch</span></span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 失败</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS预处理器(Sass、Scss)</title>
      <link href="/posts/a719fe6fe7a1/"/>
      <url>/posts/a719fe6fe7a1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="sass-导入-import"><a href="#sass-导入-import" class="headerlink" title="sass 导入@import"></a>sass 导入@import</h2><h3 id="import"><a href="#import" class="headerlink" title="@import"></a>@import</h3><p>​Sass 拓展了 @import 的功能，允许其导入 SCSS 或 Sass 文件。被导入的文件将合并编译到同一个 CSS 文件中，另外，被导入的文件中所包含的变量或者混合指令 (mixin) 都可以在导入的文件中使用。</p><p>例如：</p><p><code>public.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$font-base-color</span>:<span class="number">#333</span>;</span><br></pre></td></tr></table></figure><p><code>index.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;public&quot;</span>;</span><br><span class="line"><span class="variable">$color</span>:<span class="number">#666</span>;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="variable">$color</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font-base-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123; <span class="attribute">border-color</span>: <span class="number">#666</span>; <span class="attribute">color</span>: <span class="number">#333</span>; &#125;</span><br></pre></td></tr></table></figure><p>但是如下的几种方式，都将作为普通的 CSS 语句，不会导入任何 Sass 文件</p><ul><li>文件拓展名是 .css；</li><li>文件名以 http:&#x2F;&#x2F; 开头；</li><li>文件名是 url()；</li><li>@import 包含 media queries。</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;public.css&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> url(public);</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;http://xxx.com/xxx&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="局部文件-Partials"><a href="#局部文件-Partials" class="headerlink" title="局部文件(Partials)"></a>局部文件(Partials)</h3><p>​Sass源文件中可以通过@import指令导入其他Sass源文件，被导入的文件就是****局部文件****，局部文件让Sass模块化编写更加容易。</p><p>​如果一个目录正在被Sass程序监测，目录下的所有scss&#x2F;sass源文件都会被编译，但通常不希望局部文件被编译，因为局部文件是用来被导入到其他文件的。如果不想局部文件被编译，文件名可以以下划线 （_）开头</p><p><code>_theme.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$border-color</span>:<span class="number">#999</span>;</span><br><span class="line"><span class="variable">$background-color</span>:<span class="number">#f2f2f2</span>;</span><br></pre></td></tr></table></figure><p><code>index.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;public&quot;</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;theme&quot;</span>;</span><br><span class="line"><span class="variable">$color</span>:<span class="number">#666</span>;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="variable">$border-color</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$font-base-color</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$background-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123; <span class="attribute">border-color</span>: <span class="number">#999</span>; <span class="attribute">color</span>: <span class="number">#333</span>; <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>; &#125;</span><br></pre></td></tr></table></figure><p>​可以看到，@import 引入的<code>theme.scss</code>，可以没有下划线(__)，这是允许的，这也就意味着，同一个目录下不能同时出现两个相关名的sass文件（一个不带*，一个带_），添加下划线的文件将会被忽略。</p><h3 id="嵌套-import"><a href="#嵌套-import" class="headerlink" title="嵌套 @import"></a>嵌套 @import</h3><p>​大多数情况下，一般在文件的最外层（不在嵌套规则内）使用 @import，其实，也可以将 @import 嵌套进 CSS 样式或者 @media 中，与平时的用法效果相同，只是这样导入的样式只能出现在嵌套的层中。</p><p><code>base.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-color</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@import</span> <span class="string">&quot;base&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后生成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-color</span> &#123; <span class="attribute">color</span>: <span class="number">#F00</span>; &#125;</span><br></pre></td></tr></table></figure><div class="note info flat"><p>被导入的文件不能是局部文件方式（在前面不能加_）</p></div> <h2 id="sass-混合指令-Mixin-Directives"><a href="#sass-混合指令-Mixin-Directives" class="headerlink" title="sass 混合指令 (Mixin Directives)"></a>sass 混合指令 (Mixin Directives)</h2><p>​混合指令（Mixin）用于定义可重复使用的样式，避免了使用无语意的 class，比如 .float-left。混合指令可以包含所有的 CSS 规则，绝大部分 Sass 规则，甚至通过参数功能引入变量，输出多样化的样式。</p><p>​mixin是可以重用的一组CSS声明。mixin有助于减少重复代码，只需声明一次，就可在文件中引用。 </p><p>​可以看出，mixin类似变量，不同的是变量存储值，mixin存储一组css声明。mixin可以传入参数。</p><h3 id="定义与使用混合指令-mixin"><a href="#定义与使用混合指令-mixin" class="headerlink" title="定义与使用混合指令 @mixin"></a>定义与使用混合指令 @mixin</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> mixin-name([param1,[param2...]]) &#123;</span><br><span class="line"><span class="comment">/* css 声明 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><h3 id="标准形式"><a href="#标准形式" class="headerlink" title="标准形式"></a>标准形式</h3></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义页面一个区块基本的样式</span></span><br><span class="line"><span class="keyword">@mixin</span> block &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">96%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">2%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#f6f6f6</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用混入</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="selector-class">.block</span>&#123;</span><br><span class="line">        <span class="keyword">@include</span> block;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成结果</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.block</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">96%</span>;</span><br><span class="line">   <span class="attribute">margin-left</span>: <span class="number">2%</span>;</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f6f6f6</span> solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="嵌入选择器"><a href="#嵌入选择器" class="headerlink" title="嵌入选择器"></a>嵌入选择器</h3></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义警告字体样式,下划线（_）与横线（-）是一样的</span></span><br><span class="line"><span class="keyword">@mixin</span> warning-text &#123;</span><br><span class="line">    <span class="selector-class">.warn-text</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">253</span>, <span class="number">123</span>);</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">180%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用混入</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> warning-text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译结果</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.warn-text</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fffd7b</span>;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">180%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><h3 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h3></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义flex布局元素纵轴的排列方式</span></span><br><span class="line"><span class="keyword">@mixin</span> flex-align(<span class="variable">$aitem</span>)&#123;</span><br><span class="line">    -webkit-box-align:<span class="variable">$aitem</span>;</span><br><span class="line">    -webkit-<span class="attribute">align-items</span>:<span class="variable">$aitem</span>;</span><br><span class="line">    -ms-<span class="attribute">flex</span>-align:<span class="variable">$aitem</span>;</span><br><span class="line">    <span class="attribute">align-items</span>:<span class="variable">$aitem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只有一个参数，直接传递参数</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> flex-align(center);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 给指定参数指定值</span></span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> flex-align(<span class="variable">$aitem</span>:center);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="使用变量（多参数）"><a href="#使用变量（多参数）" class="headerlink" title="使用变量（多参数）"></a>使用变量（多参数）</h3></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义块元素内边距</span></span><br><span class="line"><span class="keyword">@mixin</span> block-padding(<span class="variable">$top</span>,<span class="variable">$right</span>,<span class="variable">$bottom</span>,<span class="variable">$left</span>)&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="variable">$top</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="variable">$right</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="variable">$bottom</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="variable">$left</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用一</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按照参数顺序赋值</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> block-padding(<span class="number">10px</span>,<span class="number">20px</span>,<span class="number">30px</span>,<span class="number">40px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用二</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可指定参数赋值</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> block-padding(<span class="variable">$left</span>:<span class="number">20px</span>, <span class="variable">$top</span>:<span class="number">10px</span>, <span class="variable">$bottom</span>: <span class="number">10px</span>, <span class="variable">$right</span>:<span class="number">30px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只想设置两个边：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可指定参数赋值</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> block-padding(<span class="variable">$left</span>:<span class="number">10px</span>, <span class="variable">$top</span>:<span class="number">10px</span>, <span class="variable">$bottom</span>:<span class="number">0</span>, <span class="variable">$right</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="指定默认值"><a href="#指定默认值" class="headerlink" title="指定默认值"></a>指定默认值</h3></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义块元素内边距，参数指定默认值</span></span><br><span class="line"><span class="keyword">@mixin</span> block-padding(<span class="variable">$top</span>:<span class="number">0</span>,<span class="variable">$right</span>:<span class="number">0</span>,<span class="variable">$bottom</span>:<span class="number">0</span>,<span class="variable">$left</span>:<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="variable">$top</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="variable">$right</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="variable">$bottom</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="variable">$left</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>灵活使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可指定参数赋值</span></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="comment">// 不带参数</span></span><br><span class="line">    <span class="comment">//@include block-padding;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//按顺序指定参数值</span></span><br><span class="line">    <span class="comment">//@include block-padding(10px,20px);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//给指定参数指定值</span></span><br><span class="line">    <span class="keyword">@include</span> block-padding(<span class="variable">$left</span>:<span class="number">10px</span>,<span class="variable">$top</span>:<span class="number">20px</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3></li></ol><p>参数不固定的情况</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">**</span><br><span class="line">    *定义线性渐变</span><br><span class="line">    *<span class="keyword">@param</span> <span class="variable">$direction</span>  方向</span><br><span class="line">    *<span class="keyword">@param</span> <span class="variable">$gradients</span>  颜色过度的值列表</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">@mixin</span> linear-gradient(<span class="variable">$direction</span>, <span class="variable">$gradients</span>...) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">nth</span>(<span class="variable">$gradients</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="variable">$direction</span>, <span class="variable">$gradients</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.table-data</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> linear-gradient(to right,<span class="number">#F00</span>, orange, yellow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sass-extend（继承）"><a href="#sass-extend（继承）" class="headerlink" title="sass @extend（继承）"></a>sass @extend（继承）</h2><h3 id="普通CSS的实现"><a href="#普通CSS的实现" class="headerlink" title="普通CSS的实现"></a>普通CSS的实现</h3><p>接下来以警告框为例进行讲，解4种类型</p><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>info</td><td>信息！请注意这个信息。</td></tr><tr><td>success</td><td>成功！很好地完成了提交。</td></tr><tr><td>warning</td><td>警告！请不要提交。</td></tr><tr><td>danger</td><td>错误！请进行一些更改。</td></tr></tbody></table><p>所有警告框的基本样式（风格、字体大小、内边距、边框等…） ，因为我们通常会定义一个通用alert样式，类似于这样的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后定义不同警告框单独风格：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert-info</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#31708f</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#d9edf7</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#bce8f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-success</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3c763d</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#dff0d8</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#d6e9c6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-warning</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8a6d3b</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fcf8e3</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#faebcc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a94442</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2dede</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后这样使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-info&quot;</span>&gt;</span></span><br><span class="line">    信息！请注意这个信息。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-success&quot;</span>&gt;</span></span><br><span class="line">    成功！很好地完成了提交。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-warning&quot;</span>&gt;</span></span><br><span class="line">    警告！请不要提交。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-danger&quot;</span>&gt;</span></span><br><span class="line">    错误！请进行一些更改。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用继承-extend进行改进"><a href="#使用继承-extend进行改进" class="headerlink" title="使用继承@extend进行改进"></a>使用继承@extend进行改进</h3><p>基本样式我们没有变，主要是各个警告框单独的样式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert-info</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#31708f</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#d9edf7</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#bce8f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-success</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3c763d</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#dff0d8</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#d6e9c6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-warning</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8a6d3b</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fcf8e3</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#faebcc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a94442</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2dede</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样编译后：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert</span>, <span class="selector-class">.alert-info</span>, <span class="selector-class">.alert-success</span>, <span class="selector-class">.alert-warning</span>, <span class="selector-class">.alert-danger</span> &#123; <span class="attribute">padding</span>: <span class="number">15px</span>; <span class="attribute">margin-bottom</span>: <span class="number">20px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid transparent; <span class="attribute">border-radius</span>: <span class="number">4px</span>; <span class="attribute">font-size</span>: <span class="number">12px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-info</span> &#123; <span class="attribute">color</span>: <span class="number">#31708f</span>; <span class="attribute">background-color</span>: <span class="number">#d9edf7</span>; <span class="attribute">border-color</span>: <span class="number">#bce8f1</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-success</span> &#123; <span class="attribute">color</span>: <span class="number">#3c763d</span>; <span class="attribute">background-color</span>: <span class="number">#dff0d8</span>; <span class="attribute">border-color</span>: <span class="number">#d6e9c6</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; <span class="attribute">color</span>: <span class="number">#8a6d3b</span>; <span class="attribute">background-color</span>: <span class="number">#fcf8e3</span>; <span class="attribute">border-color</span>: <span class="number">#faebcc</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span> &#123; <span class="attribute">color</span>: <span class="number">#a94442</span>; <span class="attribute">background-color</span>: <span class="number">#f2dede</span>; <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>; &#125;</span><br></pre></td></tr></table></figure><p>使用时就不须要再写基本类了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert-info&quot;</span>&gt;</span></span><br><span class="line">    信息！请注意这个信息。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert-success&quot;</span>&gt;</span></span><br><span class="line">    成功！很好地完成了提交。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert-warning&quot;</span>&gt;</span></span><br><span class="line">    警告！请不要提交。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert-danger&quot;</span>&gt;</span></span><br><span class="line">    错误！请进行一些更改。</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用多个-extend"><a href="#使用多个-extend" class="headerlink" title="使用多个@extend"></a>使用多个@extend</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.important</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="keyword">@extend</span> .important;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a94442</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2dede</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="extend多层继承"><a href="#extend多层继承" class="headerlink" title="@extend多层继承"></a>@extend多层继承</h3><p>上面的方式还可以写成</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.important</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .important;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a94442</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2dede</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h3><p>你可能发现被继承的css父类并没有被实际应用，也就是说html代码中没有使用该类，它的唯一目的就是扩展其他选择器。 对于该类，可能不希望被编译输出到最终的css文件中，它只会增加CSS文件的大小，永远不会被使用。 这就是占位符选择器的作用。 占位符选择器类似于类选择器，但是，它们不是以句点(.)开头，而是以百分号(%)开头。 当在Sass文件中使用占位符选择器时，它可以用于扩展其他选择器，但不会被编译成最终的CSS。</p><p>之前的代码进行改写：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">%alert&#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.alert-info</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> %alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#31708f</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#d9edf7</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#bce8f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-success</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> %alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3c763d</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#dff0d8</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#d6e9c6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-warning</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> %alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8a6d3b</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fcf8e3</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#faebcc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> %alert;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a94442</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2dede</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert-info</span>, <span class="selector-class">.alert-success</span>, <span class="selector-class">.alert-warning</span>, <span class="selector-class">.alert-danger</span> &#123; <span class="attribute">padding</span>: <span class="number">15px</span>; <span class="attribute">margin-bottom</span>: <span class="number">20px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid transparent; <span class="attribute">border-radius</span>: <span class="number">4px</span>; <span class="attribute">font-size</span>: <span class="number">12px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-info</span> &#123; <span class="attribute">color</span>: <span class="number">#31708f</span>; <span class="attribute">background-color</span>: <span class="number">#d9edf7</span>; <span class="attribute">border-color</span>: <span class="number">#bce8f1</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-success</span> &#123; <span class="attribute">color</span>: <span class="number">#3c763d</span>; <span class="attribute">background-color</span>: <span class="number">#dff0d8</span>; <span class="attribute">border-color</span>: <span class="number">#d6e9c6</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-warning</span> &#123; <span class="attribute">color</span>: <span class="number">#8a6d3b</span>; <span class="attribute">background-color</span>: <span class="number">#fcf8e3</span>; <span class="attribute">border-color</span>: <span class="number">#faebcc</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.alert-danger</span> &#123; <span class="attribute">color</span>: <span class="number">#a94442</span>; <span class="attribute">background-color</span>: <span class="number">#f2dede</span>; <span class="attribute">border-color</span>: <span class="number">#ebccd1</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-运算-Operations-符的基本使用"><a href="#SASS-运算-Operations-符的基本使用" class="headerlink" title="SASS 运算 (Operations)符的基本使用"></a>SASS 运算 (Operations)符的基本使用</h2><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符就是把一个值赋值给一个变量，通过冒号（：）的方式进行承接（很多编程语言是&#x3D;），例如：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$font-size</span>:<span class="number">16px</span>;</span><br></pre></td></tr></table></figure><p>也可以把一个变量赋值给另一个变量</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$font-size</span>:<span class="number">16px</span>;</span><br><span class="line"><span class="variable">$h3</span>:<span class="variable">$font-size</span>;</span><br></pre></td></tr></table></figure><p>赋值的变量必须先有值</p><h3 id="等号操作符"><a href="#等号操作符" class="headerlink" title="等号操作符"></a>等号操作符</h3><p>等号操作符用于比较两个表达式的值是否相等，所有数据类型都支持等号运算符:</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td></tr><tr><td>!&#x3D;</td><td>不等于</td></tr></tbody></table><ol><li>数字比较：</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$theme</span>:<span class="number">1</span>;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="keyword">@if</span> <span class="variable">$theme</span>==<span class="number">1</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>字符串比较：</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$theme</span>:<span class="string">&quot;blue&quot;</span>;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="keyword">@if</span> <span class="variable">$theme</span> !=<span class="string">&quot;blue&quot;</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有数据类型均支持相等运算 <code>==</code> 或 <code>!=</code>，此外，每种数据类型也有其各自支持的运算方式。</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>比较运算符主要用于两个数值（整数与小数）间的比较，操作符有</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&lt;   （lt）</td><td>小于</td></tr><tr><td>&gt;   （gt）</td><td>大于</td></tr><tr><td>&lt;&#x3D;  （lte）</td><td>小于等于</td></tr><tr><td>&gt;&#x3D;  （gte）</td><td>大于等于</td></tr></tbody></table><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$theme</span>:<span class="number">3</span>;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="keyword">@if</span> <span class="variable">$theme</span> &gt;= <span class="number">5</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">background-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其它语言还有字符串的比较，但这里是不行的</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>逻辑运算符通常用于连接多个表达式，用下真判断条件是否成立，它们有and、or、not</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>and</td><td>逻辑与</td></tr><tr><td>or</td><td>逻辑或</td></tr><tr><td>not</td><td>逻辑非</td></tr></tbody></table><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$width</span>:<span class="number">100</span>;</span><br><span class="line"><span class="variable">$height</span>:<span class="number">200</span>;</span><br><span class="line"><span class="variable">$last</span>:false;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">   <span class="keyword">@if</span> <span class="variable">$width</span>&gt;<span class="number">50</span> <span class="keyword">and</span> <span class="variable">$height</span>&lt;<span class="number">300</span> &#123;</span><br><span class="line">       <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@if</span> <span class="keyword">not</span> <span class="variable">$last</span> &#123;</span><br><span class="line">       <span class="attribute">border-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">border-color</span>: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数字操作符"><a href="#数字操作符" class="headerlink" title="数字操作符"></a>数字操作符</h3><p>数字操作符通常是对数字（整数或小数）进行计算，但是某些操作符（&#x2F;或+）会有特殊情况，后面分开详细讲解</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加</td></tr><tr><td>-</td><td>减</td></tr><tr><td>*</td><td>乘</td></tr><tr><td>&#x2F;</td><td>除</td></tr><tr><td>%</td><td>取模</td></tr></tbody></table><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  +、-、*、/、%</span></span><br><span class="line"><span class="comment">  线数字、百分号、css部分单位（px、pt、in...）</span></span><br><span class="line"><span class="comment">  +</span></span><br><span class="line"><span class="comment">  线数字与百分号或单位运算时会自动转化成相应的百分比与单位值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="comment">/* ==================+ 运算===================== */</span></span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50</span> + <span class="number">20</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50</span> + <span class="number">20%</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50%</span> + <span class="number">20%</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10px</span> + <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10pt</span> + <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10pt</span> + <span class="number">20</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10px</span> + <span class="number">10</span>;</span><br><span class="line">   <span class="comment">/* ==================- 运算===================== */</span></span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50</span> - <span class="number">30</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">10</span> - <span class="number">30%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">60%</span> - <span class="number">30%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50px</span> - <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50pt</span> - <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50pt</span> - <span class="number">40</span>;</span><br><span class="line">   <span class="comment">/* ==================* 运算===================== */</span></span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50</span> * <span class="number">30</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">10</span> * <span class="number">30%</span>;</span><br><span class="line">   <span class="comment">/* height: 60% * 30%; 出现了两个百分号*/</span></span><br><span class="line">   <span class="comment">/* height: 50px * 20px; 出现了两个单位*/</span></span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50</span> * <span class="number">2px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">50pt</span> * <span class="number">4</span>;</span><br><span class="line">   <span class="comment">/* ==================/运算 (除完后最多只能保留一种单位)===================== */</span></span><br><span class="line">   <span class="variable">$width</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10</span> / <span class="number">5</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10px</span> / <span class="number">5px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10px</span> / <span class="number">10</span> * <span class="number">2</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">20px</span> / <span class="number">2px</span> * <span class="number">5%</span>;</span><br><span class="line">   <span class="attribute">width</span>: (<span class="variable">$width</span>/<span class="number">2</span>); <span class="comment">// 使用变量与括号</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">round</span>(<span class="number">10</span>)/<span class="number">2</span>; <span class="comment">// 使用了函数</span></span><br><span class="line">   <span class="attribute">height</span>: (<span class="number">500px</span>/<span class="number">2</span>); <span class="comment">// 使用了括号</span></span><br><span class="line">   <span class="comment">/* ==================% 运算===================== */</span></span><br><span class="line">   <span class="attribute">width</span>: <span class="number">10</span> % <span class="number">3</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50</span> % <span class="number">3px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span> % <span class="number">4px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span> % <span class="number">7</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50%</span> % <span class="number">7</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50%</span> % <span class="number">9%</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span> % <span class="number">10pt</span>; <span class="comment">// 50px % 13.33333px  </span></span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span> % <span class="number">13.33333px</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">50px</span> + <span class="number">10pt</span>;</span><br><span class="line">   <span class="comment">/* width: 50px % 5%; 单位不统一*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F; 在 CSS 中通常起到分隔数字的用途，SassScript 作为 CSS 语言的拓展当然也支持这个功能，同时也赋予了 &#x2F; 除法运算的功能。也就是说，如果 &#x2F; 在 SassScript 中把两个数字分隔，编译后的 CSS 文件中也是同样的作用。</p><p><strong>以下三种情况 &#x2F; 将被视为除法运算符号：</strong></p><ul><li>如果值或值的一部分，是变量或者函数的返回值</li><li>如果值被圆括号包裹</li><li>如果值是算数表达式的一部分</li></ul><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$width</span>: <span class="number">1000px</span>;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">   <span class="attribute">font</span>: <span class="number">16px</span>/<span class="number">30px</span> Arial, Helvetica, sans-serif; <span class="comment">// 不运算</span></span><br><span class="line">   <span class="attribute">width</span>: (<span class="variable">$width</span>/<span class="number">2</span>); <span class="comment">// 使用变量与括号</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">round</span>(<span class="number">10</span>)/<span class="number">2</span>; <span class="comment">// 使用了函数</span></span><br><span class="line">   <span class="attribute">height</span>: (<span class="number">500px</span>/<span class="number">2</span>); <span class="comment">// 使用了括号</span></span><br><span class="line">   <span class="attribute">margin-left</span>: <span class="number">5px</span> + <span class="number">8px</span>/<span class="number">2px</span>; <span class="comment">// 使用了+表达式</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要使用变量，同时又要确保 &#x2F; 不做除法运算而是完整地编译到 CSS 文件中，只需要用 #{} 插值语句将变量包裹。</p><h3 id="字符串运算"><a href="#字符串运算" class="headerlink" title="字符串运算"></a>字符串运算</h3><p><code>+</code> 可用于连接字符串</p><p><strong>注意</strong>：如果有引号字符串（位于 + 左侧）连接无引号字符串，运算结果是有引号的，相反，无引号字符串（位于 + 左侧）连接有引号字符串，运算结果则没有引号。</p><p>有问题？？？？ 如果有一个值是函数返回的，情况可能不一样</p><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">&quot;Foo &quot;</span> + Bar;</span><br><span class="line">   <span class="attribute">font-family</span>: sans- + <span class="string">&quot;serif&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三元条件函数if使用"><a href="#三元条件函数if使用" class="headerlink" title="三元条件函数if使用"></a>三元条件函数if使用</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$i</span>:<span class="number">0</span>;</span><br><span class="line"><span class="keyword">@if</span>(<span class="variable">$i</span>==<span class="number">0</span>,true,false);</span><br></pre></td></tr></table></figure><h2 id="SASS-插值语句-的使用"><a href="#SASS-插值语句-的使用" class="headerlink" title="SASS 插值语句 #{ }的使用"></a>SASS 插值语句 #{ }的使用</h2><h3 id="使用插值语法"><a href="#使用插值语法" class="headerlink" title="使用插值语法"></a>使用插值语法</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="variable">$font-size</span>: <span class="number">12px</span>;</span><br><span class="line">   <span class="variable">$line-height</span>: <span class="number">30px</span>;</span><br><span class="line">   <span class="attribute">font</span>: #&#123;<span class="variable">$font-size</span>&#125;/#&#123;<span class="variable">$line-height</span>&#125; Helvetica,</span><br><span class="line">   sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 <code>#&#123;&#125;</code> 插值语句可以在选择器、属性名、注释中使用变量：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$class-name</span>: danger;</span><br><span class="line"><span class="variable">$attr</span>: color;</span><br><span class="line"><span class="variable">$author</span>:<span class="string">&#x27;老姚&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  * 这是文件的说明部分</span></span><br><span class="line"><span class="comment">  @author: #&#123;$author&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>.#&#123;<span class="variable">$class-name</span>&#125; &#123;</span><br><span class="line">   <span class="attribute">border</span>-#&#123;<span class="variable">$attr</span>&#125;: <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  * 这是文件的说明部分</span></span><br><span class="line"><span class="comment">  @author: 老姚</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.danger</span> &#123;</span><br><span class="line"> <span class="attribute">border-color</span>: <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插值语法说明"><a href="#插值语法说明" class="headerlink" title="插值语法说明"></a>插值语法说明</h3><p><code>插值</code>一般就指插入值在某个位置，该功能不是sass才有的，其实很多语言都有，例如前段的js，如果我们想输出一个带变量的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">           age = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我叫&#x27;</span> + name + <span class="string">&#x27;，今年&#x27;</span> + age + <span class="string">&#x27;岁！&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果有很多变量要输出，或这个串很长的情况是非常麻烦的，所以我们可以用模板字符串输出，像这样</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">           age = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`我叫<span class="subst">$&#123;name&#125;</span>，今年<span class="subst">$&#123;age&#125;</span>岁！`</span>);</span><br></pre></td></tr></table></figure><p>而sass中的插值用的是#{}把变量包裹起来的，变量可以是几乎任意类型的值；</p><h3 id="什么时候会用到插值语法？"><a href="#什么时候会用到插值语法？" class="headerlink" title="什么时候会用到插值语法？"></a>什么时候会用到插值语法？</h3><p>注释、选择器、属性名等有变量输出时</p><p>上面的安全便是该种情况</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$class-name</span>: danger;</span><br><span class="line"><span class="variable">$attr</span>: color;</span><br><span class="line"><span class="variable">$author</span>:<span class="string">&#x27;老姚&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  * 这是文件的说明部分</span></span><br><span class="line"><span class="comment">  @author: #&#123;$author&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>.#&#123;<span class="variable">$class-name</span>&#125; &#123;</span><br><span class="line">   <span class="attribute">border</span>-#&#123;<span class="variable">$attr</span>&#125;: <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用于调式"><a href="#用于调式" class="headerlink" title="用于调式"></a>用于调式</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$themes</span>:( <span class="string">&#x27;light&#x27;</span>:<span class="number">#f00</span>, <span class="string">&#x27;dark&#x27;</span>:<span class="number">#000</span>);</span><br><span class="line"><span class="keyword">@function</span> <span class="attribute">color</span>(<span class="variable">$key</span>) &#123;</span><br><span class="line">   <span class="keyword">@if</span> <span class="keyword">not</span> map-has-key(<span class="variable">$themes</span>, <span class="variable">$key</span>) &#123;</span><br><span class="line">       <span class="keyword">@warn</span> <span class="string">&quot; $themes有key里面不包含 `#&#123;$key&#125;`.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@return</span> map-get(<span class="variable">$themes</span>, <span class="variable">$key</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">color</span>(<span class="string">&#x27;light&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多使用场景欢迎补充</p><h4 id="这些情况不能使用插值语法，不可插值用于变量的一部分"><a href="#这些情况不能使用插值语法，不可插值用于变量的一部分" class="headerlink" title="这些情况不能使用插值语法，不可插值用于变量的一部分"></a>这些情况不能使用插值语法，不可插值用于变量的一部分</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$font-size-big</span>: <span class="number">40px</span>;</span><br><span class="line"><span class="variable">$font-size-base</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="variable">$font-size-small</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="variable">$size</span>:big;</span><br><span class="line"><span class="selector-class">.block</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="variable">$font-size</span>-#&#123;<span class="variable">$size</span>&#125;; <span class="comment">// Error: Undefined variable.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不能在混入里使用"><a href="#不能在混入里使用" class="headerlink" title="不能在混入里使用"></a>不能在混入里使用</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> base &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">background</span>: <span class="number">#F00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>: <span class="string">&quot;base&quot;</span>;</span><br><span class="line"><span class="selector-class">.navigation</span> &#123;</span><br><span class="line">   <span class="keyword">@include</span> #&#123;<span class="variable">$flag</span>&#125;; <span class="comment">// Error: Expected identifier.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="import后不能使用"><a href="#import后不能使用" class="headerlink" title="@import后不能使用"></a>@import后不能使用</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$var</span>:<span class="string">&#x27;common&#x27;</span>;</span><br><span class="line"><span class="keyword">@import</span> #&#123;<span class="selector-tag">var</span>&#125;;</span><br><span class="line"><span class="selector-class">.block</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="variable">$font-size</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Sass预处理器-常见函数的基本使用"><a href="#Sass预处理器-常见函数的基本使用" class="headerlink" title="Sass预处理器 常见函数的基本使用"></a>Sass预处理器 常见函数的基本使用</h2><h3 id="Color-颜色函数"><a href="#Color-颜色函数" class="headerlink" title="Color(颜色函数)"></a>Color(颜色函数)</h3><p>​sass包含很多操作颜色的函数。例如：lighten() 与 darken()函数可用于调亮或调暗颜色，opacify()函数使颜色透明度减少，transparent()函数使颜色透明度增加，mix()函数可用来混合两种颜色。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p0</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#5c7a29</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">        让颜色变亮</span></span><br><span class="line"><span class="comment">        lighten($color, $amount)</span></span><br><span class="line"><span class="comment">        $amount 的取值在0% - 100% 之间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">lighten</span>(<span class="number">#5c7a29</span>, <span class="number">30%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">   <span class="comment">// 让颜色变暗  通常使用color.scale()代替该方案</span></span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">darken</span>(<span class="number">#5c7a29</span>, <span class="number">15%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p3</span> &#123;</span><br><span class="line">   <span class="comment">// 降低颜色透明度  通常使用color.scale()代替该方案</span></span><br><span class="line">   <span class="comment">// background-color: opacify(#5c7a29,0.5);</span></span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">opacify</span>(<span class="built_in">rgba</span>(<span class="number">#5c7a29</span>, <span class="number">0.1</span>), <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/color">https://sass-lang.com/documentation/modules/color</a></p><h3 id="String（字符串函数）"><a href="#String（字符串函数）" class="headerlink" title="String（字符串函数）"></a>String（字符串函数）</h3><p>​Sass有许多处理字符串的函数，比如向字符串添加引号的quote()、获取字符串长度的string-length()和将内容插入字符串给定位置的string-insert()。</p><p>例</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">       <span class="attribute">content</span>: <span class="built_in">quote</span>(这是里面的内容);</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">unquote</span>(<span class="variable">$string</span>: <span class="string">&quot;#F00&quot;</span>);</span><br><span class="line">   <span class="attribute">z-index</span>:<span class="built_in">str-length</span>(<span class="string">&quot;sass学习&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/string">https://sass-lang.com/documentation/modules/string</a> </p><h3 id="Math-数值函数"><a href="#Math-数值函数" class="headerlink" title="Math(数值函数)"></a>Math(数值函数)</h3><p>​数值函数处理数值计算，例如：percentage()将无单元的数值转换为百分比，round()将数字四舍五入为最接近的整数，min()和max()获取几个数字中的最小值或最大值，random()返回一个随机数。</p><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">abs</span>(<span class="variable">$number</span>: -<span class="number">15</span>); <span class="comment">// 15</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">ceil</span>(<span class="number">5.8</span>); <span class="comment">//6</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">max</span>(<span class="number">5</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">3</span>); <span class="comment">//8</span></span><br><span class="line">   <span class="attribute">opacity</span>: <span class="built_in">random</span>(); <span class="comment">// 随机 0-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/math">https://sass-lang.com/documentation/modules/math</a></p><h3 id="List函数"><a href="#List函数" class="headerlink" title="List函数"></a>List函数</h3><p>List函数操作List，length()返回列表长度，nth()返回列表中的特定项，join()将两个列表连接在一起，append()在列表末尾添加一个值。</p><p>例如：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">length</span>(<span class="number">12px</span>); <span class="comment">//1</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">length</span>(<span class="number">12px</span> <span class="number">5px</span> <span class="number">8px</span>); <span class="comment">//3</span></span><br><span class="line">   <span class="attribute">z-index</span>: <span class="built_in">index</span>(a b c d, c); <span class="comment">//3</span></span><br><span class="line">   <span class="attribute">padding</span>: <span class="built_in">append</span>(<span class="number">10px</span> <span class="number">20px</span>, <span class="number">30px</span>); <span class="comment">// 10px 20px 30px</span></span><br><span class="line">   <span class="attribute">color</span>: <span class="built_in">nth</span>(<span class="variable">$list</span>: red blue green, <span class="variable">$n</span>: <span class="number">2</span>); <span class="comment">// blue</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/list">https://sass-lang.com/documentation/modules/list</a></p><h3 id="Map函数"><a href="#Map函数" class="headerlink" title="Map函数"></a>Map函数</h3><p>Map函数操作Map，map-get()根据键值获取map中的对应值，map-merge()来将两个map合并成一个新的map，map-values()映射中的所有值。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$font-sizes</span>: (<span class="string">&quot;small&quot;</span>: <span class="number">12px</span>, <span class="string">&quot;normal&quot;</span>: <span class="number">18px</span>, <span class="string">&quot;large&quot;</span>: <span class="number">24px</span>);</span><br><span class="line"><span class="variable">$padding</span>:(top:<span class="number">10px</span>, right:<span class="number">20px</span>, bottom:<span class="number">10px</span>, left:<span class="number">30px</span>);</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="built_in">map-get</span>(<span class="variable">$font-sizes</span>, <span class="string">&quot;normal&quot;</span>); <span class="comment">//18px</span></span><br><span class="line">   <span class="keyword">@if</span> map-has-key(<span class="variable">$padding</span>, <span class="string">&quot;right&quot;</span>) &#123;</span><br><span class="line">       <span class="attribute">padding-right</span>: <span class="built_in">map-get</span>(<span class="variable">$padding</span>, <span class="string">&quot;right&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">       <span class="attribute">content</span>: <span class="built_in">map-keys</span>(<span class="variable">$font-sizes</span>) + <span class="string">&quot; &quot;</span>+ <span class="built_in">map-values</span>(<span class="variable">$padding</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/map">https://sass-lang.com/documentation/modules/map</a> </p><h3 id="selector选择器函数"><a href="#selector选择器函数" class="headerlink" title="selector选择器函数"></a>selector选择器函数</h3><p>​选择符相关函数可对CSS选择进行一些相应的操作，例如：selector-append()可以把一个选择符附加到另一个选择符，selector-unify()将两组选择器合成一个复合选择器。</p><p>例如</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">   <span class="attribute">content</span>: <span class="built_in">selector-append</span>(<span class="string">&quot;.a&quot;</span>, <span class="string">&quot;.b&quot;</span>, <span class="string">&quot;.c&quot;</span>) + <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="attribute">content</span>: <span class="built_in">selector-unify</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;.disabled&quot;</span>) + <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多详细使用：<a href="https://sass-lang.com/documentation/modules/selector">https://sass-lang.com/documentation/modules/selector</a></p><h3 id="自检函数"><a href="#自检函数" class="headerlink" title="自检函数"></a>自检函数</h3><p>​自检相关函数，例如：feature-exists()检查当前Sass版本是否存在某个特性，variable-exists()检查当前作用域中是否存在某个变量，mixin-exists()检查某个mixin是否存在。</p><p>例如：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$color</span>:<span class="number">#F00</span>;</span><br><span class="line"><span class="keyword">@mixin</span> padding(<span class="variable">$left</span>:<span class="number">0</span>, <span class="variable">$top</span>:<span class="number">0</span>, <span class="variable">$right</span>:<span class="number">0</span>, <span class="variable">$bottom</span>:<span class="number">0</span>) &#123;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="variable">$top</span> <span class="variable">$right</span> <span class="variable">$bottom</span> <span class="variable">$left</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="keyword">@if</span> variable-exists(<span class="attribute">color</span>) &#123;</span><br><span class="line">       <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@else</span> &#123;</span><br><span class="line">       <span class="attribute">content</span>: <span class="string">&quot;$color不存在&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">@if</span> mixin-exists(padding) &#123;</span><br><span class="line">       <span class="keyword">@include</span> padding(<span class="variable">$left</span>: <span class="number">10px</span>, <span class="variable">$right</span>: <span class="number">10px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自检函数通常用在代码的调试上</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记</title>
      <link href="/posts/6458a451360c/"/>
      <url>/posts/6458a451360c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML-文档详解"><a href="#HTML-文档详解" class="headerlink" title="HTML 文档详解"></a>HTML 文档详解</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> 声明为 HTML5 文档</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  元素是 HTML 页面的根元素</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> 元素包含了文档的元（meta）数据，如 <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> 定义网页编码格式为 utf-8</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> 元素描述了文档的标题</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span> 元素包含了可见的页面内容</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 元素定义一个段落</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>~<span class="tag">&lt;<span class="name">h6</span>&gt;</span> 标题元素呈现了六个不同的级别的标题，<span class="tag">&lt;<span class="name">h1</span>&gt;</span> 级别最高，而 <span class="tag">&lt;<span class="name">h6</span>&gt;</span> 级别最低</span><br></pre></td></tr></table></figure><h2 id="无语义化元素"><a href="#无语义化元素" class="headerlink" title="无语义化元素"></a>无语义化元素</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  无语义，主要用于页面的划分区域</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  无语义，仅用于给一段文本添加样式 例如：雪碧图</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span>  无语义，空元素，用于在页面中换行 不建议使用改标签，使用会导致页面布局的改变和不利于网站维护</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span> 无语义，空元素，用于在页面制造一个分割线 不建议使用该标签，使用会导致页面布局的改变和不利于网站维护</span><br></pre></td></tr></table></figure><h2 id="标记文本"><a href="#标记文本" class="headerlink" title="标记文本"></a>标记文本</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>主标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>         HTML 包括六个级别的标题， 一般最多用到 3-4 级标题</span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>顶层标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>子标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>次子标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>~<span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span>      通常用于指定常规的文本内容</span><br></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span>   表示一系列无序的列表项目，通常渲染为项目符号列表</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Mix flour, baking powder, sugar, and salt.<span class="tag">&lt;/<span class="name">li</span>&gt;</span>   表示有序列表，通常渲染为一个带编号的列表</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">reversed</span> <span class="attr">start</span>=<span class="string">&quot;只能整数&quot;</span> <span class="attr">type</span>=<span class="string">&quot;a/A/i/I/1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">reversed  此布尔值属性指定列表中的条目是否是倒序排列的，即编号是否应从高到低反向标注</span><br><span class="line">start  一个整数值属性，指定了列表编号的起始值。此属性的值应为阿拉伯数字，尽管列表条目的编号类型 type 属性可能指定为了罗马数字编号等其他类型的编号</span><br><span class="line">type  5个编号</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="描述列表"><a href="#描述列表" class="headerlink" title="描述列表"></a>描述列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>  <span class="comment">&lt;!-- 是一个包含术语定义以及描述的列表，通常用于展示词汇表或者元数据 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>内心独白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span> <span class="comment">&lt;!-- 用于在一个定义列表中声明一个术语 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>  <span class="comment">&lt;!-- 用来指明一个描述列表元素中一个术语的描述 --&gt;</span></span><br><span class="line">    戏剧中，某个角色对自己的内心活动或感受进行念白表演，这些台词只面向观众，而其他角色不会听到。</span><br><span class="line">  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>语言独白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">    戏剧中，某个角色把自己的想法直接进行念白表演，观众和其他角色都可以听到。</span><br><span class="line">  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>旁白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">    戏剧中，为渲染幽默或戏剧性效果而进行的场景之外的补充注释念白，只面向观众，内容一般都是角色的感受、想法、以及一些背景信息等。</span><br><span class="line">  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:/mailto:&quot;</span> <span class="attr">download</span>=<span class="string">&quot;&quot;</span> <span class="attr">ping</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self/_blank/_parent/_top&quot;</span>&gt;</span>这是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">download  导致浏览器将链接的 URL 视为下载资源</span><br><span class="line">href  超链接所指向的 URL</span><br><span class="line">    使用文档片段链接到页面的某一段</span><br><span class="line">    使用文本片段链接到某一段文字</span><br><span class="line">    使用媒体片段链接到某个媒体文件</span><br><span class="line">    tel:  URL 链接到一个电话号码</span><br><span class="line">    mailto:  URL 链接到一个邮箱地址</span><br><span class="line">ping  包含一个以空格分隔的 URL 列表，当跟随超链接时，浏览器会发送带有正文 PING 的 POST 请求。通常用于跟踪</span><br><span class="line">target  该属性指定在何处显示链接的 URL</span><br><span class="line">_self：当前页面加载（默认）</span><br><span class="line">_blank：通常在新标签页打开，但用户可以通过配置选择在新窗口打开</span><br><span class="line">_parent：当前浏览环境的父级浏览上下文。如果没有父级框架，行为与 _self 相同</span><br><span class="line">_top：最顶级的浏览上下文（当前浏览上下文中最“高”的祖先）。如果没有祖先，行为与 _self 相同</span><br></pre></td></tr></table></figure><h3 id="非文本类语义化标签"><a href="#非文本类语义化标签" class="headerlink" title="非文本类语义化标签"></a>非文本类语义化标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span>&gt;</span>  代表一段视频</span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span>&gt;</span>  代表一段音频</span><br></pre></td></tr></table></figure><h2 id="重点强调文本"><a href="#重点强调文本" class="headerlink" title="重点强调文本"></a>重点强调文本</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span> 元素可以嵌套，嵌套层次越深，则强调的程度越深</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>  用于表现因某些原因需要区分普通文本的一系列文本。例如技术术语、外文短语或是小说中人物的思想活动等，它的内容通常以斜体显示</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span> 应用场合如：摘要中的关键字、评论中的产品名称，或其他典型的应该加粗显示的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>  表示文本十分重要，一般用粗体显示</span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">mark</span>&gt;</span>  引用或符号目的而标记或突出显示的文本</span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span> 未阐明的注释（下划线）元素</span><br><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">cite</span>&gt;</span>  表示一个作品的引用，且必须包含作品的标题。这个引用可能是一个根据适当的上下文约定关联引用的元数据的缩写</span><br><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">q</span>&gt;</span>  代表小段的引用 功能：自带前后双引号 适用场景：名人名言</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span>  代表整段的引用 功能：会有相应的缩进 适用场景：古诗词（文字较多时）</span><br><span class="line">    </span><br><span class="line">用 <span class="tag">&lt;<span class="name">em</span>&gt;</span> 来强调重点</span><br><span class="line">用 <span class="tag">&lt;<span class="name">b</span>&gt;</span> 来吸引对文字的注意</span><br><span class="line">用 <span class="tag">&lt;<span class="name">mark</span>&gt;</span> 来标记关键词或短语</span><br><span class="line">用 <span class="tag">&lt;<span class="name">strong</span>&gt;</span> 来表明文本具有重要意义</span><br><span class="line">用 <span class="tag">&lt;<span class="name">cite</span>&gt;</span> 来标记书籍或其他出版物的标题</span><br><span class="line">用 <span class="tag">&lt;<span class="name">i</span>&gt;</span> 来表示西方文本中的技术术语、音译、思想或船名</span><br><span class="line">    </span><br><span class="line">不要将<span class="tag">&lt;<span class="name">b</span>&gt;</span>元素与 <span class="tag">&lt;<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">em</span>&gt;</span>或<span class="tag">&lt;<span class="name">mark</span>&gt;</span>元素混淆。 <span class="tag">&lt;<span class="name">strong</span>&gt;</span>元素表示某些重要性的文本，<span class="tag">&lt;<span class="name">em</span>&gt;</span>强调文本，而<span class="tag">&lt;<span class="name">mark</span>&gt;</span>元素表示某些相关性的文本。 <span class="tag">&lt;<span class="name">b</span>&gt;</span>元素不传达这样的特殊语义信息；仅在没有其他合适的元素时使用它</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span><span class="tag">&lt;/<span class="name">abbr</span>&gt;</span>  用于代表缩写，并且可以通过可选的 title 属性提供完整的描述</span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span> 与 <span class="tag">&lt;<span class="name">dfn</span>&gt;</span> 联合使用可以定义一个更加正式的缩写</span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span><span class="tag">&lt;/<span class="name">address</span>&gt;</span> 表示其中的 HTML 提供了某个人或某个组织（等等）的联系信息</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">sup</span>&gt;</span> 表示上标</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">sub</span>&gt;</span> 表示下标</span><br></pre></td></tr></table></figure><h3 id="展示计算机代码"><a href="#展示计算机代码" class="headerlink" title="展示计算机代码"></a>展示计算机代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> 用于标记计算机通用代码</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span> 用于保留空白字符（通常用于代码块）——如果文本中使用了缩进或多余的空白，浏览器将忽略它，你将不会在呈现的页面上看到它。   但是，如果你将文本包含在 <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span> 标签中，那么空白将会以与你在文本编辑器中看到的相同的方式渲染出来</span><br><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span><span class="tag">&lt;/<span class="name">var</span>&gt;</span> 用于标记具体变量名</span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 用于标记输入电脑的键盘（或其他类型）输入</span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span><span class="tag">&lt;/<span class="name">samp</span>&gt;</span> 用于标记计算机程序的输出</span><br></pre></td></tr></table></figure><h3 id="标记日期与时间"><a href="#标记日期与时间" class="headerlink" title="标记日期与时间"></a>标记日期与时间</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">&quot;2023-12-08&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span> 用来表示 24 小时制时间或者公历日期，若表示日期则也可包含时间和时区</span><br></pre></td></tr></table></figure><h2 id="文档与网站架构"><a href="#文档与网站架构" class="headerlink" title="*文档与网站架构"></a>*文档与网站架构</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span> 存放每个页面独有的内容。每个页面上只能用一次 <span class="tag">&lt;<span class="name">main</span>&gt;</span>，且直接位于 <span class="tag">&lt;<span class="name">body</span>&gt;</span> 中。最好不要把它嵌套进其他元素。</span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span> 包围的内容即一篇文章，与页面其他部分无关（比如一篇博文）。</span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span> 与 <span class="tag">&lt;<span class="name">article</span>&gt;</span> 类似，但 <span class="tag">&lt;<span class="name">section</span>&gt;</span> 更适用于组织页面使其按功能（比如迷你地图、一组文章标题和摘要）分块。一般的最佳用法是：以 标题 作为开头；也可以把一篇 <span class="tag">&lt;<span class="name">article</span>&gt;</span> 分成若干部分并分别置于不同的 <span class="tag">&lt;<span class="name">section</span>&gt;</span> 中，也可以把一个区段 <span class="tag">&lt;<span class="name">section</span>&gt;</span> 分成若干部分并分别置于不同的 <span class="tag">&lt;<span class="name">article</span>&gt;</span> 中，取决于上下文。</span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span> 包含一些间接信息（术语条目、作者简介、相关链接，等等）。</span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span> 是简介形式的内容。如果它是 <span class="tag">&lt;<span class="name">body</span>&gt;</span> 的子元素，那么就是网站的全局页眉。如果它是 <span class="tag">&lt;<span class="name">article</span>&gt;</span> 或<span class="tag">&lt;<span class="name">section</span>&gt;</span> 的子元素，那么它是这些部分特有的页眉（此 <span class="tag">&lt;<span class="name">header</span>&gt;</span> 非彼 标题）。</span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span> 包含页面主导航功能。其中不应包含二级链接等内容</span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span> 包含了页面的页脚部分</span><br></pre></td></tr></table></figure><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/qdkf_html_img1.webp" alt="2023-12-08_19-11-53.jpg"></p><h2 id="多媒体与嵌入"><a href="#多媒体与嵌入" class="headerlink" title="*多媒体与嵌入"></a>*多媒体与嵌入</h2><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span> 元素代表一段独立的内容,插图、标题和其中的内容通常作为一个独立的引用单元</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;xxx&quot;</span> /&gt;</span>   该元素通过包含图像文件路径的地址属性 src，可在所在位置嵌入图像,该元素还包括一个替换文字属性 alt，是图像的描述内容</span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span>&gt;</span> 标签与 <span class="tag">&lt;<span class="name">video</span>&gt;</span> 标签的使用方式几乎完全相同</span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;视频链接&quot;</span> <span class="attr">controls</span>&gt;</span> 插入视频标签</span><br><span class="line"><span class="tag">&lt;<span class="name">track</span> <span class="attr">default</span> <span class="attr">kind</span>=<span class="string">&quot;captions&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">src</span>=<span class="string">&quot;文本字幕.vtt&quot;</span> /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;音频链接&quot;</span> <span class="attr">controls</span>&gt;</span> 插入音频标签</span><br><span class="line"><span class="tag">&lt;<span class="name">track</span> <span class="attr">default</span> <span class="attr">kind</span>=<span class="string">&quot;captions&quot;</span> <span class="attr">srclang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">src</span>=<span class="string">&quot;文本字幕.vtt&quot;</span> /&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">视频和音频可添加的属性</span><br><span class="line">width 和 height</span><br><span class="line">你可以用属性控制视频的尺寸，也可以用 CSS 来控制视频尺寸。无论使用哪种方式，视频都会保持它原始的长宽比 — 也叫做纵横比。如果你设置的尺寸没有保持视频原始长宽比，那么视频边框将会拉伸，而未被视频内容填充的部分，将会显示默认的背景颜色。</span><br><span class="line"></span><br><span class="line">autoplay</span><br><span class="line">这个属性会使音频和视频内容立即播放，即使页面的其他部分还没有加载完全。建议不要应用这个属性在你的网站上，因为用户们会比较反感自动播放的媒体文件。</span><br><span class="line"></span><br><span class="line">loop</span><br><span class="line">这个属性可以让音频或者视频文件循环播放。同样不建议使用，除非有必要。</span><br><span class="line"></span><br><span class="line">muted</span><br><span class="line">这个属性会导致媒体播放时，默认关闭声音。</span><br><span class="line"></span><br><span class="line">poster</span><br><span class="line">这个属性指向了一个图像的 URL，这个图像会在视频播放前显示。通常用于粗略的预览或者广告。</span><br><span class="line"></span><br><span class="line">preload</span><br><span class="line">这个属性被用来缓冲较大的文件，有 3 个值可选：</span><br><span class="line">    &quot;none&quot; ：不缓冲</span><br><span class="line">    &quot;auto&quot; ：页面加载后缓存媒体文件</span><br><span class="line">    &quot;metadata&quot; ：仅缓冲文件的元数据</span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">track</span>&gt;</span>以下属性</span><br><span class="line">default</span><br><span class="line">该属性定义了该 track 应该启用，除非用户首选项指定了更合适一个 track。每个媒体元素里面只有一个 track 元素可以有这个属性。</span><br><span class="line"></span><br><span class="line">kind</span><br><span class="line">定义了 text track 应该如何使用。如果省略了该属性，默认的 kind 值就是 subtitles。下面是允许的关键字：</span><br><span class="line"></span><br><span class="line">subtitles</span><br><span class="line">字幕给观影者看不懂的内容提供了翻译。比如英文电影里非英文的对话框或者文字。</span><br><span class="line">字幕可能包含额外的内容，通常有附加的背景信息。比如在电影星球大战开头的文字，或者某个场景的日期，时间，还有地点。</span><br><span class="line">    </span><br><span class="line">captions</span><br><span class="line">隐藏式字幕提供了音频的转录甚至是翻译。</span><br><span class="line">可能包含重要的非言语的信息，比如音乐提示或者音效。可以指定提示音的源文件 (e.g. music, text, character).</span><br><span class="line">适用于耳聋的用户或者当调成静音的时候。</span><br><span class="line">    </span><br><span class="line">descriptions</span><br><span class="line">视频内容的文本描述。</span><br><span class="line">适用于失明用户或者当视频不可见的场景。</span><br><span class="line">    </span><br><span class="line">chapters</span><br><span class="line">章节标题用于用户浏览媒体资源的时候。</span><br><span class="line">    </span><br><span class="line">metadata</span><br><span class="line">脚本使用的 track。对用户不可见。</span><br><span class="line">    </span><br><span class="line">label</span><br><span class="line">当列出可用的 text tracks 时，给浏览器使用的 text track 的标题，这种标题是用户可读的。</span><br><span class="line"></span><br><span class="line">src</span><br><span class="line">track 的地址。必须是合法的 URL。该属性必须定义。</span><br><span class="line"></span><br><span class="line">srclang</span><br><span class="line">track 文本数据的语言。它必须是合法的 BCP 47 语言标签。如果 kind 属性被设为 subtitles, 那么 srclang 必须定义。</span><br></pre></td></tr></table></figure><h3 id="从-object-到-iframe——其他嵌入技术"><a href="#从-object-到-iframe——其他嵌入技术" class="headerlink" title="从 object 到 iframe——其他嵌入技术"></a>从 object 到 iframe——其他嵌入技术</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;inlineFrameExample&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Inline Frame Example&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">src</span>=<span class="string">&quot;嵌入的网址链接&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>  它能够将另一个 HTML 页面嵌入到当前页面中。</span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span>&gt;</span> 和 <span class="tag">&lt;<span class="name">object</span>&gt;</span> 元素</span><br><span class="line">    </span><br><span class="line">然而，你不太可能使用这些元素——Applet 几年来一直没有被使用；由于许多原因，Flash 不再受欢迎（见下面的插件案例）；PDF 更倾向于被链接而不是被嵌入；其他内容，如图像和视频都有更优秀、更容易元素来处理。插件和这些嵌入方法真的是一种传统技术，我们提及它们主要是为了以防你在某些情况下遇到问题，比如内部网或企业项目等。</span><br></pre></td></tr></table></figure><blockquote><h4 id="具体属性请参考"><a href="#具体属性请参考" class="headerlink" title="具体属性请参考"></a>具体属性请参考</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies">从 object 到 iframe——其他嵌入技术 - 学习 Web 开发 | MDN (mozilla.org)</a></p></blockquote><h3 id="在网页中添加矢量图形"><a href="#在网页中添加矢量图形" class="headerlink" title="在网页中添加矢量图形"></a>在网页中添加矢量图形</h3><p>SVG 是用于描述矢量图像的XML语言。它基本上是像 HTML 一样的标记，只是你有许多不同的元素来定义要显示在图像中的形状，以及要应用于这些形状的效果。SVG 用于标记图形，而不是内容。非常简单，你有一些元素来创建简单图形，如<circle> 和<rect>。更高级的 SVG 功能包括 <feColorMatrix>（使用变换矩阵转换颜色）<animate> （矢量图形的动画部分）和 <mask>（在图像顶部应用模板）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span></span></span><br><span class="line"><span class="tag">  <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">baseProfile</span>=<span class="string">&quot;full&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">&quot;300&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;black&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;150&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;100&quot;</span> <span class="attr">r</span>=<span class="string">&quot;90&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;blue&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>详细内容请参考</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web">在网页中添加矢量图形 - 学习 Web 开发 | MDN (mozilla.org)</a></p></blockquote><h2 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">&quot;background-color: yellow&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span> 定义表格中的行</span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Data 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span> 表格内的表头单元格</span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Data 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Calcutta<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  定义了一个包含数据的表格单元格</span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Orange<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Robots<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jazz<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>详细内容请参考</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Tables/Basics">HTML 表格基础 - 学习 Web 开发 | MDN (mozilla.org)</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Tables/Advanced">HTML 表格高级特性和无障碍 - 学习 Web 开发 | MDN (mozilla.org)</a></p></blockquote><h2 id="Web-表单指南"><a href="#Web-表单指南" class="headerlink" title="*Web 表单指南"></a>*Web 表单指南</h2><blockquote><p>太多了</p><p>请参考下方链接</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Forms">Web 表单指南 - 学习 Web 开发 | MDN (mozilla.org)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java JDK下载安装及环境配置教程</title>
      <link href="/posts/0d33f3cbebde/"/>
      <url>/posts/0d33f3cbebde/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JDK下载"><a href="#JDK下载" class="headerlink" title="JDK下载"></a>JDK下载</h2><p>进入oracle打开浏览器输入网址<a href="https://www.oracle.com/java/technologies/downloads/#jdk21-">https://www.oracle.com/java/technologies/downloads/#jdk21-</a><br>在该界面可以找到各种版本的JDK，选择自己需要的版本进行下载即可。在这里本人选择JDK21的 X64<br><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img1.webp" alt="JDK21_1.webp">.</p><h2 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h2><p>下载完JDK到本地后，找到该文件，双击运行JDK安装程序</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img2.webp" alt="JDK21_2.webp"></p><p>等待一会，进入JDK安装界面，点击下一步</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img3.webp" alt="JDK21_3.webp"></p><p>可以直接默认目录，点击下一步。也可以自定义路径，先创建一个文件夹名为 Java，再在该文件夹下创建一个文件夹为 JDK 安装目录</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img4.webp" alt="JDK21_4.webp"></p><p>至此JDK已经安装完毕，点击关闭</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img5.webp" alt="JDK21_5.webp"></p><h2 id="JDK配置"><a href="#JDK配置" class="headerlink" title="JDK配置"></a>JDK配置</h2><p>win+R，在输入框输入<code>sysdm.cpl</code></p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img6.webp" alt="JDK21_6.webp"></p><p>打开环境变量</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img7.webp" alt="JDK21_7.webp"></p><p>点击新建，变量名为<code>JAVA_HOME</code>,变量值为刚刚JDK安装的路径，点击确定</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img8.webp" alt="JDK21_8.webp"></p><p>双击 <code>path</code>进入界面后，点击编辑</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img9.webp" alt="JDK21_9.webp"></p><p>新建输入<code>%JAVA_HOME%\bin</code></p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img10.webp" alt="JDK21_10.webp"></p><h2 id="查看配置是否成功"><a href="#查看配置是否成功" class="headerlink" title="查看配置是否成功"></a>查看配置是否成功</h2><p>点击确定，全部确定退出后，依旧按 Win+R，输入 cmd 进入命令提示符界面，输入 <code>java -version</code>，出现下面这个配置成功</p><p><img src="https://lvemix.oss-cn-hangzhou.aliyuncs.com/posts/hdkf_jdk_img11.webp" alt="JDK21_11.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Java </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
